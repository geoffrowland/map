{"version":3,"sources":["webpack:///./node_modules/terriajs-cesium/Source/Core/CornerType.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/CompositeProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/CompositePositionProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/ReferenceProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/ScaledPositionProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/PositionPropertyArray.js","webpack:///./node_modules/terriajs-cesium/Source/Core/HermitePolynomialApproximation.js","webpack:///./node_modules/terriajs-cesium/Source/Core/LagrangePolynomialApproximation.js","webpack:///./node_modules/terriajs-cesium/Source/Core/Spherical.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/CheckerboardMaterialProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/CompositeMaterialProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/GridMaterialProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/PolylineArrowMaterialProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/PolylineDashMaterialProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/PolylineOutlineMaterialProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/PropertyArray.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/Rotation.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/StripeOrientation.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/StripeMaterialProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/VelocityVectorProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/VelocityOrientationProperty.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/CzmlDataSource.js","webpack:///./node_modules/terriajs-cesium/Source/ThirdParty/Autolinker.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/KmlCamera.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/KmlLookAt.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/KmlTour.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/KmlTourFlyTo.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/KmlTourWait.js","webpack:///./node_modules/terriajs-cesium/Source/DataSources/KmlDataSource.js"],"names":["_freezeObject_js__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","__webpack_exports__","Object","ROUNDED","MITERED","BEVELED","_Core_defined_js__WEBPACK_IMPORTED_MODULE_0__","_Core_defineProperties_js__WEBPACK_IMPORTED_MODULE_1__","_Core_Event_js__WEBPACK_IMPORTED_MODULE_3__","_Core_EventHelper_js__WEBPACK_IMPORTED_MODULE_4__","_Core_TimeIntervalCollection_js__WEBPACK_IMPORTED_MODULE_5__","_Property_js__WEBPACK_IMPORTED_MODULE_6__","CompositeProperty","this","_eventHelper","_definitionChanged","_intervals","changedEvent","addEventListener","prototype","_intervalsChanged","isConstant","get","isEmpty","definitionChanged","intervals","getValue","time","result","innerProperty","findDataForIntervalContainingDate","equals","other","property","eventHelper","callback","raiseEvent","items","removeAll","length","i","interval","data","indexOf","add","subscribeAll","_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__","_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__","_Core_defineProperties_js__WEBPACK_IMPORTED_MODULE_2__","_Core_Event_js__WEBPACK_IMPORTED_MODULE_4__","_Core_ReferenceFrame_js__WEBPACK_IMPORTED_MODULE_5__","_CompositeProperty_js__WEBPACK_IMPORTED_MODULE_6__","_Property_js__WEBPACK_IMPORTED_MODULE_7__","CompositePositionProperty","referenceFrame","_referenceFrame","FIXED","_composite","_raiseDefinitionChanged","set","value","getValueInReferenceFrame","_Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_4__","_Property_js__WEBPACK_IMPORTED_MODULE_5__","resolve","that","targetProperty","_targetProperty","_resolveProperty","entityIsResolved","_resolveEntity","targetEntity","_targetCollection","getById","_targetId","ReferenceProperty","_onTargetEntityDefinitionChanged","_targetEntity","resolveEntity","names","_targetPropertyNames","join","targetCollection","targetId","targetPropertyNames","undefined","collectionChanged","_onCollectionChanged","resolvedProperty","fromString","referenceString","identifier","values","inIdentifier","isEscaped","token","c","charAt","push","getType","otherNames","name","oldValue","collection","added","removed","removeEventListener","_Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_3__","ScaledPositionProperty","_value","_removeSubscription","setValue","WGS84","scaleToGeodeticSurface","_Core_EventHelper_js__WEBPACK_IMPORTED_MODULE_5__","_Core_ReferenceFrame_js__WEBPACK_IMPORTED_MODULE_6__","PositionPropertyArray","Array","x","itemValue","slice","arrayEquals","factorial","Core_Math","calculateCoefficientTerm","zIndices","xTable","derivOrder","termOrder","reservedIndices","reserved","j","splice","HermitePolynomialApproximation","type","getRequiredDataPoints","degree","inputOrder","defaultValue","Math","max","floor","interpolateOrderZero","yTable","yStride","d","s","index","defined","coefficients","l","zIndicesLength","highestNonZeroCoef","nonZeroCoefficients","numerator","zj","zn","tempTerm","coeff","arrayScratch","interpolate","outputOrder","resultLength","r","zIndiceslength","highestNonZero","tmp","dimOne","coefIndex","dimTwo","coefficient","dimTwoMinusOne","fillCoefficientList","loopStop","min","coef","Core_HermitePolynomialApproximation","LagrangePolynomialApproximation","diffX","Core_LagrangePolynomialApproximation","Spherical","clock","cone","magnitude","fromCartesian3","cartesian3","y","z","radialSquared","atan2","sqrt","clone","spherical","normalize","left","right","equalsEpsilon","epsilon","abs","toString","Core_Spherical","defaultEvenColor","Color","WHITE","defaultOddColor","BLACK","defaultRepeat","Cartesian2","CheckerboardMaterialProperty","options","EMPTY_OBJECT","Event","_evenColor","_evenColorSubscription","_oddColor","_oddColorSubscription","_repeat","_repeatSubscription","evenColor","oddColor","repeat","defineProperties","Property","createPropertyDescriptor","lightColor","getValueOrClonedDefault","darkColor","getValueOrDefault","DataSources_CheckerboardMaterialProperty","CompositeMaterialProperty","DataSources_CompositeMaterialProperty","defaultColor","defaultLineCount","defaultLineOffset","defaultLineThickness","GridMaterialProperty","_color","_colorSubscription","_cellAlpha","_cellAlphaSubscription","_lineCount","_lineCountSubscription","_lineThickness","_lineThicknessSubscription","_lineOffset","_lineOffsetSubscription","color","cellAlpha","lineCount","lineThickness","lineOffset","DataSources_GridMaterialProperty","PolylineArrowMaterialProperty","DataSources_PolylineArrowMaterialProperty","PolylineDashMaterialProperty_defaultColor","defaultGapColor","TRANSPARENT","PolylineDashMaterialProperty","_gapColor","_gapColorSubscription","_dashLength","_dashLengthSubscription","_dashPattern","_dashPatternSubscription","gapColor","dashLength","dashPattern","DataSources_PolylineDashMaterialProperty","PolylineOutlineMaterialProperty_defaultColor","defaultOutlineColor","PolylineOutlineMaterialProperty","_outlineColor","_outlineColorSubscription","_outlineWidth","_outlineWidthSubscription","outlineColor","outlineWidth","DataSources_PolylineOutlineMaterialProperty","PropertyArray","EventHelper","DataSources_PropertyArray","DataSources_Rotation","packedLength","pack","array","startingIndex","unpack","convertPackedArrayForInterpolation","packedArray","lastIndex","previousValue","len","PI","TWO_PI","unpackInterpolationResult","sourceArray","firstIndex","DataSources_StripeOrientation","freezeObject","HORIZONTAL","VERTICAL","defaultOrientation","StripeMaterialProperty_defaultEvenColor","StripeMaterialProperty_defaultOddColor","StripeMaterialProperty","_orientation","_orientationSubscription","_offset","_offsetSubscription","orientation","offset","horizontal","DataSources_StripeMaterialProperty","VelocityVectorProperty","position","_position","_subscription","_normalize","position1Scratch","Cartesian3","position2Scratch","timeScratch","JulianDate","_getValue","velocityResult","positionResult","ZERO","position1","position2","addSeconds","velocity","subtract","divideByScalar","DataSources_VelocityVectorProperty","VelocityOrientationProperty","ellipsoid","_velocityVectorProperty","_ellipsoid","Ellipsoid","positionScratch","velocityScratch","rotationScratch","Matrix3","Transforms","rotationMatrixFromPositionVelocity","Quaternion","fromRotationMatrix","currentId","DataSources_VelocityOrientationProperty","UnitCartesian3","createReferenceProperty","entityCollection","createSpecializedProperty","packetData","reference","velocityReference","referenceProperty","RuntimeError","JSON","stringify","scratchCartesian","scratchSpherical","scratchCartographic","Cartographic","scratchTimeInterval","TimeInterval","scratchQuaternion","unwrapUriInterval","czmlInterval","sourceUri","uri","getDerivedResource","url","Resource","createIfNeeded","unwrapCartesianInterval","cartesian","cartesianVelocity","unitCartesian","unitSpherical","fromSpherical","convertUnitSphericalToCartesian","convertSphericalToCartesian","cartographicRadians","longitude","latitude","height","cartographicToCartesian","convertCartographicRadiansToCartesian","cartographicDegrees","toRadians","convertCartographicDegreesToCartesian","normalizePackedCartesianArray","normalizePackedQuaternionArray","getPropertyType","Boolean","Number","String","hasOwnProperty","BoundingRectangle","ArcType","ClassificationType","ColorBlendMode","CornerType","HeightReference","HorizontalOrigin","LabelStyle","NearFarScalar","DistanceDisplayCondition","ShadowMode","Rectangle","Uri","VerticalOrigin","unwrapInterval","arcType","boundingRectangle","cartesian2","unwrapUnitCartesianInterval","rgbaf","rgba","byteToFloat","unwrapColorInterval","classificationType","colorBlendMode","cornerType","heightReference","horizontalOrigin","Image","fromIso8601","date","labelStyle","number","nearFarScalar","distanceDisplayCondition","object","unitQuaternion","unwrapQuaternionInterval","wsen","wsenDegrees","unwrapRectangleInterval","shadowMode","shadows","string","stripeOrientation","verticalOrigin","interpolators","HERMITE","LAGRANGE","LINEAR","LinearApproximation","updateInterpolationSettings","interpolationAlgorithm","interpolationDegree","setInterpolationOptions","forwardExtrapolationType","ExtrapolationType","forwardExtrapolationDuration","backwardExtrapolationType","backwardExtrapolationDuration","iso8601Scratch","iso8601","intervalFromString","intervalString","wrapPropertyInInfiniteInterval","Iso8601","MAXIMUM_INTERVAL","convertPropertyToComposite","composite","addInterval","convertPositionPropertyToComposite","processProperty","propertyName","constrainedInterval","unwrappedInterval","unwrappedIntervalLength","combinedInterval","intersect","isValue","hasInterval","delete","removePropertyData","SampledProperty","removeSamples","TimeIntervalCollectionProperty","removeInterval","intersection","isSampled","needsUnpacking","epoch","packetEpoch","addSamplesPackedArray","ConstantProperty","findInterval","processPacketData","isArray","processPositionProperty","numberOfDerivatives","removePositionPropertyData","SampledPositionProperty","TimeIntervalCollectionPositionProperty","ReferenceFrame","ConstantPositionProperty","processPositionPacketData","processMaterialProperty","existingMaterial","existingInterval","materialData","thisIntervals","start","stop","solidColor","ColorMaterialProperty","grid","image","ImageMaterialProperty","transparent","stripe","polylineOutline","polylineGlow","PolylineGlowMaterialProperty","glowPower","taperPower","polylineArrow","polylineDash","checkerboard","processMaterialPacketData","processReferencesArrayPacketData","references","PropertyArrayType","CompositePropertyArrayType","properties","map","processArrayPacketData","processArray","processPositionArrayPacketData","unpackArray","fromRadiansArrayHeights","fromDegreesArrayHeights","processPositionArray","unpackCartesianArray","unpackCartographicRadiansArray","unpackCartographicDegreesArray","processPositionArrayOfArraysPacketData","referenceArray","tempObj","positions","processNodeTransformations","model","nodeTransformationsData","nodeTransformations","nodeNames","keys","nodeName","nodeTransformationData","PropertyBag","hasProperty","addProperty","nodeTransformation","NodeTransformationProperty","translation","rotation","scale","processArticulations","articulationsData","articulations","key","articulationStageData","PolygonHierarchyProperty","polygon","adaptFollowSurfaceToArcType","followSurface","GEODESIC","NONE","processCzmlPacket","packet","updaterFunctions","dataSource","objectId","id","createGuid","_version","removeById","version","tokens","split","documentPacket","_documentPacket","clockPacket","currentTime","range","step","multiplier","processDocument","entity","getOrCreateEntity","parentId","parent","load","czml","clear","promise","credit","Credit","_credit","fetchJson","resourceCredits","_resourceCredits","credits","DataSource","setLoading","when","_entityCollection","DocumentPacket","CzmlDataSource","_processCzml","raiseChangedEvent","_clock","availability","computeAvailability","MINIMUM_VALUE","startTime","stopTime","totalSeconds","secondsDifference","round","DataSourceClock","clockRange","ClockRange","LOOP_STOP","clockStep","ClockStep","SYSTEM_CLOCK_MULTIPLIER","MAXIMUM_VALUE","updateClock","_name","getFilenameFromUri","getUrlComponent","_changed","loadCzml","otherwise","error","_error","console","log","reject","_isLoading","_loading","EntityCollection","_entityCluster","EntityCluster","_positions","holes","_holes","holePositions","PolygonHierarchy","entities","isLoading","errorEvent","loadingEvent","show","clustering","updaters","billboardData","billboard","BillboardGraphics","pixelOffset","eyeOffset","processAlignedAxis","alignedAxis","sizeInMeters","width","scaleByDistance","translucencyByDistance","pixelOffsetScaleByDistance","imageSubRegion","disableDepthTestDistance","boxData","box","BoxGraphics","dimensions","fill","material","outline","corridorData","corridor","CorridorGraphics","extrudedHeight","extrudedHeightReference","granularity","zIndex","cylinderData","cylinder","CylinderGraphics","topRadius","bottomRadius","numberOfVerticalLines","slices","ellipseData","ellipse","EllipseGraphics","semiMajorAxis","semiMinorAxis","stRotation","ellipsoidData","EllipsoidGraphics","radii","innerRadii","minimumClock","maximumClock","minimumCone","maximumCone","stackPartitions","slicePartitions","subdivisions","labelData","label","LabelGraphics","text","font","style","showBackground","backgroundColor","backgroundPadding","fillColor","modelData","ModelGraphics","gltf","minimumPixelSize","maximumScale","incrementallyLoadTextures","runAnimations","clampAnimations","silhouetteColor","silhouetteSize","colorBlendAmount","nameData","descriptionData","description","pathData","path","PathGraphics","leadTime","trailTime","resolution","pointData","point","PointGraphics","pixelSize","polygonData","PolygonGraphics","processPositionArrayOfArrays","hierarchy","perPositionHeight","closeTop","closeBottom","polylineData","polyline","adapterFunction","PolylineGraphics","depthFailMaterial","clampToGround","CallbackProperty","propertiesData","propertyData","rectangleData","rectangle","RectangleGraphics","coordinates","positionData","viewFromData","viewFrom","wallData","wall","WallGraphics","minimumHeights","maximumHeights","orientationData","TimeIntervalCollection","process","Autolinker_tmp","Autolinker","arr","element","remove","fn","throwUnhandledCaseError","theValue","Error","HtmlTag","cfg","tagName","attrs","innerHTML","whitespaceRegex","innerHtml","setTagName","getTagName","setAttr","attrName","attrValue","tagAttrs","getAttrs","getAttr","setAttrs","assign","setClass","cssClass","addClass","newClass","classAttr","getClass","classes","newClasses","shift","removeClass","removeClasses","idx","hasClass","setInnerHTML","html","setInnerHtml","getInnerHTML","getInnerHtml","toAnchorString","attrsStr","buildAttrsStr","attrsArr","prop","AnchorTagBuilder","newWindow","truncate","className","build","match","createAttrs","processAnchorText","getAnchorText","href","getAnchorHref","createCssClass","returnClasses","cssClassSuffixes","getCssClassSuffixes","anchorText","doTruncate","truncateLength","truncateLocation","location","truncateLen","ellipsisChars","ellipsisLengthBeforeParsing","ellipsisLength","buildUrl","urlObj","scheme","host","query","fragment","buildSegment","segment","remainingAvailableLength","remainingAvailableLengthHalf","startOffset","ceil","endOffset","end","substr","availableLength","urlSub","parse_url","matchQuery","replace","str","pathAndQuery","remainingAvailableLength2","truncateSmart","truncateMiddle","substring","ellipsis","truncateEnd","Match","__jsduckDummyDocProp","matchedText","tagBuilder","getMatchedText","setOffset","getOffset","buildTag","extendStatics","b","setPrototypeOf","__proto__","p","__extends","__","constructor","create","__assign","t","n","arguments","call","apply","EmailMatch","_super","_this","email","getEmail","HashtagMatch","serviceName","hashtag","getServiceName","getHashtag","MentionMatch","mention","getMention","PhoneMatch","plusSign","getPhoneNumber","getNumber","UrlMatch","urlMatchType","protocolUrlMatch","protocolRelativeMatch","stripPrefix","www","stripTrailingSlash","decodePercentEncoding","schemePrefixRegex","wwwPrefixRegex","protocolRelativeRegex","protocolPrepended","getUrlMatchType","getUrl","stripProtocolRelativePrefix","stripSchemePrefix","stripWwwPrefix","removeTrailingSlash","removePercentEncoding","preProcessedEntityAnchorText","decodeURIComponent","e","Matcher","letterRe","digitRe","whitespaceRe","quoteRe","controlCharsRe","alphaCharsStr","source","alphaCharsAndMarksStr","decimalNumbersStr","alphaNumericCharsStr","alphaNumericAndMarksCharsStr","ipStr","domainLabelStr","getDomainLabelStr","group","getDomainNameStr","domainNameCharRegex","RegExp","tldRegex","EmailMatcher","localPartCharRegex","strictTldRegex","parseMatches","matches","noCurrentEmailMatch","CurrentEmailMatch","mailtoTransitions","m","a","o","charIdx","state","currentEmailMatch","char","stateNonEmailAddress","stateMailTo","stateLocalPart","stateLocalPartDot","stateAtSign","stateDomainChar","stateDomainHyphen","stateDomainDot","captureMatchIfValidAndReset","beginEmailMatch","test","prevChar","hasMailtoPrefix","resetToNonEmailMatchState","hasDomainDot","newState","emailAddress","emailAddressNormalized","pop","toLowerCase","doesEmailHaveValidTld","UrlMatchValidator","isValid","urlMatch","isValidUriScheme","urlMatchDoesNotHaveProtocolOrDot","urlMatchDoesNotHaveAtLeastOneWordChar","isValidIpAddress","containsMultipleDots","uriSchemeMatch","newRegex","hasFullProtocolRegex","ipRegex","uriScheme","stringBeforeSlash","uriSchemeMatchArr","uriSchemeRegex","hasWordCharAfterProtocolRegex","UrlMatcher","urlSuffixRegex","matcherRegex","wordCharRegExp","_loop_1","matchStr","schemeUrlMatch","wwwUrlMatch","wwwProtocolRelativeMatch","tldProtocolRelativeMatch","this_1","matchHasUnbalancedClosingParen","pos","matchHasInvalidCharAfterTld","foundCommonScheme","find","commonScheme","indexOfSchemeStart","exec","startChar","endChar","numOpenBraces","re","res","HashtagMatcher","nonWordCharRegex","PhoneMatcher","cleanNumber","before","after","contextClear","testMatch","MentionMatcher","matcherRegexes","twitter","instagram","soundcloud","parseHtml","_a","onOpenTag","onCloseTag","onText","onComment","onDoctype","noCurrentTag","CurrentTag","currentDataIdx","currentTag","stateData","stateTagOpen","stateEndTagOpen","stateTagName","stateBeforeAttributeName","stateAttributeName","stateAfterAttributeName","stateBeforeAttributeValue","stateAttributeValueDoubleQuoted","stateAttributeValueSingleQuoted","stateAttributeValueUnquoted","stateAfterAttributeValueQuoted","stateSelfClosingStartTag","toUpperCase","resetToDataState","stateCommentStart","stateCommentStartDash","stateComment","stateCommentEndDash","stateCommentEnd","stateCommentEndBang","stateDoctype","startNewTag","isClosing","isOpening","captureTagName","emitTagAndPreviousTextNode","textBeforeTag","startIdx","urls","phone","replaceFn","context","matchers","normalizeUrlsCfg","normalizeStripPrefixCfg","normalizeTruncateCfg","link","textOrHtml","autolinker","parse","schemeMatches","wwwMatches","tldMatches","dest","src","defaults","POSITIVE_INFINITY","skipTagNames","skipTagsStackCount","textSplit","splitRegex","global","lastIdx","splitAndCapture","currentOffset_1","forEach","splitText","textNodeMatches","parseText","compactMatches","removeUnwantedMatches","sort","matchedTextLength","endIdx","removeIdx","getMatchers","numMatchers","textMatches","numTextMatches","newHtml","createMatchReturnVal","replaceFnResult","anchorTag","getTagBuilder","matcher","Email","Hashtag","Mention","Phone","Url","factory","DataSources_KmlCamera","headingPitchRoll","DataSources_KmlLookAt","headingPitchRange","KmlTour","playlistIndex","playlist","tourStart","tourEnd","entryStart","entryEnd","_activeEntries","cancelAllEntries","activeEntries","entry","playEntry","viewer","cameraOptions","allDone","_playNext","terminated","indx","bind","blocking","play","scene","camera","tour","addPlaylistEntry","DataSources_KmlTour","KmlTourFlyTo","duration","flyToMode","view","activeCamera","activeCallback","done","self","getCameraOptions","flyTo","target","BoundingSphere","flyToBoundingSphere","cancelFlight","complete","easingFunction","EasingFunction","LINEAR_NONE","destination","combine","DataSources_KmlTourFlyTo","KmlTourWait","timeout","setTimeout","clearTimeout","parser","DataSources_KmlTourWait","MimeTypes","avi","bmp","bz2","chm","css","csv","doc","dvi","eps","flv","gif","gz","htm","ico","jnlp","jpeg","jpg","m3u","m4v","mathml","mid","midi","mov","mp3","mp4","mp4v","mpeg","mpg","odp","ods","odt","ogg","pdf","png","pps","ppt","ps","qt","rdf","rss","rtf","svg","swf","tif","tiff","txt","wav","wma","wmv","xml","zip","detectFromFilename","filename","ext","getExtensionFromUri","DOMParser","BILLBOARD_SIZE","BILLBOARD_NEAR_DISTANCE","BILLBOARD_NEAR_RATIO","BILLBOARD_FAR_DISTANCE","BILLBOARD_FAR_RATIO","kmlNamespaces","gxNamespaces","namespaces","kml","gx","atom","kmlgx","concat","featureTypes","Document","Folder","node","processingData","deferredLoading","processFeature","newProcessingData","parentEntity","Placemark","placemark","styleEntity","hasGeometry","childNodes","childNode","item","geometryProcessor","geometryTypes","localName","merge","processPositionGraphics","NetworkLink","networkEntity","sourceResource","uriResolver","queryFirstNode","viewRefreshMode","viewBoundScale","queryStringValue","newSourceUri","resolveHref","defaultViewFormat","viewFormat","httpQuery","setQueryParameters","queryToObject","cleanupString","processNetworkLinkQueryString","_camera","_canvas","_lastCameraView","bbox","networkLinkCollection","then","rootElement","newEntities","suspendEvents","newEntity","mergeAvailabilityWithParent","resumeEvents","refreshMode","refreshInterval","queryNumericValue","networkLinkControl","hasNetworkLinkControl","now","networkLinkInfo","cookie","lastUpdated","updating","needsUpdate","cameraUpdateTime","minRefreshPeriod","RefreshMode","INTERVAL","expires","diff","EXPIRE","oneTimeWarning","STOP","_networkLinks","addPromise","GroundOverlay","groundOverlay","geometry","isLatLonQuad","readCoordinates","createDefaultPolygon","latLonBox","west","south","east","north","negativePiToPi","clampToLatitudeRange","rotationRadians","iconNode","getIconHref","w","h","queryColorValue","altitudeMode","PhotoOverlay","processUnsupportedFeature","ScreenOverlay","Tour","queryStringAttribute","playlistNode","entryNode","playlistNodeProcessor","playlistNodeProcessors","kmlTours","DeferredLoading","_dataSource","_deferred","ThirdParty_when","defer","_stack","_promises","_timeoutSet","_used","_started","_timeThreshold","insertNamespaces","firstPart","lastPart","declaration","namespaceMap","xsi","removeDuplicateNamespaces","namespace","startIndex","endIndex","endDeclaration","loadDataUriFromZip","deferred","mimeType","getData","Data64URIWriter","dataUri","embedDataUris","div","elementType","attributeName","baseUri","elements","querySelectorAll","getAttribute","setAttribute","applyBasePath","resource","createEntity","Entity","KmlFeatureData","isExtrudable","gxAltitudeMode","readCoordinate","fromDegrees","digits","parseFloat","isNaN","tuples","textContent","resultIndex","queryNumericAttribute","q","child","namespaceURI","queryNodes","getElementsByTagNameNS","queryChildNodes","resultNode","trim","queryBooleanValue","blob","addNodes","nodes","wait","all","isFirstCall","KmlDataSource","_getTimestamp","_process","_giveUpTime","_nextNode","stack","top","_pop","featureProcessor","colorOptions","maximumRed","red","maximumGreen","green","maximumBlue","blue","parseColorString","isRandom","alpha","parseInt","fromRandom","createDefaultBillboard","createDefaultLabel","LEFT","FILL_AND_OUTLINE","canRefresh","palette","hrefResource","processBillboardIcon","heading","icon","xOffset","yOffset","hotSpotNode","hotSpotX","hotSpotY","hotSpotXUnit","hotSpotYUnit","UNIT_Z","applyStyle","styleNode","bgColor","textColor","balloonStyle","listItemType","processExternalStyles","styleCollection","fetchXML","styleKml","processStyles","isExternal","styleNodes","styleNodesLength","styleMaps","styleMapsLength","styleMap","pairs","pair","styleUrl","base","promises","styleUrlNodes","getElementsByTagName","styleUrlNodesLength","styleReference","createDropLine","entityPosition","surfacePosition","heightReferenceFromAltitudeMode","CLAMP_TO_GROUND","RELATIVE_TO_GROUND","createPositionPropertyFromAltitudeMode","_pinBuilder","fromColor","YELLOW","_clampToGround","processPathGraphics","processLineStringOrLinearRing","geometryNode","coordinatesNode","extrude","tessellate","canExtrude","polylineGraphics","propertiesLength","createPositionPropertyArrayFromAltitudeMode","addToMultiTrack","times","dropShowProperty","includeEndPoints","addSamples","isStartIncluded","isStopIncluded","scratchDiv","Point","coordinatesString","LineString","LinearRing","Polygon","outerBoundaryIsNode","linearRingNode","innerBoundaryIsNodes","k","Track","coordNodes","angleNodes","timeNodes","MultiTrack","lastStop","lastStopPosition","trackNodes","needDropLine","trackNode","MultiGeometry","childEntity","Model","featureNode","kmlData","placeMark","styleIndex","inlineStyleNode","externalStyle","computeFinalStyle","beginNode","beginDate","endNode","endDate","lessThan","processTimeSpan","whenString","processTimeStamp","visibility","ancestryIsVisible","authorNode","author","linkNode","hreflang","rel","title","address","phoneNumber","snippet","extendedDataNode","dataNodes","dataNode","displayName","extendedData","processExtendedData","background","foreground","isDisplayName","links","toCssColorString","processDescription","processLookAt","processCamera","document","createElement","FlyTo","lookAt","flyto","Wait","SoundCue","processTourUnsupportedNode","AnimatedUpdate","TourControl","lon","lat","altitude","tilt","roll","hpr","HeadingPitchRoll","HeadingPitchRange","PI_OVER_TWO","viewPoint","_unsupportedNode","sFirst","zeroRectangle","scratchCartesian2","scratchCartesian3","canvas","fixLatitude","fixLongitude","queryString","objectToQuery","queryParameters","_mode","SceneMode","MORPHING","centerCartesian","centerCartographic","clientWidth","clientHeight","pickEllipsoid","cartesianToCartographic","center","EPSILON9","newHalfWidth","newHalfHeight","toDegrees","pitch","distance","positionWC","frustum","aspectRatio","horizFov","vertFov","fov","loadKml","documentElement","_DeferredLoading","processFeatureNode","loadKmz","createReader","BlobReader","reader","getEntries","entries","docEntry","docDefer","directory","innerDefer","TextWriter","parseFromString","loadXmlFromZip","close","fetchBlob","DEFAULT","dataToLoad","Blob","magicBlob","size","FileReader","DataView","getUint32","readAsArrayBuffer","isZip","readAsText","body","msg","firstChild","nodeValue","innerText","_refresh","PinBuilder","AssociativeArray","direction","directionWC","up","upWC","computeViewRectangle","MAX_VALUE","parentAvailability","childAvailability","refreshEvent","unsupportedNodeEvent","oldName","isMinStart","isMaxStop","Date","setHours","fromDate","changed","entitiesToIgnore","update","networkLinks","cameraViewUpdate","lastCameraView","EPSILON7","newNetworkLinks","networkLink","contains","doUpdate","greaterThan","recurseIgnoreEntities","children","_children","count","newEntityCollection","processedHref","networkLinkEntity","entitiesCopy","entityToRemove","removeChildren","getNetworkLinkUpdateCallback","getTimestamp"],"mappings":"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","file":"2.TerriaJS-specs.js","sourcesContent":["import freezeObject from './freezeObject.js';\n\n    /**\n     * Style options for corners.\n     *\n     * @demo The {@link https://sandcastle.cesium.com/index.html?src=Corridor.html&label=Geometries|Corridor Demo}\n     * demonstrates the three corner types, as used by {@link CorridorGraphics}.\n     *\n     * @exports CornerType\n     */\n    var CornerType = {\n        /**\n         * <img src=\"Images/CornerTypeRounded.png\" style=\"vertical-align: middle;\" width=\"186\" height=\"189\" />\n         *\n         * Corner has a smooth edge.\n         * @type {Number}\n         * @constant\n         */\n        ROUNDED : 0,\n\n        /**\n         * <img src=\"Images/CornerTypeMitered.png\" style=\"vertical-align: middle;\" width=\"186\" height=\"189\" />\n         *\n         * Corner point is the intersection of adjacent edges.\n         * @type {Number}\n         * @constant\n         */\n        MITERED : 1,\n\n        /**\n         * <img src=\"Images/CornerTypeBeveled.png\" style=\"vertical-align: middle;\" width=\"186\" height=\"189\" />\n         *\n         * Corner is clipped.\n         * @type {Number}\n         * @constant\n         */\n        BEVELED : 2\n    };\nexport default freezeObject(CornerType);\n","import defined from '../Core/defined.js';\nimport defineProperties from '../Core/defineProperties.js';\nimport DeveloperError from '../Core/DeveloperError.js';\nimport Event from '../Core/Event.js';\nimport EventHelper from '../Core/EventHelper.js';\nimport TimeIntervalCollection from '../Core/TimeIntervalCollection.js';\nimport Property from './Property.js';\n\n    function subscribeAll(property, eventHelper, definitionChanged, intervals) {\n        function callback() {\n            definitionChanged.raiseEvent(property);\n        }\n        var items = [];\n        eventHelper.removeAll();\n        var length = intervals.length;\n        for (var i = 0; i < length; i++) {\n            var interval = intervals.get(i);\n            if (defined(interval.data) && items.indexOf(interval.data) === -1) {\n                eventHelper.add(interval.data.definitionChanged, callback);\n            }\n        }\n    }\n\n    /**\n     * A {@link Property} which is defined by a {@link TimeIntervalCollection}, where the\n     * data property of each {@link TimeInterval} is another Property instance which is\n     * evaluated at the provided time.\n     *\n     * @alias CompositeProperty\n     * @constructor\n     *\n     *\n     * @example\n     * var constantProperty = ...;\n     * var sampledProperty = ...;\n     *\n     * //Create a composite property from two previously defined properties\n     * //where the property is valid on August 1st, 2012 and uses a constant\n     * //property for the first half of the day and a sampled property for the\n     * //remaining half.\n     * var composite = new Cesium.CompositeProperty();\n     * composite.intervals.addInterval(Cesium.TimeInterval.fromIso8601({\n     *     iso8601 : '2012-08-01T00:00:00.00Z/2012-08-01T12:00:00.00Z',\n     *     data : constantProperty\n     * }));\n     * composite.intervals.addInterval(Cesium.TimeInterval.fromIso8601({\n     *     iso8601 : '2012-08-01T12:00:00.00Z/2012-08-02T00:00:00.00Z',\n     *     isStartIncluded : false,\n     *     isStopIncluded : false,\n     *     data : sampledProperty\n     * }));\n     *\n     * @see CompositeMaterialProperty\n     * @see CompositePositionProperty\n     */\n    function CompositeProperty() {\n        this._eventHelper = new EventHelper();\n        this._definitionChanged = new Event();\n        this._intervals = new TimeIntervalCollection();\n        this._intervals.changedEvent.addEventListener(CompositeProperty.prototype._intervalsChanged, this);\n    }\n\n    defineProperties(CompositeProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.  A property is considered\n         * constant if getValue always returns the same result for the current definition.\n         * @memberof CompositeProperty.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return this._intervals.isEmpty;\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is changed whenever setValue is called with data different\n         * than the current value.\n         * @memberof CompositeProperty.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n        /**\n         * Gets the interval collection.\n         * @memberof CompositeProperty.prototype\n         *\n         * @type {TimeIntervalCollection}\n         */\n        intervals : {\n            get : function() {\n                return this._intervals;\n            }\n        }\n    });\n\n    /**\n     * Gets the value of the property at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    CompositeProperty.prototype.getValue = function(time, result) {\n        \n\n        var innerProperty = this._intervals.findDataForIntervalContainingDate(time);\n        if (defined(innerProperty)) {\n            return innerProperty.getValue(time, result);\n        }\n        return undefined;\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    CompositeProperty.prototype.equals = function(other) {\n        return this === other || //\n               (other instanceof CompositeProperty && //\n                this._intervals.equals(other._intervals, Property.equals));\n    };\n\n    /**\n     * @private\n     */\n    CompositeProperty.prototype._intervalsChanged = function() {\n        subscribeAll(this, this._eventHelper, this._definitionChanged, this._intervals);\n        this._definitionChanged.raiseEvent(this);\n    };\nexport default CompositeProperty;\n","import defaultValue from '../Core/defaultValue.js';\nimport defined from '../Core/defined.js';\nimport defineProperties from '../Core/defineProperties.js';\nimport DeveloperError from '../Core/DeveloperError.js';\nimport Event from '../Core/Event.js';\nimport ReferenceFrame from '../Core/ReferenceFrame.js';\nimport CompositeProperty from './CompositeProperty.js';\nimport Property from './Property.js';\n\n    /**\n     * A {@link CompositeProperty} which is also a {@link PositionProperty}.\n     *\n     * @alias CompositePositionProperty\n     * @constructor\n     *\n     * @param {ReferenceFrame} [referenceFrame=ReferenceFrame.FIXED] The reference frame in which the position is defined.\n     */\n    function CompositePositionProperty(referenceFrame) {\n        this._referenceFrame = defaultValue(referenceFrame, ReferenceFrame.FIXED);\n        this._definitionChanged = new Event();\n        this._composite = new CompositeProperty();\n        this._composite.definitionChanged.addEventListener(CompositePositionProperty.prototype._raiseDefinitionChanged, this);\n    }\n\n    defineProperties(CompositePositionProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.  A property is considered\n         * constant if getValue always returns the same result for the current definition.\n         * @memberof CompositePositionProperty.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return this._composite.isConstant;\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is changed whenever setValue is called with data different\n         * than the current value.\n         * @memberof CompositePositionProperty.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n        /**\n         * Gets the interval collection.\n         * @memberof CompositePositionProperty.prototype\n         *\n         * @type {TimeIntervalCollection}\n         */\n        intervals : {\n            get : function() {\n                return this._composite.intervals;\n            }\n        },\n        /**\n         * Gets or sets the reference frame which this position presents itself as.\n         * Each PositionProperty making up this object has it's own reference frame,\n         * so this property merely exposes a \"preferred\" reference frame for clients\n         * to use.\n         * @memberof CompositePositionProperty.prototype\n         *\n         * @type {ReferenceFrame}\n         */\n        referenceFrame : {\n            get : function() {\n                return this._referenceFrame;\n            },\n            set : function(value) {\n                this._referenceFrame = value;\n            }\n        }\n    });\n\n    /**\n     * Gets the value of the property at the provided time in the fixed frame.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    CompositePositionProperty.prototype.getValue = function(time, result) {\n        return this.getValueInReferenceFrame(time, ReferenceFrame.FIXED, result);\n    };\n\n    /**\n     * Gets the value of the property at the provided time and in the provided reference frame.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {ReferenceFrame} referenceFrame The desired referenceFrame of the result.\n     * @param {Cartesian3} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Cartesian3} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    CompositePositionProperty.prototype.getValueInReferenceFrame = function(time, referenceFrame, result) {\n        \n\n        var innerProperty = this._composite._intervals.findDataForIntervalContainingDate(time);\n        if (defined(innerProperty)) {\n            return innerProperty.getValueInReferenceFrame(time, referenceFrame, result);\n        }\n        return undefined;\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    CompositePositionProperty.prototype.equals = function(other) {\n        return this === other || //\n               (other instanceof CompositePositionProperty && //\n                this._referenceFrame === other._referenceFrame && //\n                this._composite.equals(other._composite, Property.equals));\n    };\n\n    /**\n     * @private\n     */\n    CompositePositionProperty.prototype._raiseDefinitionChanged = function() {\n        this._definitionChanged.raiseEvent(this);\n    };\nexport default CompositePositionProperty;\n","import defined from '../Core/defined.js';\nimport defineProperties from '../Core/defineProperties.js';\nimport DeveloperError from '../Core/DeveloperError.js';\nimport Event from '../Core/Event.js';\nimport RuntimeError from '../Core/RuntimeError.js';\nimport Property from './Property.js';\n\n    function resolveEntity(that) {\n        var entityIsResolved = true;\n        if (that._resolveEntity) {\n            var targetEntity = that._targetCollection.getById(that._targetId);\n\n            if (defined(targetEntity)) {\n                targetEntity.definitionChanged.addEventListener(ReferenceProperty.prototype._onTargetEntityDefinitionChanged, that);\n                that._targetEntity = targetEntity;\n                that._resolveEntity = false;\n            } else {\n                //The property has become detached.  It has a valid value but is not currently resolved to an entity in the collection\n                targetEntity = that._targetEntity;\n                entityIsResolved = false;\n            }\n\n            if (!defined(targetEntity)) {\n                throw new RuntimeError('target entity \"' + that._targetId + '\" could not be resolved.');\n            }\n        }\n        return entityIsResolved;\n    }\n\n    function resolve(that) {\n        var targetProperty = that._targetProperty;\n\n        if (that._resolveProperty) {\n            var entityIsResolved = resolveEntity(that);\n\n            var names = that._targetPropertyNames;\n            targetProperty = that._targetEntity;\n            var length = names.length;\n            for (var i = 0; i < length && defined(targetProperty); i++) {\n                targetProperty = targetProperty[names[i]];\n            }\n\n            if (defined(targetProperty)) {\n                that._targetProperty = targetProperty;\n                that._resolveProperty = !entityIsResolved;\n            } else if (!defined(that._targetProperty)) {\n                throw new RuntimeError('targetProperty \"' + that._targetId + '.' + names.join('.') + '\" could not be resolved.');\n            }\n        }\n\n        return targetProperty;\n    }\n\n    /**\n     * A {@link Property} which transparently links to another property on a provided object.\n     *\n     * @alias ReferenceProperty\n     * @constructor\n     *\n     * @param {EntityCollection} targetCollection The entity collection which will be used to resolve the reference.\n     * @param {String} targetId The id of the entity which is being referenced.\n     * @param {String[]} targetPropertyNames The names of the property on the target entity which we will use.\n     *\n     * @example\n     * var collection = new Cesium.EntityCollection();\n     *\n     * //Create a new entity and assign a billboard scale.\n     * var object1 = new Cesium.Entity({id:'object1'});\n     * object1.billboard = new Cesium.BillboardGraphics();\n     * object1.billboard.scale = new Cesium.ConstantProperty(2.0);\n     * collection.add(object1);\n     *\n     * //Create a second entity and reference the scale from the first one.\n     * var object2 = new Cesium.Entity({id:'object2'});\n     * object2.model = new Cesium.ModelGraphics();\n     * object2.model.scale = new Cesium.ReferenceProperty(collection, 'object1', ['billboard', 'scale']);\n     * collection.add(object2);\n     *\n     * //Create a third object, but use the fromString helper function.\n     * var object3 = new Cesium.Entity({id:'object3'});\n     * object3.billboard = new Cesium.BillboardGraphics();\n     * object3.billboard.scale = Cesium.ReferenceProperty.fromString(collection, 'object1#billboard.scale');\n     * collection.add(object3);\n     *\n     * //You can refer to an entity with a # or . in id and property names by escaping them.\n     * var object4 = new Cesium.Entity({id:'#object.4'});\n     * object4.billboard = new Cesium.BillboardGraphics();\n     * object4.billboard.scale = new Cesium.ConstantProperty(2.0);\n     * collection.add(object4);\n     *\n     * var object5 = new Cesium.Entity({id:'object5'});\n     * object5.billboard = new Cesium.BillboardGraphics();\n     * object5.billboard.scale = Cesium.ReferenceProperty.fromString(collection, '\\\\#object\\\\.4#billboard.scale');\n     * collection.add(object5);\n     */\n    function ReferenceProperty(targetCollection, targetId, targetPropertyNames) {\n        \n\n        this._targetCollection = targetCollection;\n        this._targetId = targetId;\n        this._targetPropertyNames = targetPropertyNames;\n        this._targetProperty = undefined;\n        this._targetEntity = undefined;\n        this._definitionChanged = new Event();\n        this._resolveEntity = true;\n        this._resolveProperty = true;\n\n        targetCollection.collectionChanged.addEventListener(ReferenceProperty.prototype._onCollectionChanged, this);\n    }\n\n    defineProperties(ReferenceProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.\n         * @memberof ReferenceProperty.prototype\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return Property.isConstant(resolve(this));\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is changed whenever the referenced property's definition is changed.\n         * @memberof ReferenceProperty.prototype\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n        /**\n         * Gets the reference frame that the position is defined in.\n         * This property is only valid if the referenced property is a {@link PositionProperty}.\n         * @memberof ReferenceProperty.prototype\n         * @type {ReferenceFrame}\n         * @readonly\n         */\n        referenceFrame : {\n            get : function() {\n                return resolve(this).referenceFrame;\n            }\n        },\n        /**\n         * Gets the id of the entity being referenced.\n         * @memberof ReferenceProperty.prototype\n         * @type {String}\n         * @readonly\n         */\n        targetId : {\n            get : function() {\n                return this._targetId;\n            }\n        },\n        /**\n         * Gets the collection containing the entity being referenced.\n         * @memberof ReferenceProperty.prototype\n         * @type {EntityCollection}\n         * @readonly\n         */\n        targetCollection : {\n            get : function() {\n                return this._targetCollection;\n            }\n        },\n        /**\n         * Gets the array of property names used to retrieve the referenced property.\n         * @memberof ReferenceProperty.prototype\n         * @type {String[]}\n         * @readonly\n         */\n        targetPropertyNames : {\n            get : function() {\n                return this._targetPropertyNames;\n            }\n        },\n        /**\n         * Gets the resolved instance of the underlying referenced property.\n         * @memberof ReferenceProperty.prototype\n         * @type {Property}\n         * @readonly\n         */\n        resolvedProperty : {\n            get : function() {\n                return resolve(this);\n            }\n        }\n    });\n\n    /**\n     * Creates a new instance given the entity collection that will\n     * be used to resolve it and a string indicating the target entity id and property.\n     * The format of the string is \"objectId#foo.bar\", where # separates the id from\n     * property path and . separates sub-properties.  If the reference identifier or\n     * or any sub-properties contains a # . or \\ they must be escaped.\n     *\n     * @param {EntityCollection} targetCollection\n     * @param {String} referenceString\n     * @returns {ReferenceProperty} A new instance of ReferenceProperty.\n     *\n     * @exception {DeveloperError} invalid referenceString.\n     */\n    ReferenceProperty.fromString = function(targetCollection, referenceString) {\n        \n\n        var identifier;\n        var values = [];\n\n        var inIdentifier = true;\n        var isEscaped = false;\n        var token = '';\n        for (var i = 0; i < referenceString.length; ++i) {\n            var c = referenceString.charAt(i);\n\n            if (isEscaped) {\n                token += c;\n                isEscaped = false;\n            } else if (c === '\\\\') {\n                isEscaped = true;\n            } else if (inIdentifier && c === '#') {\n                identifier = token;\n                inIdentifier = false;\n                token = '';\n            } else if (!inIdentifier && c === '.') {\n                values.push(token);\n                token = '';\n            } else {\n                token += c;\n            }\n        }\n        values.push(token);\n\n        return new ReferenceProperty(targetCollection, identifier, values);\n    };\n\n    /**\n     * Gets the value of the property at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    ReferenceProperty.prototype.getValue = function(time, result) {\n        return resolve(this).getValue(time, result);\n    };\n\n    /**\n     * Gets the value of the property at the provided time and in the provided reference frame.\n     * This method is only valid if the property being referenced is a {@link PositionProperty}.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {ReferenceFrame} referenceFrame The desired referenceFrame of the result.\n     * @param {Cartesian3} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Cartesian3} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    ReferenceProperty.prototype.getValueInReferenceFrame = function(time, referenceFrame, result) {\n        return resolve(this).getValueInReferenceFrame(time, referenceFrame, result);\n    };\n\n    /**\n     * Gets the {@link Material} type at the provided time.\n     * This method is only valid if the property being referenced is a {@link MaterialProperty}.\n     *\n     * @param {JulianDate} time The time for which to retrieve the type.\n     * @returns {String} The type of material.\n     */\n    ReferenceProperty.prototype.getType = function(time) {\n        return resolve(this).getType(time);\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    ReferenceProperty.prototype.equals = function(other) {\n        if (this === other) {\n            return true;\n        }\n\n        var names = this._targetPropertyNames;\n        var otherNames = other._targetPropertyNames;\n\n        if (this._targetCollection !== other._targetCollection || //\n            this._targetId !== other._targetId || //\n            names.length !== otherNames.length) {\n            return false;\n        }\n\n        var length = this._targetPropertyNames.length;\n        for (var i = 0; i < length; i++) {\n            if (names[i] !== otherNames[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    ReferenceProperty.prototype._onTargetEntityDefinitionChanged = function(targetEntity, name, value, oldValue) {\n        if (this._targetPropertyNames[0] === name) {\n            this._resolveProperty = true;\n            this._definitionChanged.raiseEvent(this);\n        }\n    };\n\n    ReferenceProperty.prototype._onCollectionChanged = function(collection, added, removed) {\n        var targetEntity = this._targetEntity;\n        if (defined(targetEntity)) {\n            if (removed.indexOf(targetEntity) !== -1) {\n                targetEntity.definitionChanged.removeEventListener(ReferenceProperty.prototype._onTargetEntityDefinitionChanged, this);\n                this._resolveEntity = true;\n                this._resolveProperty = true;\n            } else if (this._resolveEntity) {\n                //If targetEntity is defined but resolveEntity is true, then the entity is detached\n                //and any change to the collection needs to incur an attempt to resolve in order to re-attach.\n                //without this if block, a reference that becomes re-attached will not signal definitionChanged\n                resolve(this);\n                if (!this._resolveEntity) {\n                    this._definitionChanged.raiseEvent(this);\n                }\n            }\n        }\n    };\nexport default ReferenceProperty;\n","import defined from '../Core/defined.js';\nimport defineProperties from '../Core/defineProperties.js';\nimport DeveloperError from '../Core/DeveloperError.js';\nimport Ellipsoid from '../Core/Ellipsoid.js';\nimport Event from '../Core/Event.js';\nimport ReferenceFrame from '../Core/ReferenceFrame.js';\nimport Property from './Property.js';\n\n    /**\n     * This is a temporary class for scaling position properties to the WGS84 surface.\n     * It will go away or be refactored to support data with arbitrary height references.\n     * @private\n     */\n    function ScaledPositionProperty(value) {\n        this._definitionChanged = new Event();\n        this._value = undefined;\n        this._removeSubscription = undefined;\n        this.setValue(value);\n    }\n\n    defineProperties(ScaledPositionProperty.prototype, {\n        isConstant : {\n            get : function() {\n                return Property.isConstant(this._value);\n            }\n        },\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n        referenceFrame : {\n            get : function() {\n                return defined(this._value) ? this._value.referenceFrame : ReferenceFrame.FIXED;\n            }\n        }\n    });\n\n    ScaledPositionProperty.prototype.getValue = function(time, result) {\n        return this.getValueInReferenceFrame(time, ReferenceFrame.FIXED, result);\n    };\n\n    ScaledPositionProperty.prototype.setValue = function(value) {\n        if (this._value !== value) {\n            this._value = value;\n\n            if (defined(this._removeSubscription)) {\n                this._removeSubscription();\n                this._removeSubscription = undefined;\n            }\n\n            if (defined(value)) {\n                this._removeSubscription = value.definitionChanged.addEventListener(this._raiseDefinitionChanged, this);\n            }\n            this._definitionChanged.raiseEvent(this);\n        }\n    };\n\n    ScaledPositionProperty.prototype.getValueInReferenceFrame = function(time, referenceFrame, result) {\n        \n\n        if (!defined(this._value)) {\n            return undefined;\n        }\n\n        result = this._value.getValueInReferenceFrame(time, referenceFrame, result);\n        return defined(result) ? Ellipsoid.WGS84.scaleToGeodeticSurface(result, result) : undefined;\n    };\n\n    ScaledPositionProperty.prototype.equals = function(other) {\n        return this === other || (other instanceof ScaledPositionProperty && this._value === other._value);\n    };\n\n    ScaledPositionProperty.prototype._raiseDefinitionChanged = function() {\n        this._definitionChanged.raiseEvent(this);\n    };\nexport default ScaledPositionProperty;\n","import defaultValue from '../Core/defaultValue.js';\nimport defined from '../Core/defined.js';\nimport defineProperties from '../Core/defineProperties.js';\nimport DeveloperError from '../Core/DeveloperError.js';\nimport Event from '../Core/Event.js';\nimport EventHelper from '../Core/EventHelper.js';\nimport ReferenceFrame from '../Core/ReferenceFrame.js';\nimport Property from './Property.js';\n\n    /**\n     * A {@link PositionProperty} whose value is an array whose items are the computed value\n     * of other PositionProperty instances.\n     *\n     * @alias PositionPropertyArray\n     * @constructor\n     *\n     * @param {Property[]} [value] An array of Property instances.\n     * @param {ReferenceFrame} [referenceFrame=ReferenceFrame.FIXED] The reference frame in which the position is defined.\n     */\n    function PositionPropertyArray(value, referenceFrame) {\n        this._value = undefined;\n        this._definitionChanged = new Event();\n        this._eventHelper = new EventHelper();\n        this._referenceFrame = defaultValue(referenceFrame, ReferenceFrame.FIXED);\n        this.setValue(value);\n    }\n\n    defineProperties(PositionPropertyArray.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.  This property\n         * is considered constant if all property items in the array are constant.\n         * @memberof PositionPropertyArray.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                var value = this._value;\n                if (!defined(value)) {\n                    return true;\n                }\n\n                var length = value.length;\n                for (var i = 0; i < length; i++) {\n                    if (!Property.isConstant(value[i])) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is changed whenever setValue is called with data different\n         * than the current value or one of the properties in the array also changes.\n         * @memberof PositionPropertyArray.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n        /**\n         * Gets the reference frame in which the position is defined.\n         * @memberof PositionPropertyArray.prototype\n         * @type {ReferenceFrame}\n         * @default ReferenceFrame.FIXED;\n         */\n        referenceFrame : {\n            get : function() {\n                return this._referenceFrame;\n            }\n        }\n    });\n\n    /**\n     * Gets the value of the property.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Cartesian3[]} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Cartesian3[]} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    PositionPropertyArray.prototype.getValue = function(time, result) {\n        return this.getValueInReferenceFrame(time, ReferenceFrame.FIXED, result);\n    };\n\n    /**\n     * Gets the value of the property at the provided time and in the provided reference frame.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {ReferenceFrame} referenceFrame The desired referenceFrame of the result.\n     * @param {Cartesian3[]} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Cartesian3[]} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    PositionPropertyArray.prototype.getValueInReferenceFrame = function(time, referenceFrame, result) {\n        \n\n        var value = this._value;\n        if (!defined(value)) {\n            return undefined;\n        }\n\n        var length = value.length;\n        if (!defined(result)) {\n            result = new Array(length);\n        }\n        var i = 0;\n        var x = 0;\n        while (i < length) {\n            var property = value[i];\n            var itemValue = property.getValueInReferenceFrame(time, referenceFrame, result[i]);\n            if (defined(itemValue)) {\n                result[x] = itemValue;\n                x++;\n            }\n            i++;\n        }\n        result.length = x;\n        return result;\n    };\n\n    /**\n     * Sets the value of the property.\n     *\n     * @param {Property[]} value An array of Property instances.\n     */\n    PositionPropertyArray.prototype.setValue = function(value) {\n        var eventHelper = this._eventHelper;\n        eventHelper.removeAll();\n\n        if (defined(value)) {\n            this._value = value.slice();\n            var length = value.length;\n            for (var i = 0; i < length; i++) {\n                var property = value[i];\n                if (defined(property)) {\n                    eventHelper.add(property.definitionChanged, PositionPropertyArray.prototype._raiseDefinitionChanged, this);\n                }\n            }\n        } else {\n            this._value = undefined;\n        }\n        this._definitionChanged.raiseEvent(this);\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    PositionPropertyArray.prototype.equals = function(other) {\n        return this === other || //\n               (other instanceof PositionPropertyArray && //\n                this._referenceFrame === other._referenceFrame && //\n                Property.arrayEquals(this._value, other._value));\n    };\n\n    PositionPropertyArray.prototype._raiseDefinitionChanged = function() {\n        this._definitionChanged.raiseEvent(this);\n    };\nexport default PositionPropertyArray;\n","import defaultValue from './defaultValue.js';\nimport defined from './defined.js';\nimport DeveloperError from './DeveloperError.js';\nimport CesiumMath from './Math.js';\n\n    var factorial = CesiumMath.factorial;\n\n    function calculateCoefficientTerm(x, zIndices, xTable, derivOrder, termOrder, reservedIndices) {\n        var result = 0;\n        var reserved;\n        var i;\n        var j;\n\n        if (derivOrder > 0) {\n            for (i = 0; i < termOrder; i++) {\n                reserved = false;\n                for (j = 0; j < reservedIndices.length && !reserved; j++) {\n                    if (i === reservedIndices[j]) {\n                        reserved = true;\n                    }\n                }\n\n                if (!reserved) {\n                    reservedIndices.push(i);\n                    result += calculateCoefficientTerm(x, zIndices, xTable, derivOrder - 1, termOrder, reservedIndices);\n                    reservedIndices.splice(reservedIndices.length - 1, 1);\n                }\n            }\n\n            return result;\n        }\n\n        result = 1;\n        for (i = 0; i < termOrder; i++) {\n            reserved = false;\n            for (j = 0; j < reservedIndices.length && !reserved; j++) {\n                if (i === reservedIndices[j]) {\n                    reserved = true;\n                }\n            }\n\n            if (!reserved) {\n                result *= x - xTable[zIndices[i]];\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * An {@link InterpolationAlgorithm} for performing Hermite interpolation.\n     *\n     * @exports HermitePolynomialApproximation\n     */\n    var HermitePolynomialApproximation = {\n        type : 'Hermite'\n    };\n\n    /**\n     * Given the desired degree, returns the number of data points required for interpolation.\n     *\n     * @param {Number} degree The desired degree of interpolation.\n     * @param {Number} [inputOrder=0]  The order of the inputs (0 means just the data, 1 means the data and its derivative, etc).\n     * @returns {Number} The number of required data points needed for the desired degree of interpolation.\n     * @exception {DeveloperError} degree must be 0 or greater.\n     * @exception {DeveloperError} inputOrder must be 0 or greater.\n     */\n    HermitePolynomialApproximation.getRequiredDataPoints = function(degree, inputOrder) {\n        inputOrder = defaultValue(inputOrder, 0);\n\n        \n\n        return Math.max(Math.floor((degree + 1) / (inputOrder + 1)), 2);\n    };\n\n    /**\n     * Interpolates values using Hermite Polynomial Approximation.\n     *\n     * @param {Number} x The independent variable for which the dependent variables will be interpolated.\n     * @param {Number[]} xTable The array of independent variables to use to interpolate.  The values\n     * in this array must be in increasing order and the same value must not occur twice in the array.\n     * @param {Number[]} yTable The array of dependent variables to use to interpolate.  For a set of three\n     * dependent values (p,q,w) at time 1 and time 2 this should be as follows: {p1, q1, w1, p2, q2, w2}.\n     * @param {Number} yStride The number of dependent variable values in yTable corresponding to\n     * each independent variable value in xTable.\n     * @param {Number[]} [result] An existing array into which to store the result.\n     * @returns {Number[]} The array of interpolated values, or the result parameter if one was provided.\n     */\n    HermitePolynomialApproximation.interpolateOrderZero = function(x, xTable, yTable, yStride, result) {\n        if (!defined(result)) {\n            result = new Array(yStride);\n        }\n\n        var i;\n        var j;\n        var d;\n        var s;\n        var len;\n        var index;\n        var length = xTable.length;\n        var coefficients = new Array(yStride);\n\n        for (i = 0; i < yStride; i++) {\n            result[i] = 0;\n\n            var l = new Array(length);\n            coefficients[i] = l;\n            for (j = 0; j < length; j++) {\n                l[j] = [];\n            }\n        }\n\n        var zIndicesLength = length, zIndices = new Array(zIndicesLength);\n\n        for (i = 0; i < zIndicesLength; i++) {\n            zIndices[i] = i;\n        }\n\n        var highestNonZeroCoef = length - 1;\n        for (s = 0; s < yStride; s++) {\n            for (j = 0; j < zIndicesLength; j++) {\n                index = zIndices[j] * yStride + s;\n                coefficients[s][0].push(yTable[index]);\n            }\n\n            for (i = 1; i < zIndicesLength; i++) {\n                var nonZeroCoefficients = false;\n                for (j = 0; j < zIndicesLength - i; j++) {\n                    var zj = xTable[zIndices[j]];\n                    var zn = xTable[zIndices[j + i]];\n\n                    var numerator;\n                    if (zn - zj <= 0) {\n                        index = zIndices[j] * yStride + yStride * i + s;\n                        numerator = yTable[index];\n                        coefficients[s][i].push(numerator / factorial(i));\n                    } else {\n                        numerator = (coefficients[s][i - 1][j + 1] - coefficients[s][i - 1][j]);\n                        coefficients[s][i].push(numerator / (zn - zj));\n                    }\n                    nonZeroCoefficients = nonZeroCoefficients || (numerator !== 0);\n                }\n\n                if (!nonZeroCoefficients) {\n                    highestNonZeroCoef = i - 1;\n                }\n            }\n        }\n\n        for (d = 0, len = 0; d <= len; d++) {\n            for (i = d; i <= highestNonZeroCoef; i++) {\n                var tempTerm = calculateCoefficientTerm(x, zIndices, xTable, d, i, []);\n                for (s = 0; s < yStride; s++) {\n                    var coeff = coefficients[s][i][0];\n                    result[s + d * yStride] += coeff * tempTerm;\n                }\n            }\n        }\n\n        return result;\n    };\n\n    var arrayScratch = [];\n\n    /**\n     * Interpolates values using Hermite Polynomial Approximation.\n     *\n     * @param {Number} x The independent variable for which the dependent variables will be interpolated.\n     * @param {Number[]} xTable The array of independent variables to use to interpolate.  The values\n     * in this array must be in increasing order and the same value must not occur twice in the array.\n     * @param {Number[]} yTable The array of dependent variables to use to interpolate.  For a set of three\n     * dependent values (p,q,w) at time 1 and time 2 this should be as follows: {p1, q1, w1, p2, q2, w2}.\n     * @param {Number} yStride The number of dependent variable values in yTable corresponding to\n     * each independent variable value in xTable.\n     * @param {Number} inputOrder The number of derivatives supplied for input.\n     * @param {Number} outputOrder The number of derivatives desired for output.\n     * @param {Number[]} [result] An existing array into which to store the result.\n     *\n     * @returns {Number[]} The array of interpolated values, or the result parameter if one was provided.\n     */\n    HermitePolynomialApproximation.interpolate = function(x, xTable, yTable, yStride, inputOrder, outputOrder, result) {\n        var resultLength = yStride * (outputOrder + 1);\n        if (!defined(result)) {\n            result = new Array(resultLength);\n        }\n        for (var r = 0; r < resultLength; r++) {\n            result[r] = 0;\n        }\n\n        var length = xTable.length;\n        // The zIndices array holds copies of the addresses of the xTable values\n        // in the range we're looking at. Even though this just holds information already\n        // available in xTable this is a much more convenient format.\n        var zIndices = new Array(length * (inputOrder + 1));\n        var i;\n        for (i = 0; i < length; i++) {\n            for (var j = 0; j < (inputOrder + 1); j++) {\n                zIndices[i * (inputOrder + 1) + j] = i;\n            }\n        }\n\n        var zIndiceslength = zIndices.length;\n        var coefficients = arrayScratch;\n        var highestNonZeroCoef = fillCoefficientList(coefficients, zIndices, xTable, yTable, yStride, inputOrder);\n        var reservedIndices = [];\n\n        var tmp = zIndiceslength * (zIndiceslength + 1) / 2;\n        var loopStop = Math.min(highestNonZeroCoef, outputOrder);\n        for (var d = 0; d <= loopStop; d++) {\n            for (i = d; i <= highestNonZeroCoef; i++) {\n                reservedIndices.length = 0;\n                var tempTerm = calculateCoefficientTerm(x, zIndices, xTable, d, i, reservedIndices);\n                var dimTwo = Math.floor(i * (1 - i) / 2) + (zIndiceslength * i);\n\n                for (var s = 0; s < yStride; s++) {\n                    var dimOne = Math.floor(s * tmp);\n                    var coef = coefficients[dimOne + dimTwo];\n                    result[s + d * yStride] += coef * tempTerm;\n                }\n            }\n        }\n\n        return result;\n    };\n\n    function fillCoefficientList(coefficients, zIndices, xTable, yTable, yStride, inputOrder) {\n        var j;\n        var index;\n        var highestNonZero = -1;\n        var zIndiceslength = zIndices.length;\n        var tmp = zIndiceslength * (zIndiceslength + 1) / 2;\n\n        for (var s = 0; s < yStride; s++) {\n            var dimOne = Math.floor(s * tmp);\n\n            for (j = 0; j < zIndiceslength; j++) {\n                index = zIndices[j] * yStride * (inputOrder + 1) + s;\n                coefficients[dimOne + j] = yTable[index];\n            }\n\n            for (var i = 1; i < zIndiceslength; i++) {\n                var coefIndex = 0;\n                var dimTwo = Math.floor(i * (1 - i) / 2) + (zIndiceslength * i);\n                var nonZeroCoefficients = false;\n\n                for (j = 0; j < zIndiceslength - i; j++) {\n                    var zj = xTable[zIndices[j]];\n                    var zn = xTable[zIndices[j + i]];\n\n                    var numerator;\n                    var coefficient;\n                    if (zn - zj <= 0) {\n                        index = zIndices[j] * yStride * (inputOrder + 1) + yStride * i + s;\n                        numerator = yTable[index];\n                        coefficient = (numerator / CesiumMath.factorial(i));\n                        coefficients[dimOne + dimTwo + coefIndex] = coefficient;\n                        coefIndex++;\n                    } else {\n                        var dimTwoMinusOne = Math.floor((i - 1) * (2 - i) / 2) + (zIndiceslength * (i - 1));\n                        numerator = coefficients[dimOne + dimTwoMinusOne + j + 1] - coefficients[dimOne + dimTwoMinusOne + j];\n                        coefficient = (numerator / (zn - zj));\n                        coefficients[dimOne + dimTwo + coefIndex] = coefficient;\n                        coefIndex++;\n                    }\n                    nonZeroCoefficients = nonZeroCoefficients || (numerator !== 0.0);\n                }\n\n                if (nonZeroCoefficients) {\n                    highestNonZero = Math.max(highestNonZero, i);\n                }\n            }\n        }\n\n        return highestNonZero;\n    }\nexport default HermitePolynomialApproximation;\n","import defined from './defined.js';\n\n    /**\n     * An {@link InterpolationAlgorithm} for performing Lagrange interpolation.\n     *\n     * @exports LagrangePolynomialApproximation\n     */\n    var LagrangePolynomialApproximation = {\n        type : 'Lagrange'\n    };\n\n    /**\n     * Given the desired degree, returns the number of data points required for interpolation.\n     *\n     * @param {Number} degree The desired degree of interpolation.\n     * @returns {Number} The number of required data points needed for the desired degree of interpolation.\n     */\n    LagrangePolynomialApproximation.getRequiredDataPoints = function(degree) {\n        return Math.max(degree + 1.0, 2);\n    };\n\n    /**\n     * Interpolates values using Lagrange Polynomial Approximation.\n     *\n     * @param {Number} x The independent variable for which the dependent variables will be interpolated.\n     * @param {Number[]} xTable The array of independent variables to use to interpolate.  The values\n     * in this array must be in increasing order and the same value must not occur twice in the array.\n     * @param {Number[]} yTable The array of dependent variables to use to interpolate.  For a set of three\n     * dependent values (p,q,w) at time 1 and time 2 this should be as follows: {p1, q1, w1, p2, q2, w2}.\n     * @param {Number} yStride The number of dependent variable values in yTable corresponding to\n     * each independent variable value in xTable.\n     * @param {Number[]} [result] An existing array into which to store the result.\n     * @returns {Number[]} The array of interpolated values, or the result parameter if one was provided.\n     */\n    LagrangePolynomialApproximation.interpolateOrderZero = function(x, xTable, yTable, yStride, result) {\n        if (!defined(result)) {\n            result = new Array(yStride);\n        }\n\n        var i;\n        var j;\n        var length = xTable.length;\n\n        for (i = 0; i < yStride; i++) {\n            result[i] = 0;\n        }\n\n        for (i = 0; i < length; i++) {\n            var coefficient = 1;\n\n            for (j = 0; j < length; j++) {\n                if (j !== i) {\n                    var diffX = xTable[i] - xTable[j];\n                    coefficient *= (x - xTable[j]) / diffX;\n                }\n            }\n\n            for (j = 0; j < yStride; j++) {\n                result[j] += coefficient * yTable[i * yStride + j];\n            }\n        }\n\n        return result;\n    };\nexport default LagrangePolynomialApproximation;\n","import Check from './Check.js';\nimport defaultValue from './defaultValue.js';\nimport defined from './defined.js';\n\n    /**\n     * A set of curvilinear 3-dimensional coordinates.\n     *\n     * @alias Spherical\n     * @constructor\n     *\n     * @param {Number} [clock=0.0] The angular coordinate lying in the xy-plane measured from the positive x-axis and toward the positive y-axis.\n     * @param {Number} [cone=0.0] The angular coordinate measured from the positive z-axis and toward the negative z-axis.\n     * @param {Number} [magnitude=1.0] The linear coordinate measured from the origin.\n     */\n    function Spherical(clock, cone, magnitude) {\n        /**\n         * The clock component.\n         * @type {Number}\n         * @default 0.0\n         */\n        this.clock = defaultValue(clock, 0.0);\n        /**\n         * The cone component.\n         * @type {Number}\n         * @default 0.0\n         */\n        this.cone = defaultValue(cone, 0.0);\n        /**\n         * The magnitude component.\n         * @type {Number}\n         * @default 1.0\n         */\n        this.magnitude = defaultValue(magnitude, 1.0);\n    }\n\n    /**\n     * Converts the provided Cartesian3 into Spherical coordinates.\n     *\n     * @param {Cartesian3} cartesian3 The Cartesian3 to be converted to Spherical.\n     * @param {Spherical} [result] The object in which the result will be stored, if undefined a new instance will be created.\n     * @returns {Spherical} The modified result parameter, or a new instance if one was not provided.\n     */\n    Spherical.fromCartesian3 = function(cartesian3, result) {\n        \n\n        var x = cartesian3.x;\n        var y = cartesian3.y;\n        var z = cartesian3.z;\n        var radialSquared = x * x + y * y;\n\n        if (!defined(result)) {\n            result = new Spherical();\n        }\n\n        result.clock = Math.atan2(y, x);\n        result.cone = Math.atan2(Math.sqrt(radialSquared), z);\n        result.magnitude = Math.sqrt(radialSquared + z * z);\n        return result;\n    };\n\n    /**\n     * Creates a duplicate of a Spherical.\n     *\n     * @param {Spherical} spherical The spherical to clone.\n     * @param {Spherical} [result] The object to store the result into, if undefined a new instance will be created.\n     * @returns {Spherical} The modified result parameter or a new instance if result was undefined. (Returns undefined if spherical is undefined)\n     */\n    Spherical.clone = function(spherical, result) {\n        if (!defined(spherical)) {\n            return undefined;\n        }\n\n        if (!defined(result)) {\n            return new Spherical(spherical.clock, spherical.cone, spherical.magnitude);\n        }\n\n        result.clock = spherical.clock;\n        result.cone = spherical.cone;\n        result.magnitude = spherical.magnitude;\n        return result;\n    };\n\n    /**\n     * Computes the normalized version of the provided spherical.\n     *\n     * @param {Spherical} spherical The spherical to be normalized.\n     * @param {Spherical} [result] The object to store the result into, if undefined a new instance will be created.\n     * @returns {Spherical} The modified result parameter or a new instance if result was undefined.\n     */\n    Spherical.normalize = function(spherical, result) {\n      \n\n        if (!defined(result)) {\n            return new Spherical(spherical.clock, spherical.cone, 1.0);\n        }\n\n        result.clock = spherical.clock;\n        result.cone = spherical.cone;\n        result.magnitude = 1.0;\n        return result;\n    };\n\n    /**\n     * Returns true if the first spherical is equal to the second spherical, false otherwise.\n     *\n     * @param {Spherical} left The first Spherical to be compared.\n     * @param {Spherical} right The second Spherical to be compared.\n     * @returns {Boolean} true if the first spherical is equal to the second spherical, false otherwise.\n     */\n    Spherical.equals = function(left, right) {\n        return (left === right) ||\n               ((defined(left)) &&\n                (defined(right)) &&\n                (left.clock === right.clock) &&\n                (left.cone === right.cone) &&\n                (left.magnitude === right.magnitude));\n    };\n\n    /**\n     * Returns true if the first spherical is within the provided epsilon of the second spherical, false otherwise.\n     *\n     * @param {Spherical} left The first Spherical to be compared.\n     * @param {Spherical} right The second Spherical to be compared.\n     * @param {Number} [epsilon=0.0] The epsilon to compare against.\n     * @returns {Boolean} true if the first spherical is within the provided epsilon of the second spherical, false otherwise.\n     */\n    Spherical.equalsEpsilon = function(left, right, epsilon) {\n        epsilon = defaultValue(epsilon, 0.0);\n        return (left === right) ||\n               ((defined(left)) &&\n                (defined(right)) &&\n                (Math.abs(left.clock - right.clock) <= epsilon) &&\n                (Math.abs(left.cone - right.cone) <= epsilon) &&\n                (Math.abs(left.magnitude - right.magnitude) <= epsilon));\n    };\n\n    /**\n     * Returns true if this spherical is equal to the provided spherical, false otherwise.\n     *\n     * @param {Spherical} other The Spherical to be compared.\n     * @returns {Boolean} true if this spherical is equal to the provided spherical, false otherwise.\n     */\n    Spherical.prototype.equals = function(other) {\n        return Spherical.equals(this, other);\n    };\n\n    /**\n     * Creates a duplicate of this Spherical.\n     *\n     * @param {Spherical} [result] The object to store the result into, if undefined a new instance will be created.\n     * @returns {Spherical} The modified result parameter or a new instance if result was undefined.\n     */\n    Spherical.prototype.clone = function(result) {\n        return Spherical.clone(this, result);\n    };\n\n    /**\n    * Returns true if this spherical is within the provided epsilon of the provided spherical, false otherwise.\n    *\n    * @param {Spherical} other The Spherical to be compared.\n    * @param {Number} epsilon The epsilon to compare against.\n    * @returns {Boolean} true if this spherical is within the provided epsilon of the provided spherical, false otherwise.\n    */\n    Spherical.prototype.equalsEpsilon = function(other, epsilon) {\n        return Spherical.equalsEpsilon(this, other, epsilon);\n    };\n\n    /**\n    * Returns a string representing this instance in the format (clock, cone, magnitude).\n    *\n    * @returns {String} A string representing this instance.\n    */\n    Spherical.prototype.toString = function() {\n        return '(' + this.clock + ', ' + this.cone + ', ' + this.magnitude + ')';\n    };\nexport default Spherical;\n","import Cartesian2 from '../Core/Cartesian2.js';\nimport Color from '../Core/Color.js';\nimport defaultValue from '../Core/defaultValue.js';\nimport defined from '../Core/defined.js';\nimport defineProperties from '../Core/defineProperties.js';\nimport Event from '../Core/Event.js';\nimport createPropertyDescriptor from './createPropertyDescriptor.js';\nimport Property from './Property.js';\n\n    var defaultEvenColor = Color.WHITE;\n    var defaultOddColor = Color.BLACK;\n    var defaultRepeat = new Cartesian2(2.0, 2.0);\n\n    /**\n     * A {@link MaterialProperty} that maps to checkerboard {@link Material} uniforms.\n     * @alias CheckerboardMaterialProperty\n     * @constructor\n     *\n     * @param {Object} [options] Object with the following properties:\n     * @param {Property} [options.evenColor=Color.WHITE] A Property specifying the first {@link Color}.\n     * @param {Property} [options.oddColor=Color.BLACK] A Property specifying the second {@link Color}.\n     * @param {Property} [options.repeat=new Cartesian2(2.0, 2.0)] A {@link Cartesian2} Property specifying how many times the tiles repeat in each direction.\n     */\n    function CheckerboardMaterialProperty(options) {\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n        this._definitionChanged = new Event();\n        this._evenColor = undefined;\n        this._evenColorSubscription = undefined;\n        this._oddColor = undefined;\n        this._oddColorSubscription = undefined;\n        this._repeat = undefined;\n        this._repeatSubscription = undefined;\n\n        this.evenColor = options.evenColor;\n        this.oddColor = options.oddColor;\n        this.repeat = options.repeat;\n    }\n\n    defineProperties(CheckerboardMaterialProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.  A property is considered\n         * constant if getValue always returns the same result for the current definition.\n         * @memberof CheckerboardMaterialProperty.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return Property.isConstant(this._evenColor) && //\n                       Property.isConstant(this._oddColor) && //\n                       Property.isConstant(this._repeat);\n            }\n        },\n\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is considered to have changed if a call to getValue would return\n         * a different result for the same time.\n         * @memberof CheckerboardMaterialProperty.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n\n        /**\n         * Gets or sets the Property specifying the first {@link Color}.\n         * @memberof CheckerboardMaterialProperty.prototype\n         * @type {Property}\n         * @default Color.WHITE\n         */\n        evenColor : createPropertyDescriptor('evenColor'),\n\n        /**\n         * Gets or sets the Property specifying the second {@link Color}.\n         * @memberof CheckerboardMaterialProperty.prototype\n         * @type {Property}\n         * @default Color.BLACK\n         */\n        oddColor : createPropertyDescriptor('oddColor'),\n\n        /**\n         * Gets or sets the {@link Cartesian2} Property specifying how many times the tiles repeat in each direction.\n         * @memberof CheckerboardMaterialProperty.prototype\n         * @type {Property}\n         * @default new Cartesian2(2.0, 2.0)\n         */\n        repeat : createPropertyDescriptor('repeat')\n    });\n\n    /**\n     * Gets the {@link Material} type at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the type.\n     * @returns {String} The type of material.\n     */\n    CheckerboardMaterialProperty.prototype.getType = function(time) {\n        return 'Checkerboard';\n    };\n\n    /**\n     * Gets the value of the property at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    CheckerboardMaterialProperty.prototype.getValue = function(time, result) {\n        if (!defined(result)) {\n            result = {};\n        }\n        result.lightColor = Property.getValueOrClonedDefault(this._evenColor, time, defaultEvenColor, result.lightColor);\n        result.darkColor = Property.getValueOrClonedDefault(this._oddColor, time, defaultOddColor, result.darkColor);\n        result.repeat = Property.getValueOrDefault(this._repeat, time, defaultRepeat);\n        return result;\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    CheckerboardMaterialProperty.prototype.equals = function(other) {\n        return this === other || //\n               (other instanceof CheckerboardMaterialProperty && //\n                       Property.equals(this._evenColor, other._evenColor) && //\n                       Property.equals(this._oddColor, other._oddColor) && //\n                       Property.equals(this._repeat, other._repeat));\n    };\nexport default CheckerboardMaterialProperty;\n","import defined from '../Core/defined.js';\nimport defineProperties from '../Core/defineProperties.js';\nimport DeveloperError from '../Core/DeveloperError.js';\nimport Event from '../Core/Event.js';\nimport CompositeProperty from './CompositeProperty.js';\nimport Property from './Property.js';\n\n    /**\n     * A {@link CompositeProperty} which is also a {@link MaterialProperty}.\n     *\n     * @alias CompositeMaterialProperty\n     * @constructor\n     */\n    function CompositeMaterialProperty() {\n        this._definitionChanged = new Event();\n        this._composite = new CompositeProperty();\n        this._composite.definitionChanged.addEventListener(CompositeMaterialProperty.prototype._raiseDefinitionChanged, this);\n    }\n\n    defineProperties(CompositeMaterialProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.  A property is considered\n         * constant if getValue always returns the same result for the current definition.\n         * @memberof CompositeMaterialProperty.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return this._composite.isConstant;\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is changed whenever setValue is called with data different\n         * than the current value.\n         * @memberof CompositeMaterialProperty.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n        /**\n         * Gets the interval collection.\n         * @memberof CompositeMaterialProperty.prototype\n         *\n         * @type {TimeIntervalCollection}\n         */\n        intervals : {\n            get : function() {\n                return this._composite._intervals;\n            }\n        }\n    });\n\n    /**\n     * Gets the {@link Material} type at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the type.\n     * @returns {String} The type of material.\n     */\n    CompositeMaterialProperty.prototype.getType = function(time) {\n        \n\n        var innerProperty = this._composite._intervals.findDataForIntervalContainingDate(time);\n        if (defined(innerProperty)) {\n            return innerProperty.getType(time);\n        }\n        return undefined;\n    };\n\n    /**\n     * Gets the value of the property at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    CompositeMaterialProperty.prototype.getValue = function(time, result) {\n        \n\n        var innerProperty = this._composite._intervals.findDataForIntervalContainingDate(time);\n        if (defined(innerProperty)) {\n            return innerProperty.getValue(time, result);\n        }\n        return undefined;\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    CompositeMaterialProperty.prototype.equals = function(other) {\n        return this === other || //\n               (other instanceof CompositeMaterialProperty && //\n                this._composite.equals(other._composite, Property.equals));\n    };\n\n    /**\n     * @private\n     */\n    CompositeMaterialProperty.prototype._raiseDefinitionChanged = function() {\n        this._definitionChanged.raiseEvent(this);\n    };\nexport default CompositeMaterialProperty;\n","import Cartesian2 from '../Core/Cartesian2.js';\nimport Color from '../Core/Color.js';\nimport defaultValue from '../Core/defaultValue.js';\nimport defined from '../Core/defined.js';\nimport defineProperties from '../Core/defineProperties.js';\nimport Event from '../Core/Event.js';\nimport createPropertyDescriptor from './createPropertyDescriptor.js';\nimport Property from './Property.js';\n\n    var defaultColor = Color.WHITE;\n    var defaultCellAlpha = 0.1;\n    var defaultLineCount = new Cartesian2(8, 8);\n    var defaultLineOffset = new Cartesian2(0, 0);\n    var defaultLineThickness = new Cartesian2(1, 1);\n\n    /**\n     * A {@link MaterialProperty} that maps to grid {@link Material} uniforms.\n     * @alias GridMaterialProperty\n     *\n     * @param {Object} [options] Object with the following properties:\n     * @param {Property} [options.color=Color.WHITE] A Property specifying the grid {@link Color}.\n     * @param {Property} [options.cellAlpha=0.1] A numeric Property specifying cell alpha values.\n     * @param {Property} [options.lineCount=new Cartesian2(8, 8)] A {@link Cartesian2} Property specifying the number of grid lines along each axis.\n     * @param {Property} [options.lineThickness=new Cartesian2(1.0, 1.0)] A {@link Cartesian2} Property specifying the thickness of grid lines along each axis.\n     * @param {Property} [options.lineOffset=new Cartesian2(0.0, 0.0)] A {@link Cartesian2} Property specifying starting offset of grid lines along each axis.\n     *\n     * @constructor\n     */\n    function GridMaterialProperty(options) {\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n        this._definitionChanged = new Event();\n        this._color = undefined;\n        this._colorSubscription = undefined;\n        this._cellAlpha = undefined;\n        this._cellAlphaSubscription = undefined;\n        this._lineCount = undefined;\n        this._lineCountSubscription = undefined;\n        this._lineThickness = undefined;\n        this._lineThicknessSubscription = undefined;\n        this._lineOffset = undefined;\n        this._lineOffsetSubscription = undefined;\n\n        this.color = options.color;\n        this.cellAlpha = options.cellAlpha;\n        this.lineCount = options.lineCount;\n        this.lineThickness = options.lineThickness;\n        this.lineOffset = options.lineOffset;\n    }\n\n    defineProperties(GridMaterialProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.  A property is considered\n         * constant if getValue always returns the same result for the current definition.\n         * @memberof GridMaterialProperty.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return Property.isConstant(this._color) &&\n                       Property.isConstant(this._cellAlpha) &&\n                       Property.isConstant(this._lineCount) &&\n                       Property.isConstant(this._lineThickness) &&\n                       Property.isConstant(this._lineOffset);\n            }\n        },\n\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is considered to have changed if a call to getValue would return\n         * a different result for the same time.\n         * @memberof GridMaterialProperty.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n\n        /**\n         * Gets or sets the Property specifying the grid {@link Color}.\n         * @memberof GridMaterialProperty.prototype\n         * @type {Property}\n         * @default Color.WHITE\n         */\n        color : createPropertyDescriptor('color'),\n\n        /**\n         * Gets or sets the numeric Property specifying cell alpha values.\n         * @memberof GridMaterialProperty.prototype\n         * @type {Property}\n         * @default 0.1\n         */\n        cellAlpha : createPropertyDescriptor('cellAlpha'),\n\n        /**\n         * Gets or sets the {@link Cartesian2} Property specifying the number of grid lines along each axis.\n         * @memberof GridMaterialProperty.prototype\n         * @type {Property}\n         * @default new Cartesian2(8.0, 8.0)\n         */\n        lineCount : createPropertyDescriptor('lineCount'),\n\n        /**\n         * Gets or sets the {@link Cartesian2} Property specifying the thickness of grid lines along each axis.\n         * @memberof GridMaterialProperty.prototype\n         * @type {Property}\n         * @default new Cartesian2(1.0, 1.0)\n         */\n        lineThickness : createPropertyDescriptor('lineThickness'),\n\n        /**\n         * Gets or sets the {@link Cartesian2} Property specifying the starting offset of grid lines along each axis.\n         * @memberof GridMaterialProperty.prototype\n         * @type {Property}\n         * @default new Cartesian2(0.0, 0.0)\n         */\n        lineOffset : createPropertyDescriptor('lineOffset')\n    });\n\n    /**\n     * Gets the {@link Material} type at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the type.\n     * @returns {String} The type of material.\n     */\n    GridMaterialProperty.prototype.getType = function(time) {\n        return 'Grid';\n    };\n\n    /**\n     * Gets the value of the property at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    GridMaterialProperty.prototype.getValue = function(time, result) {\n        if (!defined(result)) {\n            result = {};\n        }\n        result.color = Property.getValueOrClonedDefault(this._color, time, defaultColor, result.color);\n        result.cellAlpha = Property.getValueOrDefault(this._cellAlpha, time, defaultCellAlpha);\n        result.lineCount = Property.getValueOrClonedDefault(this._lineCount, time, defaultLineCount, result.lineCount);\n        result.lineThickness = Property.getValueOrClonedDefault(this._lineThickness, time, defaultLineThickness, result.lineThickness);\n        result.lineOffset = Property.getValueOrClonedDefault(this._lineOffset, time, defaultLineOffset, result.lineOffset);\n        return result;\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    GridMaterialProperty.prototype.equals = function(other) {\n        return this === other || //\n        (other instanceof GridMaterialProperty && //\n        Property.equals(this._color, other._color) && //\n        Property.equals(this._cellAlpha, other._cellAlpha) && //\n        Property.equals(this._lineCount, other._lineCount) && //\n        Property.equals(this._lineThickness, other._lineThickness) && //\n        Property.equals(this._lineOffset, other._lineOffset));\n    };\nexport default GridMaterialProperty;\n","import Color from '../Core/Color.js';\nimport defined from '../Core/defined.js';\nimport defineProperties from '../Core/defineProperties.js';\nimport Event from '../Core/Event.js';\nimport createPropertyDescriptor from './createPropertyDescriptor.js';\nimport Property from './Property.js';\n\n    /**\n     * A {@link MaterialProperty} that maps to PolylineArrow {@link Material} uniforms.\n     *\n     * @param {Property} [color=Color.WHITE] The {@link Color} Property to be used.\n     *\n     * @alias PolylineArrowMaterialProperty\n     * @constructor\n     */\n    function PolylineArrowMaterialProperty(color) {\n        this._definitionChanged = new Event();\n        this._color = undefined;\n        this._colorSubscription = undefined;\n\n        this.color = color;\n    }\n\n    defineProperties(PolylineArrowMaterialProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.  A property is considered\n         * constant if getValue always returns the same result for the current definition.\n         * @memberof PolylineArrowMaterialProperty.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return Property.isConstant(this._color);\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is considered to have changed if a call to getValue would return\n         * a different result for the same time.\n         * @memberof PolylineArrowMaterialProperty.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n        /**\n         * Gets or sets the {@link Color} {@link Property}.\n         * @memberof PolylineArrowMaterialProperty.prototype\n         * @type {Property}\n         * @default Color.WHITE\n         */\n        color : createPropertyDescriptor('color')\n    });\n\n    /**\n     * Gets the {@link Material} type at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the type.\n     * @returns {String} The type of material.\n     */\n    PolylineArrowMaterialProperty.prototype.getType = function(time) {\n        return 'PolylineArrow';\n    };\n\n    /**\n     * Gets the value of the property at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    PolylineArrowMaterialProperty.prototype.getValue = function(time, result) {\n        if (!defined(result)) {\n            result = {};\n        }\n        result.color = Property.getValueOrClonedDefault(this._color, time, Color.WHITE, result.color);\n        return result;\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    PolylineArrowMaterialProperty.prototype.equals = function(other) {\n        return this === other || //\n               (other instanceof PolylineArrowMaterialProperty && //\n                Property.equals(this._color, other._color));\n    };\nexport default PolylineArrowMaterialProperty;\n","import Color from '../Core/Color.js';\nimport defaultValue from '../Core/defaultValue.js';\nimport defined from '../Core/defined.js';\nimport defineProperties from '../Core/defineProperties.js';\nimport Event from '../Core/Event.js';\nimport createPropertyDescriptor from './createPropertyDescriptor.js';\nimport Property from './Property.js';\n\n    var defaultColor = Color.WHITE;\n    var defaultGapColor = Color.TRANSPARENT;\n    var defaultDashLength = 16.0;\n    var defaultDashPattern = 255.0;\n\n    /**\n     * A {@link MaterialProperty} that maps to polyline dash {@link Material} uniforms.\n     * @alias PolylineDashMaterialProperty\n     * @constructor\n     *\n     * @param {Object} [options] Object with the following properties:\n     * @param {Property} [options.color=Color.WHITE] A Property specifying the {@link Color} of the line.\n     * @param {Property} [options.gapColor=Color.TRANSPARENT] A Property specifying the {@link Color} of the gaps in the line.\n     * @param {Property} [options.dashLength=16.0] A numeric Property specifying the length of the dash pattern in pixels.\n     * @param {Property} [options.dashPattern=255.0] A numeric Property specifying a 16 bit pattern for the dash\n     */\n    function PolylineDashMaterialProperty(options) {\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n        this._definitionChanged = new Event();\n        this._color = undefined;\n        this._colorSubscription = undefined;\n        this._gapColor = undefined;\n        this._gapColorSubscription = undefined;\n        this._dashLength = undefined;\n        this._dashLengthSubscription = undefined;\n        this._dashPattern = undefined;\n        this._dashPatternSubscription = undefined;\n\n        this.color = options.color;\n        this.gapColor = options.gapColor;\n        this.dashLength = options.dashLength;\n        this.dashPattern = options.dashPattern;\n    }\n\n    defineProperties(PolylineDashMaterialProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.  A property is considered\n         * constant if getValue always returns the same result for the current definition.\n         * @memberof PolylineDashMaterialProperty.prototype\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return (Property.isConstant(this._color) &&\n                        Property.isConstant(this._gapColor) &&\n                        Property.isConstant(this._dashLength) &&\n                        Property.isConstant(this._dashPattern));\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is considered to have changed if a call to getValue would return\n         * a different result for the same time.\n         * @memberof PolylineDashMaterialProperty.prototype\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n        /**\n         * Gets or sets the Property specifying the {@link Color} of the line.\n         * @memberof PolylineDashMaterialProperty.prototype\n         * @type {Property}\n         */\n        color : createPropertyDescriptor('color'),\n\n        /**\n         * Gets or sets the Property specifying the {@link Color} of the gaps in the line.\n         * @memberof PolylineDashMaterialProperty.prototype\n         * @type {Property}\n         */\n        gapColor : createPropertyDescriptor('gapColor'),\n\n        /**\n         * Gets or sets the numeric Property specifying the length of a dash cycle\n         * @memberof PolylineDashMaterialProperty.prototype\n         * @type {Property}\n         */\n        dashLength : createPropertyDescriptor('dashLength'),\n\n        /**\n         * Gets or sets the numeric Property specifying a dash pattern\n         * @memberof PolylineDashMaterialProperty.prototype\n         * @type {Property}\n         */\n        dashPattern : createPropertyDescriptor('dashPattern')\n    });\n\n    /**\n     * Gets the {@link Material} type at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the type.\n     * @returns {String} The type of material.\n     */\n    PolylineDashMaterialProperty.prototype.getType = function(time) {\n        return 'PolylineDash';\n    };\n\n    /**\n     * Gets the value of the property at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    PolylineDashMaterialProperty.prototype.getValue = function(time, result) {\n        if (!defined(result)) {\n            result = {};\n        }\n        result.color = Property.getValueOrClonedDefault(this._color, time, defaultColor, result.color);\n        result.gapColor = Property.getValueOrClonedDefault(this._gapColor, time, defaultGapColor, result.gapColor);\n        result.dashLength = Property.getValueOrDefault(this._dashLength, time, defaultDashLength, result.dashLength);\n        result.dashPattern = Property.getValueOrDefault(this._dashPattern, time, defaultDashPattern, result.dashPattern);\n        return result;\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    PolylineDashMaterialProperty.prototype.equals = function(other) {\n        return this === other || //\n               (other instanceof PolylineDashMaterialProperty &&\n                Property.equals(this._color, other._color) &&\n                Property.equals(this._gapColor, other._gapColor) &&\n                Property.equals(this._dashLength, other._dashLength) &&\n                Property.equals(this._dashPattern, other._dashPattern));\n    };\nexport default PolylineDashMaterialProperty;\n","import Color from '../Core/Color.js';\nimport defaultValue from '../Core/defaultValue.js';\nimport defined from '../Core/defined.js';\nimport defineProperties from '../Core/defineProperties.js';\nimport Event from '../Core/Event.js';\nimport createPropertyDescriptor from './createPropertyDescriptor.js';\nimport Property from './Property.js';\n\n    var defaultColor = Color.WHITE;\n    var defaultOutlineColor = Color.BLACK;\n    var defaultOutlineWidth = 1.0;\n\n    /**\n     * A {@link MaterialProperty} that maps to polyline outline {@link Material} uniforms.\n     * @alias PolylineOutlineMaterialProperty\n     * @constructor\n     *\n     * @param {Object} [options] Object with the following properties:\n     * @param {Property} [options.color=Color.WHITE] A Property specifying the {@link Color} of the line.\n     * @param {Property} [options.outlineColor=Color.BLACK] A Property specifying the {@link Color} of the outline.\n     * @param {Property} [options.outlineWidth=1.0] A numeric Property specifying the width of the outline, in pixels.\n     */\n    function PolylineOutlineMaterialProperty(options) {\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n        this._definitionChanged = new Event();\n        this._color = undefined;\n        this._colorSubscription = undefined;\n        this._outlineColor = undefined;\n        this._outlineColorSubscription = undefined;\n        this._outlineWidth = undefined;\n        this._outlineWidthSubscription = undefined;\n\n        this.color = options.color;\n        this.outlineColor = options.outlineColor;\n        this.outlineWidth = options.outlineWidth;\n    }\n\n    defineProperties(PolylineOutlineMaterialProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.  A property is considered\n         * constant if getValue always returns the same result for the current definition.\n         * @memberof PolylineOutlineMaterialProperty.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return Property.isConstant(this._color) && Property.isConstant(this._outlineColor) && Property.isConstant(this._outlineWidth);\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is considered to have changed if a call to getValue would return\n         * a different result for the same time.\n         * @memberof PolylineOutlineMaterialProperty.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n        /**\n         * Gets or sets the Property specifying the {@link Color} of the line.\n         * @memberof PolylineOutlineMaterialProperty.prototype\n         * @type {Property}\n         * @default Color.WHITE\n         */\n        color : createPropertyDescriptor('color'),\n\n        /**\n         * Gets or sets the Property specifying the {@link Color} of the outline.\n         * @memberof PolylineOutlineMaterialProperty.prototype\n         * @type {Property}\n         * @default Color.BLACK\n         */\n        outlineColor : createPropertyDescriptor('outlineColor'),\n\n        /**\n         * Gets or sets the numeric Property specifying the width of the outline.\n         * @memberof PolylineOutlineMaterialProperty.prototype\n         * @type {Property}\n         * @default 1.0\n         */\n        outlineWidth : createPropertyDescriptor('outlineWidth')\n    });\n\n    /**\n     * Gets the {@link Material} type at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the type.\n     * @returns {String} The type of material.\n     */\n    PolylineOutlineMaterialProperty.prototype.getType = function(time) {\n        return 'PolylineOutline';\n    };\n\n    /**\n     * Gets the value of the property at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    PolylineOutlineMaterialProperty.prototype.getValue = function(time, result) {\n        if (!defined(result)) {\n            result = {};\n        }\n        result.color = Property.getValueOrClonedDefault(this._color, time, defaultColor, result.color);\n        result.outlineColor = Property.getValueOrClonedDefault(this._outlineColor, time, defaultOutlineColor, result.outlineColor);\n        result.outlineWidth = Property.getValueOrDefault(this._outlineWidth, time, defaultOutlineWidth);\n        return result;\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    PolylineOutlineMaterialProperty.prototype.equals = function(other) {\n        return this === other || //\n               (other instanceof PolylineOutlineMaterialProperty && //\n                Property.equals(this._color, other._color) && //\n                Property.equals(this._outlineColor, other._outlineColor) && //\n                Property.equals(this._outlineWidth, other._outlineWidth));\n    };\nexport default PolylineOutlineMaterialProperty;\n","import defined from '../Core/defined.js';\nimport defineProperties from '../Core/defineProperties.js';\nimport DeveloperError from '../Core/DeveloperError.js';\nimport Event from '../Core/Event.js';\nimport EventHelper from '../Core/EventHelper.js';\nimport Property from './Property.js';\n\n    /**\n     * A {@link Property} whose value is an array whose items are the computed value\n     * of other property instances.\n     *\n     * @alias PropertyArray\n     * @constructor\n     *\n     * @param {Property[]} [value] An array of Property instances.\n     */\n    function PropertyArray(value) {\n        this._value = undefined;\n        this._definitionChanged = new Event();\n        this._eventHelper = new EventHelper();\n        this.setValue(value);\n    }\n\n    defineProperties(PropertyArray.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.  This property\n         * is considered constant if all property items in the array are constant.\n         * @memberof PropertyArray.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                var value = this._value;\n                if (!defined(value)) {\n                    return true;\n                }\n                var length = value.length;\n                for (var i = 0; i < length; i++) {\n                    if (!Property.isConstant(value[i])) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is changed whenever setValue is called with data different\n         * than the current value or one of the properties in the array also changes.\n         * @memberof PropertyArray.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        }\n    });\n\n    /**\n     * Gets the value of the property.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Object[]} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Object[]} The modified result parameter, which is an array of values produced by evaluating each of the contained properties at the given time or a new instance if the result parameter was not supplied.\n     */\n    PropertyArray.prototype.getValue = function(time, result) {\n        \n\n        var value = this._value;\n        if (!defined(value)) {\n            return undefined;\n        }\n\n        var length = value.length;\n        if (!defined(result)) {\n            result = new Array(length);\n        }\n        var i = 0;\n        var x = 0;\n        while (i < length) {\n            var property = this._value[i];\n            var itemValue = property.getValue(time, result[i]);\n            if (defined(itemValue)) {\n                result[x] = itemValue;\n                x++;\n            }\n            i++;\n        }\n        result.length = x;\n        return result;\n    };\n\n    /**\n     * Sets the value of the property.\n     *\n     * @param {Property[]} value An array of Property instances.\n     */\n    PropertyArray.prototype.setValue = function(value) {\n        var eventHelper = this._eventHelper;\n        eventHelper.removeAll();\n\n        if (defined(value)) {\n            this._value = value.slice();\n            var length = value.length;\n            for (var i = 0; i < length; i++) {\n                var property = value[i];\n                if (defined(property)) {\n                    eventHelper.add(property.definitionChanged, PropertyArray.prototype._raiseDefinitionChanged, this);\n                }\n            }\n        } else {\n            this._value = undefined;\n        }\n        this._definitionChanged.raiseEvent(this);\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    PropertyArray.prototype.equals = function(other) {\n        return this === other || //\n               (other instanceof PropertyArray && //\n                Property.arrayEquals(this._value, other._value));\n    };\n\n    PropertyArray.prototype._raiseDefinitionChanged = function() {\n        this._definitionChanged.raiseEvent(this);\n    };\nexport default PropertyArray;\n","import defaultValue from '../Core/defaultValue.js';\nimport defined from '../Core/defined.js';\nimport DeveloperError from '../Core/DeveloperError.js';\nimport CesiumMath from '../Core/Math.js';\n\n    /**\n     * Represents a {@link Packable} number that always interpolates values\n     * towards the shortest angle of rotation. This object is never used directly\n     * but is instead passed to the constructor of {@link SampledProperty}\n     * in order to represent a two-dimensional angle of rotation.\n     *\n     * @exports Rotation\n     *\n     *\n     * @example\n     * var time1 = Cesium.JulianDate.fromIso8601('2010-05-07T00:00:00');\n     * var time2 = Cesium.JulianDate.fromIso8601('2010-05-07T00:01:00');\n     * var time3 = Cesium.JulianDate.fromIso8601('2010-05-07T00:02:00');\n     *\n     * var property = new Cesium.SampledProperty(Cesium.Rotation);\n     * property.addSample(time1, 0);\n     * property.addSample(time3, Cesium.Math.toRadians(350));\n     *\n     * //Getting the value at time2 will equal 355 degrees instead\n     * //of 175 degrees (which is what you get if you construct\n     * //a SampledProperty(Number) instead.  Note, the actual\n     * //return value is in radians, not degrees.\n     * property.getValue(time2);\n     *\n     * @see PackableForInterpolation\n     */\n    var Rotation = {\n        /**\n         * The number of elements used to pack the object into an array.\n         * @type {Number}\n         */\n        packedLength : 1,\n\n        /**\n         * Stores the provided instance into the provided array.\n         *\n         * @param {Rotation} value The value to pack.\n         * @param {Number[]} array The array to pack into.\n         * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n         *\n         * @returns {Number[]} The array that was packed into\n         */\n        pack : function(value, array, startingIndex) {\n            \n\n            startingIndex = defaultValue(startingIndex, 0);\n            array[startingIndex] = value;\n\n            return array;\n        },\n\n        /**\n         * Retrieves an instance from a packed array.\n         *\n         * @param {Number[]} array The packed array.\n         * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n         * @param {Rotation} [result] The object into which to store the result.\n         * @returns {Rotation} The modified result parameter or a new Rotation instance if one was not provided.\n         */\n        unpack : function(array, startingIndex, result) {\n            \n\n            startingIndex = defaultValue(startingIndex, 0);\n            return array[startingIndex];\n        },\n\n        /**\n         * Converts a packed array into a form suitable for interpolation.\n         *\n         * @param {Number[]} packedArray The packed array.\n         * @param {Number} [startingIndex=0] The index of the first element to be converted.\n         * @param {Number} [lastIndex=packedArray.length] The index of the last element to be converted.\n         * @param {Number[]} result The object into which to store the result.\n         */\n        convertPackedArrayForInterpolation : function(packedArray, startingIndex, lastIndex, result) {\n            \n\n            startingIndex = defaultValue(startingIndex, 0);\n            lastIndex = defaultValue(lastIndex, packedArray.length);\n\n            var previousValue;\n            for (var i = 0, len = lastIndex - startingIndex + 1; i < len; i++) {\n                var value = packedArray[startingIndex + i];\n                if (i === 0 || Math.abs(previousValue - value) < Math.PI) {\n                    result[i] = value;\n                } else {\n                    result[i] = value - CesiumMath.TWO_PI;\n                }\n                previousValue = value;\n            }\n        },\n\n        /**\n         * Retrieves an instance from a packed array converted with {@link Rotation.convertPackedArrayForInterpolation}.\n         *\n         * @param {Number[]} array The array previously packed for interpolation.\n         * @param {Number[]} sourceArray The original packed array.\n         * @param {Number} [firstIndex=0] The firstIndex used to convert the array.\n         * @param {Number} [lastIndex=packedArray.length] The lastIndex used to convert the array.\n         * @param {Rotation} [result] The object into which to store the result.\n         * @returns {Rotation} The modified result parameter or a new Rotation instance if one was not provided.\n         */\n        unpackInterpolationResult : function(array, sourceArray, firstIndex, lastIndex, result) {\n            \n\n            result = array[0];\n            if (result < 0) {\n                return result + CesiumMath.TWO_PI;\n            }\n            return result;\n        }\n    };\nexport default Rotation;\n","import freezeObject from '../Core/freezeObject.js';\n\n    /**\n     * Defined the orientation of stripes in {@link StripeMaterialProperty}.\n     *\n     * @exports StripeOrientation\n     */\n    var StripeOrientation = {\n        /**\n         * Horizontal orientation.\n         * @type {Number}\n         */\n        HORIZONTAL : 0,\n\n        /**\n         * Vertical orientation.\n         * @type {Number}\n         */\n        VERTICAL : 1\n    };\nexport default freezeObject(StripeOrientation);\n","import Color from '../Core/Color.js';\nimport defaultValue from '../Core/defaultValue.js';\nimport defined from '../Core/defined.js';\nimport defineProperties from '../Core/defineProperties.js';\nimport Event from '../Core/Event.js';\nimport createPropertyDescriptor from './createPropertyDescriptor.js';\nimport Property from './Property.js';\nimport StripeOrientation from './StripeOrientation.js';\n\n    var defaultOrientation = StripeOrientation.HORIZONTAL;\n    var defaultEvenColor = Color.WHITE;\n    var defaultOddColor = Color.BLACK;\n    var defaultOffset = 0;\n    var defaultRepeat = 1;\n\n    /**\n     * A {@link MaterialProperty} that maps to stripe {@link Material} uniforms.\n     * @alias StripeMaterialProperty\n     * @constructor\n     *\n     * @param {Object} [options] Object with the following properties:\n     * @param {Property} [options.orientation=StripeOrientation.HORIZONTAL] A Property specifying the {@link StripeOrientation}.\n     * @param {Property} [options.evenColor=Color.WHITE] A Property specifying the first {@link Color}.\n     * @param {Property} [options.oddColor=Color.BLACK] A Property specifying the second {@link Color}.\n     * @param {Property} [options.offset=0] A numeric Property specifying how far into the pattern to start the material.\n     * @param {Property} [options.repeat=1] A numeric Property specifying how many times the stripes repeat.\n     */\n    function StripeMaterialProperty(options) {\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n        this._definitionChanged = new Event();\n        this._orientation = undefined;\n        this._orientationSubscription = undefined;\n        this._evenColor = undefined;\n        this._evenColorSubscription = undefined;\n        this._oddColor = undefined;\n        this._oddColorSubscription = undefined;\n        this._offset = undefined;\n        this._offsetSubscription = undefined;\n        this._repeat = undefined;\n        this._repeatSubscription = undefined;\n\n        this.orientation = options.orientation;\n        this.evenColor = options.evenColor;\n        this.oddColor = options.oddColor;\n        this.offset = options.offset;\n        this.repeat = options.repeat;\n    }\n\n    defineProperties(StripeMaterialProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.  A property is considered\n         * constant if getValue always returns the same result for the current definition.\n         * @memberof StripeMaterialProperty.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return Property.isConstant(this._orientation) && //\n                       Property.isConstant(this._evenColor) && //\n                       Property.isConstant(this._oddColor) && //\n                       Property.isConstant(this._offset) && //\n                       Property.isConstant(this._repeat);\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * The definition is considered to have changed if a call to getValue would return\n         * a different result for the same time.\n         * @memberof StripeMaterialProperty.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n\n        /**\n         * Gets or sets the Property specifying the {@link StripeOrientation}/\n         * @memberof StripeMaterialProperty.prototype\n         * @type {Property}\n         * @default StripeOrientation.HORIZONTAL\n         */\n        orientation : createPropertyDescriptor('orientation'),\n\n        /**\n         * Gets or sets the Property specifying the first {@link Color}.\n         * @memberof StripeMaterialProperty.prototype\n         * @type {Property}\n         * @default Color.WHITE\n         */\n        evenColor : createPropertyDescriptor('evenColor'),\n\n        /**\n         * Gets or sets the Property specifying the second {@link Color}.\n         * @memberof StripeMaterialProperty.prototype\n         * @type {Property}\n         * @default Color.BLACK\n         */\n        oddColor : createPropertyDescriptor('oddColor'),\n\n        /**\n         * Gets or sets the numeric Property specifying the point into the pattern\n         * to begin drawing; with 0.0 being the beginning of the even color, 1.0 the beginning\n         * of the odd color, 2.0 being the even color again, and any multiple or fractional values\n         * being in between.\n         * @memberof StripeMaterialProperty.prototype\n         * @type {Property}\n         * @default 0.0\n         */\n        offset : createPropertyDescriptor('offset'),\n\n        /**\n         * Gets or sets the numeric Property specifying how many times the stripes repeat.\n         * @memberof StripeMaterialProperty.prototype\n         * @type {Property}\n         * @default 1.0\n         */\n        repeat : createPropertyDescriptor('repeat')\n    });\n\n    /**\n     * Gets the {@link Material} type at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the type.\n     * @returns {String} The type of material.\n     */\n    StripeMaterialProperty.prototype.getType = function(time) {\n        return 'Stripe';\n    };\n\n    /**\n     * Gets the value of the property at the provided time.\n     *\n     * @param {JulianDate} time The time for which to retrieve the value.\n     * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    StripeMaterialProperty.prototype.getValue = function(time, result) {\n        if (!defined(result)) {\n            result = {};\n        }\n        result.horizontal = Property.getValueOrDefault(this._orientation, time, defaultOrientation) === StripeOrientation.HORIZONTAL;\n        result.evenColor = Property.getValueOrClonedDefault(this._evenColor, time, defaultEvenColor, result.evenColor);\n        result.oddColor = Property.getValueOrClonedDefault(this._oddColor, time, defaultOddColor, result.oddColor);\n        result.offset = Property.getValueOrDefault(this._offset, time, defaultOffset);\n        result.repeat = Property.getValueOrDefault(this._repeat, time, defaultRepeat);\n        return result;\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    StripeMaterialProperty.prototype.equals = function(other) {\n        return this === other || //\n               (other instanceof StripeMaterialProperty && //\n                       Property.equals(this._orientation, other._orientation) && //\n                       Property.equals(this._evenColor, other._evenColor) && //\n                       Property.equals(this._oddColor, other._oddColor) && //\n                       Property.equals(this._offset, other._offset) && //\n                       Property.equals(this._repeat, other._repeat));\n    };\nexport default StripeMaterialProperty;\n","import Cartesian3 from '../Core/Cartesian3.js';\nimport defaultValue from '../Core/defaultValue.js';\nimport defined from '../Core/defined.js';\nimport defineProperties from '../Core/defineProperties.js';\nimport DeveloperError from '../Core/DeveloperError.js';\nimport Event from '../Core/Event.js';\nimport JulianDate from '../Core/JulianDate.js';\nimport Property from './Property.js';\n\n    /**\n     * A {@link Property} which evaluates to a {@link Cartesian3} vector\n     * based on the velocity of the provided {@link PositionProperty}.\n     *\n     * @alias VelocityVectorProperty\n     * @constructor\n     *\n     * @param {Property} [position] The position property used to compute the velocity.\n     * @param {Boolean} [normalize=true] Whether to normalize the computed velocity vector.\n     *\n     * @example\n     * //Create an entity with a billboard rotated to match its velocity.\n     * var position = new Cesium.SampledProperty();\n     * position.addSamples(...);\n     * var entity = viewer.entities.add({\n     *   position : position,\n     *   billboard : {\n     *     image : 'image.png',\n     *     alignedAxis : new Cesium.VelocityVectorProperty(position, true) // alignedAxis must be a unit vector\n     *   }\n     * }));\n     */\n    function VelocityVectorProperty(position, normalize) {\n        this._position = undefined;\n        this._subscription = undefined;\n        this._definitionChanged = new Event();\n        this._normalize = defaultValue(normalize, true);\n\n        this.position = position;\n    }\n\n    defineProperties(VelocityVectorProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.\n         * @memberof VelocityVectorProperty.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return Property.isConstant(this._position);\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * @memberof VelocityVectorProperty.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n        /**\n         * Gets or sets the position property used to compute the velocity vector.\n         * @memberof VelocityVectorProperty.prototype\n         *\n         * @type {Property}\n         */\n        position : {\n            get : function() {\n                return this._position;\n            },\n            set : function(value) {\n                var oldValue = this._position;\n                if (oldValue !== value) {\n                    if (defined(oldValue)) {\n                        this._subscription();\n                    }\n\n                    this._position = value;\n\n                    if (defined(value)) {\n                        this._subscription = value._definitionChanged.addEventListener(function() {\n                            this._definitionChanged.raiseEvent(this);\n                        }, this);\n                    }\n\n                    this._definitionChanged.raiseEvent(this);\n                }\n            }\n        },\n        /**\n         * Gets or sets whether the vector produced by this property\n         * will be normalized or not.\n         * @memberof VelocityVectorProperty.prototype\n         *\n         * @type {Boolean}\n         */\n        normalize : {\n            get : function() {\n                return this._normalize;\n            },\n            set : function(value) {\n                if (this._normalize === value) {\n                    return;\n                }\n\n                this._normalize = value;\n                this._definitionChanged.raiseEvent(this);\n            }\n        }\n    });\n\n    var position1Scratch = new Cartesian3();\n    var position2Scratch = new Cartesian3();\n    var timeScratch = new JulianDate();\n    var step = 1.0 / 60.0;\n\n    /**\n     * Gets the value of the property at the provided time.\n     *\n     * @param {JulianDate} [time] The time for which to retrieve the value.\n     * @param {Cartesian3} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Cartesian3} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    VelocityVectorProperty.prototype.getValue = function(time, result) {\n        return this._getValue(time, result);\n    };\n\n    /**\n     * @private\n     */\n    VelocityVectorProperty.prototype._getValue = function(time, velocityResult, positionResult) {\n        \n\n        if (!defined(velocityResult)) {\n            velocityResult = new Cartesian3();\n        }\n\n        var property = this._position;\n        if (Property.isConstant(property)) {\n            return this._normalize ? undefined : Cartesian3.clone(Cartesian3.ZERO, velocityResult);\n        }\n\n        var position1 = property.getValue(time, position1Scratch);\n        var position2 = property.getValue(JulianDate.addSeconds(time, step, timeScratch), position2Scratch);\n\n        //If we don't have a position for now, return undefined.\n        if (!defined(position1)) {\n            return undefined;\n        }\n\n        //If we don't have a position for now + step, see if we have a position for now - step.\n        if (!defined(position2)) {\n            position2 = position1;\n            position1 = property.getValue(JulianDate.addSeconds(time, -step, timeScratch), position2Scratch);\n\n            if (!defined(position1)) {\n                return undefined;\n            }\n        }\n\n        if (Cartesian3.equals(position1, position2)) {\n            return this._normalize ? undefined : Cartesian3.clone(Cartesian3.ZERO, velocityResult);\n        }\n\n        if (defined(positionResult)) {\n            position1.clone(positionResult);\n        }\n\n        var velocity = Cartesian3.subtract(position2, position1, velocityResult);\n        if (this._normalize) {\n            return Cartesian3.normalize(velocity, velocityResult);\n        }\n\n        return Cartesian3.divideByScalar(velocity, step, velocityResult);\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    VelocityVectorProperty.prototype.equals = function(other) {\n        return this === other ||//\n               (other instanceof VelocityVectorProperty &&\n                Property.equals(this._position, other._position));\n    };\nexport default VelocityVectorProperty;\n","import Cartesian3 from '../Core/Cartesian3.js';\nimport defaultValue from '../Core/defaultValue.js';\nimport defined from '../Core/defined.js';\nimport defineProperties from '../Core/defineProperties.js';\nimport Ellipsoid from '../Core/Ellipsoid.js';\nimport Event from '../Core/Event.js';\nimport Matrix3 from '../Core/Matrix3.js';\nimport Quaternion from '../Core/Quaternion.js';\nimport Transforms from '../Core/Transforms.js';\nimport Property from './Property.js';\nimport VelocityVectorProperty from './VelocityVectorProperty.js';\n\n    /**\n     * A {@link Property} which evaluates to a {@link Quaternion} rotation\n     * based on the velocity of the provided {@link PositionProperty}.\n     *\n     * @alias VelocityOrientationProperty\n     * @constructor\n     *\n     * @param {Property} [position] The position property used to compute the orientation.\n     * @param {Ellipsoid} [ellipsoid=Ellipsoid.WGS84] The ellipsoid used to determine which way is up.\n     *\n     * @example\n     * //Create an entity with position and orientation.\n     * var position = new Cesium.SampledProperty();\n     * position.addSamples(...);\n     * var entity = viewer.entities.add({\n     *   position : position,\n     *   orientation : new Cesium.VelocityOrientationProperty(position)\n     * }));\n     */\n    function VelocityOrientationProperty(position, ellipsoid) {\n        this._velocityVectorProperty = new VelocityVectorProperty(position, true);\n        this._subscription = undefined;\n        this._ellipsoid = undefined;\n        this._definitionChanged = new Event();\n\n        this.ellipsoid = defaultValue(ellipsoid, Ellipsoid.WGS84);\n\n        var that = this;\n        this._velocityVectorProperty.definitionChanged.addEventListener(function() {\n            that._definitionChanged.raiseEvent(that);\n        });\n    }\n\n    defineProperties(VelocityOrientationProperty.prototype, {\n        /**\n         * Gets a value indicating if this property is constant.\n         * @memberof VelocityOrientationProperty.prototype\n         *\n         * @type {Boolean}\n         * @readonly\n         */\n        isConstant : {\n            get : function() {\n                return Property.isConstant(this._velocityVectorProperty);\n            }\n        },\n        /**\n         * Gets the event that is raised whenever the definition of this property changes.\n         * @memberof VelocityOrientationProperty.prototype\n         *\n         * @type {Event}\n         * @readonly\n         */\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        },\n        /**\n         * Gets or sets the position property used to compute orientation.\n         * @memberof VelocityOrientationProperty.prototype\n         *\n         * @type {Property}\n         */\n        position : {\n            get : function() {\n                return this._velocityVectorProperty.position;\n            },\n            set : function(value) {\n                this._velocityVectorProperty.position = value;\n            }\n        },\n        /**\n         * Gets or sets the ellipsoid used to determine which way is up.\n         * @memberof VelocityOrientationProperty.prototype\n         *\n         * @type {Property}\n         */\n        ellipsoid : {\n            get : function() {\n                return this._ellipsoid;\n            },\n            set : function(value) {\n                var oldValue = this._ellipsoid;\n                if (oldValue !== value) {\n                    this._ellipsoid = value;\n                    this._definitionChanged.raiseEvent(this);\n                }\n            }\n        }\n    });\n\n    var positionScratch = new Cartesian3();\n    var velocityScratch = new Cartesian3();\n    var rotationScratch = new Matrix3();\n\n    /**\n     * Gets the value of the property at the provided time.\n     *\n     * @param {JulianDate} [time] The time for which to retrieve the value.\n     * @param {Quaternion} [result] The object to store the value into, if omitted, a new instance is created and returned.\n     * @returns {Quaternion} The modified result parameter or a new instance if the result parameter was not supplied.\n     */\n    VelocityOrientationProperty.prototype.getValue = function(time, result) {\n        var velocity = this._velocityVectorProperty._getValue(time, velocityScratch, positionScratch);\n\n        if (!defined(velocity)) {\n            return undefined;\n        }\n\n        Transforms.rotationMatrixFromPositionVelocity(positionScratch, velocity, this._ellipsoid, rotationScratch);\n        return Quaternion.fromRotationMatrix(rotationScratch, result);\n    };\n\n    /**\n     * Compares this property to the provided property and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {Property} [other] The other property.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    VelocityOrientationProperty.prototype.equals = function(other) {\n        return this === other ||//\n               (other instanceof VelocityOrientationProperty &&\n                Property.equals(this._velocityVectorProperty, other._velocityVectorProperty) &&\n                (this._ellipsoid === other._ellipsoid ||\n                 this._ellipsoid.equals(other._ellipsoid)));\n    };\nexport default VelocityOrientationProperty;\n","import ArcType from '../Core/ArcType.js';\nimport BoundingRectangle from '../Core/BoundingRectangle.js';\nimport Cartesian2 from '../Core/Cartesian2.js';\nimport Cartesian3 from '../Core/Cartesian3.js';\nimport Cartographic from '../Core/Cartographic.js';\nimport ClockRange from '../Core/ClockRange.js';\nimport ClockStep from '../Core/ClockStep.js';\nimport Color from '../Core/Color.js';\nimport CornerType from '../Core/CornerType.js';\nimport Credit from '../Core/Credit.js';\nimport createGuid from '../Core/createGuid.js';\nimport defaultValue from '../Core/defaultValue.js';\nimport defined from '../Core/defined.js';\nimport defineProperties from '../Core/defineProperties.js';\nimport DeveloperError from '../Core/DeveloperError.js';\nimport DistanceDisplayCondition from '../Core/DistanceDisplayCondition.js';\nimport Ellipsoid from '../Core/Ellipsoid.js';\nimport Event from '../Core/Event.js';\nimport ExtrapolationType from '../Core/ExtrapolationType.js';\nimport getFilenameFromUri from '../Core/getFilenameFromUri.js';\nimport HermitePolynomialApproximation from '../Core/HermitePolynomialApproximation.js';\nimport isArray from '../Core/isArray.js';\nimport Iso8601 from '../Core/Iso8601.js';\nimport JulianDate from '../Core/JulianDate.js';\nimport LagrangePolynomialApproximation from '../Core/LagrangePolynomialApproximation.js';\nimport LinearApproximation from '../Core/LinearApproximation.js';\nimport CesiumMath from '../Core/Math.js';\nimport NearFarScalar from '../Core/NearFarScalar.js';\nimport PolygonHierarchy from '../Core/PolygonHierarchy.js';\nimport Quaternion from '../Core/Quaternion.js';\nimport Rectangle from '../Core/Rectangle.js';\nimport ReferenceFrame from '../Core/ReferenceFrame.js';\nimport Resource from '../Core/Resource.js';\nimport RuntimeError from '../Core/RuntimeError.js';\nimport Spherical from '../Core/Spherical.js';\nimport TimeInterval from '../Core/TimeInterval.js';\nimport TimeIntervalCollection from '../Core/TimeIntervalCollection.js';\nimport ClassificationType from '../Scene/ClassificationType.js';\nimport ColorBlendMode from '../Scene/ColorBlendMode.js';\nimport HeightReference from '../Scene/HeightReference.js';\nimport HorizontalOrigin from '../Scene/HorizontalOrigin.js';\nimport LabelStyle from '../Scene/LabelStyle.js';\nimport ShadowMode from '../Scene/ShadowMode.js';\nimport VerticalOrigin from '../Scene/VerticalOrigin.js';\nimport Uri from '../ThirdParty/Uri.js';\nimport when from '../ThirdParty/when.js';\nimport BillboardGraphics from './BillboardGraphics.js';\nimport BoxGraphics from './BoxGraphics.js';\nimport CallbackProperty from './CallbackProperty.js';\nimport CheckerboardMaterialProperty from './CheckerboardMaterialProperty.js';\nimport ColorMaterialProperty from './ColorMaterialProperty.js';\nimport CompositeMaterialProperty from './CompositeMaterialProperty.js';\nimport CompositePositionProperty from './CompositePositionProperty.js';\nimport CompositeProperty from './CompositeProperty.js';\nimport ConstantPositionProperty from './ConstantPositionProperty.js';\nimport ConstantProperty from './ConstantProperty.js';\nimport CorridorGraphics from './CorridorGraphics.js';\nimport CylinderGraphics from './CylinderGraphics.js';\nimport DataSource from './DataSource.js';\nimport DataSourceClock from './DataSourceClock.js';\nimport EllipseGraphics from './EllipseGraphics.js';\nimport EllipsoidGraphics from './EllipsoidGraphics.js';\nimport EntityCluster from './EntityCluster.js';\nimport EntityCollection from './EntityCollection.js';\nimport GridMaterialProperty from './GridMaterialProperty.js';\nimport ImageMaterialProperty from './ImageMaterialProperty.js';\nimport LabelGraphics from './LabelGraphics.js';\nimport ModelGraphics from './ModelGraphics.js';\nimport NodeTransformationProperty from './NodeTransformationProperty.js';\nimport PathGraphics from './PathGraphics.js';\nimport PointGraphics from './PointGraphics.js';\nimport PolygonGraphics from './PolygonGraphics.js';\nimport PolylineArrowMaterialProperty from './PolylineArrowMaterialProperty.js';\nimport PolylineDashMaterialProperty from './PolylineDashMaterialProperty.js';\nimport PolylineGlowMaterialProperty from './PolylineGlowMaterialProperty.js';\nimport PolylineGraphics from './PolylineGraphics.js';\nimport PolylineOutlineMaterialProperty from './PolylineOutlineMaterialProperty.js';\nimport PositionPropertyArray from './PositionPropertyArray.js';\nimport Property from './Property.js';\nimport PropertyArray from './PropertyArray.js';\nimport PropertyBag from './PropertyBag.js';\nimport RectangleGraphics from './RectangleGraphics.js';\nimport ReferenceProperty from './ReferenceProperty.js';\nimport Rotation from './Rotation.js';\nimport SampledPositionProperty from './SampledPositionProperty.js';\nimport SampledProperty from './SampledProperty.js';\nimport StripeMaterialProperty from './StripeMaterialProperty.js';\nimport StripeOrientation from './StripeOrientation.js';\nimport TimeIntervalCollectionPositionProperty from './TimeIntervalCollectionPositionProperty.js';\nimport TimeIntervalCollectionProperty from './TimeIntervalCollectionProperty.js';\nimport VelocityOrientationProperty from './VelocityOrientationProperty.js';\nimport VelocityVectorProperty from './VelocityVectorProperty.js';\nimport WallGraphics from './WallGraphics.js';\n\n    // A marker type to distinguish CZML properties where we need to end up with a unit vector.\n    // The data is still loaded into Cartesian3 objects but they are normalized.\n    function UnitCartesian3() {}\n    UnitCartesian3.packedLength = Cartesian3.packedLength;\n    UnitCartesian3.unpack = Cartesian3.unpack;\n    UnitCartesian3.pack = Cartesian3.pack;\n\n    // As a side note, for the purposes of CZML, Quaternion always indicates a unit quaternion.\n\n    var currentId;\n\n    function createReferenceProperty(entityCollection, referenceString) {\n        if (referenceString[0] === '#') {\n            referenceString = currentId + referenceString;\n        }\n        return ReferenceProperty.fromString(entityCollection, referenceString);\n    }\n\n    function createSpecializedProperty(type, entityCollection, packetData) {\n        if (defined(packetData.reference)) {\n            return createReferenceProperty(entityCollection, packetData.reference);\n        }\n\n        if (defined(packetData.velocityReference)) {\n            var referenceProperty = createReferenceProperty(entityCollection, packetData.velocityReference);\n            switch (type) {\n                case Cartesian3:\n                case UnitCartesian3:\n                    return new VelocityVectorProperty(referenceProperty, type === UnitCartesian3);\n                case Quaternion:\n                    return new VelocityOrientationProperty(referenceProperty);\n            }\n        }\n\n        throw new RuntimeError(JSON.stringify(packetData) + ' is not valid CZML.');\n    }\n\n    function createAdapterProperty(property, adapterFunction) {\n        return new CallbackProperty(function(time, result) {\n            return adapterFunction(property.getValue(time, result));\n        }, property.isConstant);\n    }\n\n    var scratchCartesian = new Cartesian3();\n    var scratchSpherical = new Spherical();\n    var scratchCartographic = new Cartographic();\n    var scratchTimeInterval = new TimeInterval();\n    var scratchQuaternion = new Quaternion();\n\n    function unwrapColorInterval(czmlInterval) {\n        var rgbaf = czmlInterval.rgbaf;\n        if (defined(rgbaf)) {\n            return rgbaf;\n        }\n\n        var rgba = czmlInterval.rgba;\n        if (!defined(rgba)) {\n            return undefined;\n        }\n\n        var length = rgba.length;\n        if (length === Color.packedLength) {\n            return [Color.byteToFloat(rgba[0]), Color.byteToFloat(rgba[1]), Color.byteToFloat(rgba[2]), Color.byteToFloat(rgba[3])];\n        }\n\n        rgbaf = new Array(length);\n        for (var i = 0; i < length; i += 5) {\n            rgbaf[i] = rgba[i];\n            rgbaf[i + 1] = Color.byteToFloat(rgba[i + 1]);\n            rgbaf[i + 2] = Color.byteToFloat(rgba[i + 2]);\n            rgbaf[i + 3] = Color.byteToFloat(rgba[i + 3]);\n            rgbaf[i + 4] = Color.byteToFloat(rgba[i + 4]);\n        }\n        return rgbaf;\n    }\n\n    function unwrapUriInterval(czmlInterval, sourceUri) {\n        var uri = defaultValue(czmlInterval.uri, czmlInterval);\n        if (defined(sourceUri)) {\n            return sourceUri.getDerivedResource({\n                url: uri\n            });\n        }\n\n        return Resource.createIfNeeded(uri);\n    }\n\n    function unwrapRectangleInterval(czmlInterval) {\n        var wsen = czmlInterval.wsen;\n        if (defined(wsen)) {\n            return wsen;\n        }\n\n        var wsenDegrees = czmlInterval.wsenDegrees;\n        if (!defined(wsenDegrees)) {\n            return undefined;\n        }\n\n        var length = wsenDegrees.length;\n        if (length === Rectangle.packedLength) {\n            return [CesiumMath.toRadians(wsenDegrees[0]), CesiumMath.toRadians(wsenDegrees[1]), CesiumMath.toRadians(wsenDegrees[2]), CesiumMath.toRadians(wsenDegrees[3])];\n        }\n\n        wsen = new Array(length);\n        for (var i = 0; i < length; i += 5) {\n            wsen[i] = wsenDegrees[i];\n            wsen[i + 1] = CesiumMath.toRadians(wsenDegrees[i + 1]);\n            wsen[i + 2] = CesiumMath.toRadians(wsenDegrees[i + 2]);\n            wsen[i + 3] = CesiumMath.toRadians(wsenDegrees[i + 3]);\n            wsen[i + 4] = CesiumMath.toRadians(wsenDegrees[i + 4]);\n        }\n        return wsen;\n    }\n\n    function convertUnitSphericalToCartesian(unitSpherical) {\n        var length = unitSpherical.length;\n        scratchSpherical.magnitude = 1.0;\n        if (length === 2) {\n            scratchSpherical.clock = unitSpherical[0];\n            scratchSpherical.cone = unitSpherical[1];\n            Cartesian3.fromSpherical(scratchSpherical, scratchCartesian);\n            return [scratchCartesian.x, scratchCartesian.y, scratchCartesian.z];\n        }\n\n        var result = new Array(length / 3 * 4);\n        for (var i = 0, j = 0; i < length; i += 3, j += 4) {\n            result[j] = unitSpherical[i];\n\n            scratchSpherical.clock = unitSpherical[i + 1];\n            scratchSpherical.cone = unitSpherical[i + 2];\n            Cartesian3.fromSpherical(scratchSpherical, scratchCartesian);\n\n            result[j + 1] = scratchCartesian.x;\n            result[j + 2] = scratchCartesian.y;\n            result[j + 3] = scratchCartesian.z;\n        }\n        return result;\n    }\n\n    function convertSphericalToCartesian(spherical) {\n        var length = spherical.length;\n        if (length === 3) {\n            scratchSpherical.clock = spherical[0];\n            scratchSpherical.cone = spherical[1];\n            scratchSpherical.magnitude = spherical[2];\n            Cartesian3.fromSpherical(scratchSpherical, scratchCartesian);\n            return [scratchCartesian.x, scratchCartesian.y, scratchCartesian.z];\n        }\n\n        var result = new Array(length);\n        for (var i = 0; i < length; i += 4) {\n            result[i] = spherical[i];\n\n            scratchSpherical.clock = spherical[i + 1];\n            scratchSpherical.cone = spherical[i + 2];\n            scratchSpherical.magnitude = spherical[i + 3];\n            Cartesian3.fromSpherical(scratchSpherical, scratchCartesian);\n\n            result[i + 1] = scratchCartesian.x;\n            result[i + 2] = scratchCartesian.y;\n            result[i + 3] = scratchCartesian.z;\n        }\n        return result;\n    }\n\n    function convertCartographicRadiansToCartesian(cartographicRadians) {\n        var length = cartographicRadians.length;\n        if (length === 3) {\n            scratchCartographic.longitude = cartographicRadians[0];\n            scratchCartographic.latitude = cartographicRadians[1];\n            scratchCartographic.height = cartographicRadians[2];\n            Ellipsoid.WGS84.cartographicToCartesian(scratchCartographic, scratchCartesian);\n            return [scratchCartesian.x, scratchCartesian.y, scratchCartesian.z];\n        }\n\n        var result = new Array(length);\n        for (var i = 0; i < length; i += 4) {\n            result[i] = cartographicRadians[i];\n\n            scratchCartographic.longitude = cartographicRadians[i + 1];\n            scratchCartographic.latitude = cartographicRadians[i + 2];\n            scratchCartographic.height = cartographicRadians[i + 3];\n            Ellipsoid.WGS84.cartographicToCartesian(scratchCartographic, scratchCartesian);\n\n            result[i + 1] = scratchCartesian.x;\n            result[i + 2] = scratchCartesian.y;\n            result[i + 3] = scratchCartesian.z;\n        }\n        return result;\n    }\n\n    function convertCartographicDegreesToCartesian(cartographicDegrees) {\n        var length = cartographicDegrees.length;\n        if (length === 3) {\n            scratchCartographic.longitude = CesiumMath.toRadians(cartographicDegrees[0]);\n            scratchCartographic.latitude = CesiumMath.toRadians(cartographicDegrees[1]);\n            scratchCartographic.height = cartographicDegrees[2];\n            Ellipsoid.WGS84.cartographicToCartesian(scratchCartographic, scratchCartesian);\n            return [scratchCartesian.x, scratchCartesian.y, scratchCartesian.z];\n        }\n\n        var result = new Array(length);\n        for (var i = 0; i < length; i += 4) {\n            result[i] = cartographicDegrees[i];\n\n            scratchCartographic.longitude = CesiumMath.toRadians(cartographicDegrees[i + 1]);\n            scratchCartographic.latitude = CesiumMath.toRadians(cartographicDegrees[i + 2]);\n            scratchCartographic.height = cartographicDegrees[i + 3];\n            Ellipsoid.WGS84.cartographicToCartesian(scratchCartographic, scratchCartesian);\n\n            result[i + 1] = scratchCartesian.x;\n            result[i + 2] = scratchCartesian.y;\n            result[i + 3] = scratchCartesian.z;\n        }\n        return result;\n    }\n\n    function unwrapCartesianInterval(czmlInterval) {\n        var cartesian = czmlInterval.cartesian;\n        if (defined(cartesian)) {\n            return cartesian;\n        }\n\n        var cartesianVelocity = czmlInterval.cartesianVelocity;\n        if (defined(cartesianVelocity)) {\n            return cartesianVelocity;\n        }\n\n        var unitCartesian = czmlInterval.unitCartesian;\n        if (defined(unitCartesian)) {\n            return unitCartesian;\n        }\n\n        var unitSpherical = czmlInterval.unitSpherical;\n        if (defined(unitSpherical)) {\n            return convertUnitSphericalToCartesian(unitSpherical);\n        }\n\n        var spherical = czmlInterval.spherical;\n        if (defined(spherical)) {\n            return convertSphericalToCartesian(spherical);\n        }\n\n        var cartographicRadians = czmlInterval.cartographicRadians;\n        if (defined(cartographicRadians)) {\n            return convertCartographicRadiansToCartesian(cartographicRadians);\n        }\n\n        var cartographicDegrees = czmlInterval.cartographicDegrees;\n        if (defined(cartographicDegrees)) {\n            return convertCartographicDegreesToCartesian(cartographicDegrees);\n        }\n\n        throw new RuntimeError(JSON.stringify(czmlInterval) + ' is not a valid CZML interval.');\n    }\n\n    function normalizePackedCartesianArray(array, startingIndex) {\n        Cartesian3.unpack(array, startingIndex, scratchCartesian);\n        Cartesian3.normalize(scratchCartesian, scratchCartesian);\n        Cartesian3.pack(scratchCartesian, array, startingIndex);\n    }\n\n    function unwrapUnitCartesianInterval(czmlInterval) {\n        var cartesian = unwrapCartesianInterval(czmlInterval);\n        if (cartesian.length === 3) {\n            normalizePackedCartesianArray(cartesian, 0);\n            return cartesian;\n        }\n\n        for (var i = 1; i < cartesian.length; i += 4) {\n            normalizePackedCartesianArray(cartesian, i);\n        }\n\n        return cartesian;\n    }\n\n    function normalizePackedQuaternionArray(array, startingIndex) {\n        Quaternion.unpack(array, startingIndex, scratchQuaternion);\n        Quaternion.normalize(scratchQuaternion, scratchQuaternion);\n        Quaternion.pack(scratchQuaternion, array, startingIndex);\n    }\n\n    function unwrapQuaternionInterval(czmlInterval) {\n        var unitQuaternion = czmlInterval.unitQuaternion;\n        if (defined(unitQuaternion)) {\n            if (unitQuaternion.length === 4) {\n                normalizePackedQuaternionArray(unitQuaternion, 0);\n                return unitQuaternion;\n            }\n\n            for (var i = 1; i < unitQuaternion.length; i += 5) {\n                normalizePackedQuaternionArray(unitQuaternion, i);\n            }\n        }\n        return unitQuaternion;\n    }\n\n    function getPropertyType(czmlInterval) {\n        // The associations in this function need to be kept in sync with the\n        // associations in unwrapInterval.\n\n        // Intentionally omitted due to conficts in CZML property names:\n        // * Image (conflicts with Uri)\n        // * Rotation (conflicts with Number)\n        //\n        // cartesianVelocity is also omitted due to incomplete support for\n        // derivative information in CZML properties.\n        // (Currently cartesianVelocity is hacked directly into the position processing code)\n        if (typeof czmlInterval === 'boolean') {\n            return Boolean;\n        } else if (typeof czmlInterval === 'number') {\n            return Number;\n        } else if (typeof czmlInterval === 'string') {\n            return String;\n        } else if (czmlInterval.hasOwnProperty('array')) {\n            return Array;\n        } else if (czmlInterval.hasOwnProperty('boolean')) {\n            return Boolean;\n        } else if (czmlInterval.hasOwnProperty('boundingRectangle')) {\n            return BoundingRectangle;\n        } else if (czmlInterval.hasOwnProperty('cartesian2')) {\n            return Cartesian2;\n        } else if (czmlInterval.hasOwnProperty('cartesian') ||\n                   czmlInterval.hasOwnProperty('spherical') ||\n                   czmlInterval.hasOwnProperty('cartographicRadians') ||\n                   czmlInterval.hasOwnProperty('cartographicDegrees')) {\n            return Cartesian3;\n        } else if (czmlInterval.hasOwnProperty('unitCartesian') ||\n                   czmlInterval.hasOwnProperty('unitSpherical')) {\n            return UnitCartesian3;\n        } else if (czmlInterval.hasOwnProperty('rgba') ||\n                   czmlInterval.hasOwnProperty('rgbaf')) {\n            return Color;\n        } else if (czmlInterval.hasOwnProperty('arcType')) {\n            return ArcType;\n        } else if (czmlInterval.hasOwnProperty('classificationType')) {\n            return ClassificationType;\n        } else if (czmlInterval.hasOwnProperty('colorBlendMode')) {\n            return ColorBlendMode;\n        } else if (czmlInterval.hasOwnProperty('cornerType')) {\n            return CornerType;\n        } else if (czmlInterval.hasOwnProperty('heightReference')) {\n            return HeightReference;\n        } else if (czmlInterval.hasOwnProperty('horizontalOrigin')) {\n            return HorizontalOrigin;\n        } else if (czmlInterval.hasOwnProperty('date')) {\n            return JulianDate;\n        } else if (czmlInterval.hasOwnProperty('labelStyle')) {\n            return LabelStyle;\n        } else if (czmlInterval.hasOwnProperty('number')) {\n            return Number;\n        } else if (czmlInterval.hasOwnProperty('nearFarScalar')) {\n            return NearFarScalar;\n        } else if (czmlInterval.hasOwnProperty('distanceDisplayCondition')) {\n            return DistanceDisplayCondition;\n        } else if (czmlInterval.hasOwnProperty('object') ||\n                   czmlInterval.hasOwnProperty('value')) {\n            return Object;\n        } else if (czmlInterval.hasOwnProperty('unitQuaternion')) {\n            return Quaternion;\n        } else if (czmlInterval.hasOwnProperty('shadowMode')) {\n            return ShadowMode;\n        } else if (czmlInterval.hasOwnProperty('string')) {\n            return String;\n        } else if (czmlInterval.hasOwnProperty('stripeOrientation')) {\n            return StripeOrientation;\n        } else if (czmlInterval.hasOwnProperty('wsen') ||\n                   czmlInterval.hasOwnProperty('wsenDegrees')) {\n            return Rectangle;\n        } else if (czmlInterval.hasOwnProperty('uri')) {\n            return Uri;\n        } else if (czmlInterval.hasOwnProperty('verticalOrigin')) {\n            return VerticalOrigin;\n        }\n        // fallback case\n        return Object;\n    }\n\n    function unwrapInterval(type, czmlInterval, sourceUri) {\n        // The associations in this function need to be kept in sync with the\n        // associations in getPropertyType\n        switch (type) {\n            case ArcType:\n                return ArcType[defaultValue(czmlInterval.arcType, czmlInterval)];\n            case Array:\n                return czmlInterval.array;\n            case Boolean:\n                return defaultValue(czmlInterval['boolean'], czmlInterval);\n            case BoundingRectangle:\n                return czmlInterval.boundingRectangle;\n            case Cartesian2:\n                return czmlInterval.cartesian2;\n            case Cartesian3:\n                return unwrapCartesianInterval(czmlInterval);\n            case UnitCartesian3:\n                return unwrapUnitCartesianInterval(czmlInterval);\n            case Color:\n                return unwrapColorInterval(czmlInterval);\n            case ClassificationType:\n                return ClassificationType[defaultValue(czmlInterval.classificationType, czmlInterval)];\n            case ColorBlendMode:\n                return ColorBlendMode[defaultValue(czmlInterval.colorBlendMode, czmlInterval)];\n            case CornerType:\n                return CornerType[defaultValue(czmlInterval.cornerType, czmlInterval)];\n            case HeightReference:\n                return HeightReference[defaultValue(czmlInterval.heightReference, czmlInterval)];\n            case HorizontalOrigin:\n                return HorizontalOrigin[defaultValue(czmlInterval.horizontalOrigin, czmlInterval)];\n            case Image:\n                return unwrapUriInterval(czmlInterval, sourceUri);\n            case JulianDate:\n                return JulianDate.fromIso8601(defaultValue(czmlInterval.date, czmlInterval));\n            case LabelStyle:\n                return LabelStyle[defaultValue(czmlInterval.labelStyle, czmlInterval)];\n            case Number:\n                return defaultValue(czmlInterval.number, czmlInterval);\n            case NearFarScalar:\n                return czmlInterval.nearFarScalar;\n            case DistanceDisplayCondition:\n                return czmlInterval.distanceDisplayCondition;\n            case Object:\n                return defaultValue(defaultValue(czmlInterval.object, czmlInterval.value), czmlInterval);\n            case Quaternion:\n                return unwrapQuaternionInterval(czmlInterval);\n            case Rectangle:\n                return unwrapRectangleInterval(czmlInterval);\n            case Rotation:\n                return defaultValue(czmlInterval.number, czmlInterval);\n            case ShadowMode:\n                return ShadowMode[defaultValue(defaultValue(czmlInterval.shadowMode, czmlInterval.shadows), czmlInterval)];\n            case String:\n                return defaultValue(czmlInterval.string, czmlInterval);\n            case StripeOrientation:\n                return StripeOrientation[defaultValue(czmlInterval.stripeOrientation, czmlInterval)];\n            case Uri:\n                return unwrapUriInterval(czmlInterval, sourceUri);\n            case VerticalOrigin:\n                return VerticalOrigin[defaultValue(czmlInterval.verticalOrigin, czmlInterval)];\n            default:\n                throw new RuntimeError(type);\n        }\n    }\n\n    var interpolators = {\n        HERMITE : HermitePolynomialApproximation,\n        LAGRANGE : LagrangePolynomialApproximation,\n        LINEAR : LinearApproximation\n    };\n\n    function updateInterpolationSettings(packetData, property) {\n        var interpolationAlgorithm = packetData.interpolationAlgorithm;\n        var interpolationDegree = packetData.interpolationDegree;\n        if (defined(interpolationAlgorithm) || defined(interpolationDegree)) {\n            property.setInterpolationOptions({\n                interpolationAlgorithm : interpolators[interpolationAlgorithm],\n                interpolationDegree : interpolationDegree\n            });\n        }\n\n        var forwardExtrapolationType = packetData.forwardExtrapolationType;\n        if (defined(forwardExtrapolationType)) {\n            property.forwardExtrapolationType = ExtrapolationType[forwardExtrapolationType];\n        }\n\n        var forwardExtrapolationDuration = packetData.forwardExtrapolationDuration;\n        if (defined(forwardExtrapolationDuration)) {\n            property.forwardExtrapolationDuration = forwardExtrapolationDuration;\n        }\n\n        var backwardExtrapolationType = packetData.backwardExtrapolationType;\n        if (defined(backwardExtrapolationType)) {\n            property.backwardExtrapolationType = ExtrapolationType[backwardExtrapolationType];\n        }\n\n        var backwardExtrapolationDuration = packetData.backwardExtrapolationDuration;\n        if (defined(backwardExtrapolationDuration)) {\n            property.backwardExtrapolationDuration = backwardExtrapolationDuration;\n        }\n    }\n\n    var iso8601Scratch = {\n        iso8601 : undefined\n    };\n\n    function intervalFromString(intervalString) {\n        if (!defined(intervalString)) {\n            return undefined;\n        }\n        iso8601Scratch.iso8601 = intervalString;\n        return TimeInterval.fromIso8601(iso8601Scratch);\n    }\n\n    function wrapPropertyInInfiniteInterval(property) {\n        var interval = Iso8601.MAXIMUM_INTERVAL.clone();\n        interval.data = property;\n        return interval;\n    }\n\n    function convertPropertyToComposite(property) {\n        // Create the composite and add the old property, wrapped in an infinite interval.\n        var composite = new CompositeProperty();\n        composite.intervals.addInterval(wrapPropertyInInfiniteInterval(property));\n        return composite;\n    }\n\n    function convertPositionPropertyToComposite(property) {\n        // Create the composite and add the old property, wrapped in an infinite interval.\n        var composite = new CompositePositionProperty(property.referenceFrame);\n        composite.intervals.addInterval(wrapPropertyInInfiniteInterval(property));\n        return composite;\n    }\n\n    function processProperty(type, object, propertyName, packetData, constrainedInterval, sourceUri, entityCollection) {\n        var combinedInterval = intervalFromString(packetData.interval);\n        if (defined(constrainedInterval)) {\n            if (defined(combinedInterval)) {\n                combinedInterval = TimeInterval.intersect(combinedInterval, constrainedInterval, scratchTimeInterval);\n            } else {\n                combinedInterval = constrainedInterval;\n            }\n        }\n\n        var packedLength;\n        var unwrappedInterval;\n        var unwrappedIntervalLength;\n\n        // CZML properties can be defined in many ways.  Most ways represent a structure for\n        // encoding a single value (number, string, cartesian, etc.)  Regardless of the value type,\n        // if it encodes a single value it will get loaded into a ConstantProperty eventually.\n        // Alternatively, there are ways of defining a property that require specialized\n        // client-side representation. Currently, these are ReferenceProperty,\n        // and client-side velocity computation properties such as VelocityVectorProperty.\n        var isValue = !defined(packetData.reference) && !defined(packetData.velocityReference);\n        var hasInterval = defined(combinedInterval) && !combinedInterval.equals(Iso8601.MAXIMUM_INTERVAL);\n\n        if (packetData.delete === true) {\n            // If deleting this property for all time, we can simply set to undefined and return.\n            if (!hasInterval) {\n                object[propertyName] = undefined;\n                return;\n            }\n\n            // Deleting depends on the type of property we have.\n            return removePropertyData(object[propertyName], combinedInterval);\n        }\n\n        var isSampled = false;\n\n        if (isValue) {\n            unwrappedInterval = unwrapInterval(type, packetData, sourceUri);\n            if (!defined(unwrappedInterval)) {\n                // not a known value type, bail\n                return;\n            }\n            packedLength = defaultValue(type.packedLength, 1);\n            unwrappedIntervalLength = defaultValue(unwrappedInterval.length, 1);\n            isSampled = !defined(packetData.array) && (typeof unwrappedInterval !== 'string') && (unwrappedIntervalLength > packedLength) && (type !== Object);\n        }\n\n        // Rotation is a special case because it represents a native type (Number)\n        // and therefore does not need to be unpacked when loaded as a constant value.\n        var needsUnpacking = typeof type.unpack === 'function' && type !== Rotation;\n\n        // Any time a constant value is assigned, it completely blows away anything else.\n        if (!isSampled && !hasInterval) {\n            if (isValue) {\n                object[propertyName] = new ConstantProperty(needsUnpacking ? type.unpack(unwrappedInterval, 0) : unwrappedInterval);\n            } else {\n                object[propertyName] = createSpecializedProperty(type, entityCollection, packetData);\n            }\n            return;\n        }\n\n        var property = object[propertyName];\n\n        var epoch;\n        var packetEpoch = packetData.epoch;\n        if (defined(packetEpoch)) {\n            epoch = JulianDate.fromIso8601(packetEpoch);\n        }\n\n        // Without an interval, any sampled value is infinite, meaning it completely\n        // replaces any non-sampled property that may exist.\n        if (isSampled && !hasInterval) {\n            if (!(property instanceof SampledProperty)) {\n                object[propertyName] = property = new SampledProperty(type);\n            }\n            property.addSamplesPackedArray(unwrappedInterval, epoch);\n            updateInterpolationSettings(packetData, property);\n            return;\n        }\n\n        var interval;\n\n        // A constant value with an interval is normally part of a TimeIntervalCollection,\n        // However, if the current property is not a time-interval collection, we need\n        // to turn it into a Composite, preserving the old data with the new interval.\n        if (!isSampled && hasInterval) {\n            // Create a new interval for the constant value.\n            combinedInterval = combinedInterval.clone();\n            if (isValue) {\n                combinedInterval.data = needsUnpacking ? type.unpack(unwrappedInterval, 0) : unwrappedInterval;\n            } else {\n                combinedInterval.data = createSpecializedProperty(type, entityCollection, packetData);\n            }\n\n            // If no property exists, simply use a new interval collection\n            if (!defined(property)) {\n                object[propertyName] = property = isValue ? new TimeIntervalCollectionProperty() : new CompositeProperty();\n            }\n\n            if (isValue && property instanceof TimeIntervalCollectionProperty) {\n                // If we created a collection, or it already was one, use it.\n                property.intervals.addInterval(combinedInterval);\n            } else if (property instanceof CompositeProperty) {\n                // If the collection was already a CompositeProperty, use it.\n                if (isValue) {\n                    combinedInterval.data = new ConstantProperty(combinedInterval.data);\n                }\n                property.intervals.addInterval(combinedInterval);\n            } else {\n                // Otherwise, create a CompositeProperty but preserve the existing data.\n                object[propertyName] = property = convertPropertyToComposite(property);\n\n                // Change the new data to a ConstantProperty and add it.\n                if (isValue) {\n                    combinedInterval.data = new ConstantProperty(combinedInterval.data);\n                }\n                property.intervals.addInterval(combinedInterval);\n            }\n\n            return;\n        }\n\n        // isSampled && hasInterval\n        if (!defined(property)) {\n            object[propertyName] = property = new CompositeProperty();\n        }\n\n        // Create a CompositeProperty but preserve the existing data.\n        if (!(property instanceof CompositeProperty)) {\n            object[propertyName] = property = convertPropertyToComposite(property);\n        }\n\n        // Check if the interval already exists in the composite.\n        var intervals = property.intervals;\n        interval = intervals.findInterval(combinedInterval);\n        if (!defined(interval) || !(interval.data instanceof SampledProperty)) {\n            // If not, create a SampledProperty for it.\n            interval = combinedInterval.clone();\n            interval.data = new SampledProperty(type);\n            intervals.addInterval(interval);\n        }\n        interval.data.addSamplesPackedArray(unwrappedInterval, epoch);\n        updateInterpolationSettings(packetData, interval.data);\n    }\n\n    function removePropertyData(property, interval) {\n        if (property instanceof SampledProperty) {\n            property.removeSamples(interval);\n            return;\n        } else if (property instanceof TimeIntervalCollectionProperty) {\n            property.intervals.removeInterval(interval);\n            return;\n        } else if (property instanceof CompositeProperty) {\n            var intervals = property.intervals;\n            for (var i = 0; i < intervals.length; ++i) {\n                var intersection = TimeInterval.intersect(intervals.get(i), interval, scratchTimeInterval);\n                if (!intersection.isEmpty) {\n                    // remove data from the contained properties\n                    removePropertyData(intersection.data, interval);\n                }\n            }\n            // remove the intervals from the composite\n            intervals.removeInterval(interval);\n            return;\n        }\n    }\n\n    function processPacketData(type, object, propertyName, packetData, interval, sourceUri, entityCollection) {\n        if (!defined(packetData)) {\n            return;\n        }\n\n        if (isArray(packetData)) {\n            for (var i = 0, len = packetData.length; i < len; ++i) {\n                processProperty(type, object, propertyName, packetData[i], interval, sourceUri, entityCollection);\n            }\n        } else {\n            processProperty(type, object, propertyName, packetData, interval, sourceUri, entityCollection);\n        }\n    }\n\n    function processPositionProperty(object, propertyName, packetData, constrainedInterval, sourceUri, entityCollection) {\n        var combinedInterval = intervalFromString(packetData.interval);\n        if (defined(constrainedInterval)) {\n            if (defined(combinedInterval)) {\n                combinedInterval = TimeInterval.intersect(combinedInterval, constrainedInterval, scratchTimeInterval);\n            } else {\n                combinedInterval = constrainedInterval;\n            }\n        }\n\n        var numberOfDerivatives = defined(packetData.cartesianVelocity) ? 1 : 0;\n        var packedLength = Cartesian3.packedLength * (numberOfDerivatives + 1);\n        var unwrappedInterval;\n        var unwrappedIntervalLength;\n        var isValue = !defined(packetData.reference);\n        var hasInterval = defined(combinedInterval) && !combinedInterval.equals(Iso8601.MAXIMUM_INTERVAL);\n\n        if (packetData.delete === true) {\n            // If deleting this property for all time, we can simply set to undefined and return.\n            if (!hasInterval) {\n                object[propertyName] = undefined;\n                return;\n            }\n\n            // Deleting depends on the type of property we have.\n            return removePositionPropertyData(object[propertyName], combinedInterval);\n        }\n\n        var referenceFrame;\n        var isSampled = false;\n\n        if (isValue) {\n            if (defined(packetData.referenceFrame)) {\n                referenceFrame = ReferenceFrame[packetData.referenceFrame];\n            }\n            referenceFrame = defaultValue(referenceFrame, ReferenceFrame.FIXED);\n            unwrappedInterval = unwrapCartesianInterval(packetData);\n            unwrappedIntervalLength = defaultValue(unwrappedInterval.length, 1);\n            isSampled = unwrappedIntervalLength > packedLength;\n        }\n\n        // Any time a constant value is assigned, it completely blows away anything else.\n        if (!isSampled && !hasInterval) {\n            if (isValue) {\n                object[propertyName] = new ConstantPositionProperty(Cartesian3.unpack(unwrappedInterval), referenceFrame);\n            } else {\n                object[propertyName] = createReferenceProperty(entityCollection, packetData.reference);\n            }\n            return;\n        }\n\n        var property = object[propertyName];\n\n        var epoch;\n        var packetEpoch = packetData.epoch;\n        if (defined(packetEpoch)) {\n            epoch = JulianDate.fromIso8601(packetEpoch);\n        }\n\n        // Without an interval, any sampled value is infinite, meaning it completely\n        // replaces any non-sampled property that may exist.\n        if (isSampled && !hasInterval) {\n            if (!(property instanceof SampledPositionProperty) || (defined(referenceFrame) && property.referenceFrame !== referenceFrame)) {\n                object[propertyName] = property = new SampledPositionProperty(referenceFrame, numberOfDerivatives);\n            }\n            property.addSamplesPackedArray(unwrappedInterval, epoch);\n            updateInterpolationSettings(packetData, property);\n            return;\n        }\n\n        var interval;\n\n        // A constant value with an interval is normally part of a TimeIntervalCollection,\n        // However, if the current property is not a time-interval collection, we need\n        // to turn it into a Composite, preserving the old data with the new interval.\n        if (!isSampled && hasInterval) {\n            // Create a new interval for the constant value.\n            combinedInterval = combinedInterval.clone();\n            if (isValue) {\n                combinedInterval.data = Cartesian3.unpack(unwrappedInterval);\n            } else {\n                combinedInterval.data = createReferenceProperty(entityCollection, packetData.reference);\n            }\n\n            // If no property exists, simply use a new interval collection\n            if (!defined(property)) {\n                if (isValue) {\n                    property = new TimeIntervalCollectionPositionProperty(referenceFrame);\n                } else {\n                    property = new CompositePositionProperty(referenceFrame);\n                }\n                object[propertyName] = property;\n            }\n\n            if (isValue && property instanceof TimeIntervalCollectionPositionProperty && (defined(referenceFrame) && property.referenceFrame === referenceFrame)) {\n                // If we create a collection, or it already existed, use it.\n                property.intervals.addInterval(combinedInterval);\n            } else if (property instanceof CompositePositionProperty) {\n                // If the collection was already a CompositePositionProperty, use it.\n                if (isValue) {\n                    combinedInterval.data = new ConstantPositionProperty(combinedInterval.data, referenceFrame);\n                }\n                property.intervals.addInterval(combinedInterval);\n            } else {\n                // Otherwise, create a CompositePositionProperty but preserve the existing data.\n                object[propertyName] = property = convertPositionPropertyToComposite(property);\n\n                // Change the new data to a ConstantPositionProperty and add it.\n                if (isValue) {\n                    combinedInterval.data = new ConstantPositionProperty(combinedInterval.data, referenceFrame);\n                }\n                property.intervals.addInterval(combinedInterval);\n            }\n\n            return;\n        }\n\n        // isSampled && hasInterval\n        if (!defined(property)) {\n            object[propertyName] = property = new CompositePositionProperty(referenceFrame);\n        } else if (!(property instanceof CompositePositionProperty)) {\n            // Create a CompositeProperty but preserve the existing data.\n            object[propertyName] = property = convertPositionPropertyToComposite(property);\n        }\n\n        // Check if the interval already exists in the composite.\n        var intervals = property.intervals;\n        interval = intervals.findInterval(combinedInterval);\n        if (!defined(interval) || !(interval.data instanceof SampledPositionProperty) || (defined(referenceFrame) && interval.data.referenceFrame !== referenceFrame)) {\n            // If not, create a SampledPositionProperty for it.\n            interval = combinedInterval.clone();\n            interval.data = new SampledPositionProperty(referenceFrame, numberOfDerivatives);\n            intervals.addInterval(interval);\n        }\n        interval.data.addSamplesPackedArray(unwrappedInterval, epoch);\n        updateInterpolationSettings(packetData, interval.data);\n    }\n\n    function removePositionPropertyData(property, interval) {\n        if (property instanceof SampledPositionProperty) {\n            property.removeSamples(interval);\n            return;\n        } else if (property instanceof TimeIntervalCollectionPositionProperty) {\n            property.intervals.removeInterval(interval);\n            return;\n        } else if (property instanceof CompositePositionProperty) {\n            var intervals = property.intervals;\n            for (var i = 0; i < intervals.length; ++i) {\n                var intersection = TimeInterval.intersect(intervals.get(i), interval, scratchTimeInterval);\n                if (!intersection.isEmpty) {\n                    // remove data from the contained properties\n                    removePositionPropertyData(intersection.data, interval);\n                }\n            }\n            // remove the intervals from the composite\n            intervals.removeInterval(interval);\n            return;\n        }\n    }\n\n    function processPositionPacketData(object, propertyName, packetData, interval, sourceUri, entityCollection) {\n        if (!defined(packetData)) {\n            return;\n        }\n\n        if (isArray(packetData)) {\n            for (var i = 0, len = packetData.length; i < len; ++i) {\n                processPositionProperty(object, propertyName, packetData[i], interval, sourceUri, entityCollection);\n            }\n        } else {\n            processPositionProperty(object, propertyName, packetData, interval, sourceUri, entityCollection);\n        }\n    }\n\n    function processMaterialProperty(object, propertyName, packetData, constrainedInterval, sourceUri, entityCollection) {\n        var combinedInterval = intervalFromString(packetData.interval);\n        if (defined(constrainedInterval)) {\n            if (defined(combinedInterval)) {\n                combinedInterval = TimeInterval.intersect(combinedInterval, constrainedInterval, scratchTimeInterval);\n            } else {\n                combinedInterval = constrainedInterval;\n            }\n        }\n\n        var property = object[propertyName];\n        var existingMaterial;\n        var existingInterval;\n\n        if (defined(combinedInterval)) {\n            if (!(property instanceof CompositeMaterialProperty)) {\n                property = new CompositeMaterialProperty();\n                object[propertyName] = property;\n            }\n            //See if we already have data at that interval.\n            var thisIntervals = property.intervals;\n            existingInterval = thisIntervals.findInterval({\n                start : combinedInterval.start,\n                stop : combinedInterval.stop\n            });\n            if (defined(existingInterval)) {\n                //We have an interval, but we need to make sure the\n                //new data is the same type of material as the old data.\n                existingMaterial = existingInterval.data;\n            } else {\n                //If not, create it.\n                existingInterval = combinedInterval.clone();\n                thisIntervals.addInterval(existingInterval);\n            }\n        } else {\n            existingMaterial = property;\n        }\n\n        var materialData;\n        if (defined(packetData.solidColor)) {\n            if (!(existingMaterial instanceof ColorMaterialProperty)) {\n                existingMaterial = new ColorMaterialProperty();\n            }\n            materialData = packetData.solidColor;\n            processPacketData(Color, existingMaterial, 'color', materialData.color, undefined, undefined, entityCollection);\n        } else if (defined(packetData.grid)) {\n            if (!(existingMaterial instanceof GridMaterialProperty)) {\n                existingMaterial = new GridMaterialProperty();\n            }\n            materialData = packetData.grid;\n            processPacketData(Color, existingMaterial, 'color', materialData.color, undefined, sourceUri, entityCollection);\n            processPacketData(Number, existingMaterial, 'cellAlpha', materialData.cellAlpha, undefined, sourceUri, entityCollection);\n            processPacketData(Cartesian2, existingMaterial, 'lineCount', materialData.lineCount, undefined, sourceUri, entityCollection);\n            processPacketData(Cartesian2, existingMaterial, 'lineThickness', materialData.lineThickness, undefined, sourceUri, entityCollection);\n            processPacketData(Cartesian2, existingMaterial, 'lineOffset', materialData.lineOffset, undefined, sourceUri, entityCollection);\n        } else if (defined(packetData.image)) {\n            if (!(existingMaterial instanceof ImageMaterialProperty)) {\n                existingMaterial = new ImageMaterialProperty();\n            }\n            materialData = packetData.image;\n            processPacketData(Image, existingMaterial, 'image', materialData.image, undefined, sourceUri, entityCollection);\n            processPacketData(Cartesian2, existingMaterial, 'repeat', materialData.repeat, undefined, sourceUri, entityCollection);\n            processPacketData(Color, existingMaterial, 'color', materialData.color, undefined, sourceUri, entityCollection);\n            processPacketData(Boolean, existingMaterial, 'transparent', materialData.transparent, undefined, sourceUri, entityCollection);\n        } else if (defined(packetData.stripe)) {\n            if (!(existingMaterial instanceof StripeMaterialProperty)) {\n                existingMaterial = new StripeMaterialProperty();\n            }\n            materialData = packetData.stripe;\n            processPacketData(StripeOrientation, existingMaterial, 'orientation', materialData.orientation, undefined, sourceUri, entityCollection);\n            processPacketData(Color, existingMaterial, 'evenColor', materialData.evenColor, undefined, sourceUri, entityCollection);\n            processPacketData(Color, existingMaterial, 'oddColor', materialData.oddColor, undefined, sourceUri, entityCollection);\n            processPacketData(Number, existingMaterial, 'offset', materialData.offset, undefined, sourceUri, entityCollection);\n            processPacketData(Number, existingMaterial, 'repeat', materialData.repeat, undefined, sourceUri, entityCollection);\n        } else if (defined(packetData.polylineOutline)) {\n            if (!(existingMaterial instanceof PolylineOutlineMaterialProperty)) {\n                existingMaterial = new PolylineOutlineMaterialProperty();\n            }\n            materialData = packetData.polylineOutline;\n            processPacketData(Color, existingMaterial, 'color', materialData.color, undefined, sourceUri, entityCollection);\n            processPacketData(Color, existingMaterial, 'outlineColor', materialData.outlineColor, undefined, sourceUri, entityCollection);\n            processPacketData(Number, existingMaterial, 'outlineWidth', materialData.outlineWidth, undefined, sourceUri, entityCollection);\n        } else if (defined(packetData.polylineGlow)) {\n            if (!(existingMaterial instanceof PolylineGlowMaterialProperty)) {\n                existingMaterial = new PolylineGlowMaterialProperty();\n            }\n            materialData = packetData.polylineGlow;\n            processPacketData(Color, existingMaterial, 'color', materialData.color, undefined, sourceUri, entityCollection);\n            processPacketData(Number, existingMaterial, 'glowPower', materialData.glowPower, undefined, sourceUri, entityCollection);\n            processPacketData(Number, existingMaterial, 'taperPower', materialData.taperPower, undefined, sourceUri, entityCollection);\n        } else if (defined(packetData.polylineArrow)) {\n            if (!(existingMaterial instanceof PolylineArrowMaterialProperty)) {\n                existingMaterial = new PolylineArrowMaterialProperty();\n            }\n            materialData = packetData.polylineArrow;\n            processPacketData(Color, existingMaterial, 'color', materialData.color, undefined, undefined, entityCollection);\n        } else if (defined(packetData.polylineDash)) {\n            if (!(existingMaterial instanceof PolylineDashMaterialProperty)) {\n                existingMaterial = new PolylineDashMaterialProperty();\n            }\n            materialData = packetData.polylineDash;\n            processPacketData(Color, existingMaterial, 'color', materialData.color, undefined, undefined, entityCollection);\n            processPacketData(Color, existingMaterial, 'gapColor', materialData.gapColor, undefined, undefined, entityCollection);\n            processPacketData(Number, existingMaterial, 'dashLength', materialData.dashLength, undefined, sourceUri, entityCollection);\n            processPacketData(Number, existingMaterial, 'dashPattern', materialData.dashPattern, undefined, sourceUri, entityCollection);\n        } else if (defined(packetData.checkerboard)) {\n            if (!(existingMaterial instanceof CheckerboardMaterialProperty)) {\n                existingMaterial = new CheckerboardMaterialProperty();\n            }\n            materialData = packetData.checkerboard;\n            processPacketData(Color, existingMaterial, 'evenColor', materialData.evenColor, undefined, sourceUri, entityCollection);\n            processPacketData(Color, existingMaterial, 'oddColor', materialData.oddColor, undefined, sourceUri, entityCollection);\n            processPacketData(Cartesian2, existingMaterial, 'repeat', materialData.repeat, undefined, sourceUri, entityCollection);\n        }\n\n        if (defined(existingInterval)) {\n            existingInterval.data = existingMaterial;\n        } else {\n            object[propertyName] = existingMaterial;\n        }\n    }\n\n    function processMaterialPacketData(object, propertyName, packetData, interval, sourceUri, entityCollection) {\n        if (!defined(packetData)) {\n            return;\n        }\n\n        if (isArray(packetData)) {\n            for (var i = 0, len = packetData.length; i < len; ++i) {\n                processMaterialProperty(object, propertyName, packetData[i], interval, sourceUri, entityCollection);\n            }\n        } else {\n            processMaterialProperty(object, propertyName, packetData, interval, sourceUri, entityCollection);\n        }\n    }\n\n    function processName(entity, packet, entityCollection, sourceUri) {\n        var nameData = packet.name;\n        if (defined(nameData)) {\n            entity.name = packet.name;\n        }\n    }\n\n    function processDescription(entity, packet, entityCollection, sourceUri) {\n        var descriptionData = packet.description;\n        if (defined(descriptionData)) {\n            processPacketData(String, entity, 'description', descriptionData, undefined, sourceUri, entityCollection);\n        }\n    }\n\n    function processPosition(entity, packet, entityCollection, sourceUri) {\n        var positionData = packet.position;\n        if (defined(positionData)) {\n            processPositionPacketData(entity, 'position', positionData, undefined, sourceUri, entityCollection);\n        }\n    }\n\n    function processViewFrom(entity, packet, entityCollection, sourceUri) {\n        var viewFromData = packet.viewFrom;\n        if (defined(viewFromData)) {\n            processPacketData(Cartesian3, entity, 'viewFrom', viewFromData, undefined, sourceUri, entityCollection);\n        }\n    }\n\n    function processOrientation(entity, packet, entityCollection, sourceUri) {\n        var orientationData = packet.orientation;\n        if (defined(orientationData)) {\n            processPacketData(Quaternion, entity, 'orientation', orientationData, undefined, sourceUri, entityCollection);\n        }\n    }\n\n    function processProperties(entity, packet, entityCollection, sourceUri) {\n        var propertiesData = packet.properties;\n        if (defined(propertiesData)) {\n            if (!defined(entity.properties)) {\n                entity.properties = new PropertyBag();\n            }\n\n            // We cannot simply call processPacketData(entity, 'properties', propertyData, undefined, sourceUri, entityCollection)\n            // because each property of \"properties\" may vary separately.\n            // The properties will be accessible as entity.properties.myprop.getValue(time).\n\n            for (var key in propertiesData) {\n                if (propertiesData.hasOwnProperty(key)) {\n                    if (!entity.properties.hasProperty(key)) {\n                        entity.properties.addProperty(key);\n                    }\n\n                    var propertyData = propertiesData[key];\n                    if (isArray(propertyData)) {\n                        for (var i = 0, len = propertyData.length; i < len; ++i) {\n                            processProperty(getPropertyType(propertyData[i]), entity.properties, key, propertyData[i], undefined, sourceUri, entityCollection);\n                        }\n                    } else {\n                        processProperty(getPropertyType(propertyData), entity.properties, key, propertyData, undefined, sourceUri, entityCollection);\n                    }\n                }\n            }\n        }\n    }\n\n    function processReferencesArrayPacketData(object, propertyName, references, interval, entityCollection, PropertyArrayType, CompositePropertyArrayType) {\n        var properties = references.map(function(reference) {\n            return createReferenceProperty(entityCollection, reference);\n        });\n\n        if (defined(interval)) {\n            interval = intervalFromString(interval);\n            var property = object[propertyName];\n            if (!(property instanceof CompositePropertyArrayType)) {\n                // If the property was not already a CompositeProperty,\n                // create a CompositeProperty but preserve the existing data.\n\n                // Create the composite and add the old property, wrapped in an infinite interval.\n                var composite = new CompositePropertyArrayType();\n                composite.intervals.addInterval(wrapPropertyInInfiniteInterval(property));\n\n                object[propertyName] = property = composite;\n            }\n\n            interval.data = new PropertyArrayType(properties);\n            property.intervals.addInterval(interval);\n        } else {\n            object[propertyName] = new PropertyArrayType(properties);\n        }\n    }\n\n    function processArrayPacketData(object, propertyName, packetData, entityCollection) {\n        var references = packetData.references;\n        if (defined(references)) {\n            processReferencesArrayPacketData(object, propertyName, references, packetData.interval, entityCollection, PropertyArray, CompositeProperty);\n        } else {\n            processPacketData(Array, object, propertyName, packetData, undefined, undefined, entityCollection);\n        }\n    }\n\n    function processArray(object, propertyName, packetData, entityCollection) {\n        if (!defined(packetData)) {\n            return;\n        }\n\n        if (isArray(packetData)) {\n            for (var i = 0, length = packetData.length; i < length; ++i) {\n                processArrayPacketData(object, propertyName, packetData[i], entityCollection);\n            }\n        } else {\n            processArrayPacketData(object, propertyName, packetData, entityCollection);\n        }\n    }\n\n    function processPositionArrayPacketData(object, propertyName, packetData, entityCollection) {\n        var references = packetData.references;\n        if (defined(references)) {\n            processReferencesArrayPacketData(object, propertyName, references, packetData.interval, entityCollection, PositionPropertyArray, CompositePositionProperty);\n        } else {\n            if (defined(packetData.cartesian)) {\n                packetData.array = Cartesian3.unpackArray(packetData.cartesian);\n            } else if (defined(packetData.cartographicRadians)) {\n                packetData.array = Cartesian3.fromRadiansArrayHeights(packetData.cartographicRadians);\n            } else if (defined(packetData.cartographicDegrees)) {\n                packetData.array = Cartesian3.fromDegreesArrayHeights(packetData.cartographicDegrees);\n            }\n\n            if (defined(packetData.array)) {\n                processPacketData(Array, object, propertyName, packetData, undefined, undefined, entityCollection);\n            }\n        }\n    }\n\n    function processPositionArray(object, propertyName, packetData, entityCollection) {\n        if (!defined(packetData)) {\n            return;\n        }\n\n        if (isArray(packetData)) {\n            for (var i = 0, length = packetData.length; i < length; ++i) {\n                processPositionArrayPacketData(object, propertyName, packetData[i], entityCollection);\n            }\n        } else {\n            processPositionArrayPacketData(object, propertyName, packetData, entityCollection);\n        }\n    }\n\n    function unpackCartesianArray(array) {\n        return Cartesian3.unpackArray(array);\n    }\n\n    function unpackCartographicRadiansArray(array) {\n        return Cartesian3.fromRadiansArrayHeights(array);\n    }\n\n    function unpackCartographicDegreesArray(array) {\n        return Cartesian3.fromDegreesArrayHeights(array);\n    }\n\n    function processPositionArrayOfArraysPacketData(object, propertyName, packetData, entityCollection) {\n        var references = packetData.references;\n        if (defined(references)) {\n            var properties = references.map(function(referenceArray) {\n                var tempObj = {};\n                processReferencesArrayPacketData(tempObj, 'positions', referenceArray, packetData.interval, entityCollection, PositionPropertyArray, CompositePositionProperty);\n                return tempObj.positions;\n            });\n            object[propertyName] = new PositionPropertyArray(properties);\n        } else {\n            if (defined(packetData.cartesian)) {\n                packetData.array = packetData.cartesian.map(unpackCartesianArray);\n            } else if (defined(packetData.cartographicRadians)) {\n                packetData.array = packetData.cartographicRadians.map(unpackCartographicRadiansArray);\n            } else if (defined(packetData.cartographicDegrees)) {\n                packetData.array = packetData.cartographicDegrees.map(unpackCartographicDegreesArray);\n            }\n\n            if (defined(packetData.array)) {\n                processPacketData(Array, object, propertyName, packetData, undefined, undefined, entityCollection);\n            }\n        }\n    }\n\n    function processPositionArrayOfArrays(object, propertyName, packetData, entityCollection) {\n        if (!defined(packetData)) {\n            return;\n        }\n\n        if (isArray(packetData)) {\n            for (var i = 0, length = packetData.length; i < length; ++i) {\n                processPositionArrayOfArraysPacketData(object, propertyName, packetData[i], entityCollection);\n            }\n        } else {\n            processPositionArrayOfArraysPacketData(object, propertyName, packetData, entityCollection);\n        }\n    }\n\n    function processAvailability(entity, packet, entityCollection, sourceUri) {\n        var packetData = packet.availability;\n        if (!defined(packetData)) {\n            return;\n        }\n\n        var intervals;\n        if (isArray(packetData)) {\n            for (var i = 0, len = packetData.length; i < len; ++i) {\n                if (!defined(intervals)) {\n                    intervals = new TimeIntervalCollection();\n                }\n                intervals.addInterval(intervalFromString(packetData[i]));\n            }\n        } else {\n            intervals = new TimeIntervalCollection();\n            intervals.addInterval(intervalFromString(packetData));\n        }\n        entity.availability = intervals;\n    }\n\n    function processAlignedAxis(billboard, packetData, interval, sourceUri, entityCollection) {\n        if (!defined(packetData)) {\n            return;\n        }\n\n        processPacketData(UnitCartesian3, billboard, 'alignedAxis', packetData, interval, sourceUri, entityCollection);\n    }\n\n    function processBillboard(entity, packet, entityCollection, sourceUri) {\n        var billboardData = packet.billboard;\n        if (!defined(billboardData)) {\n            return;\n        }\n\n        var interval = intervalFromString(billboardData.interval);\n        var billboard = entity.billboard;\n        if (!defined(billboard)) {\n            entity.billboard = billboard = new BillboardGraphics();\n        }\n\n        processPacketData(Boolean, billboard, 'show', billboardData.show, interval, sourceUri, entityCollection);\n        processPacketData(Image, billboard, 'image', billboardData.image, interval, sourceUri, entityCollection);\n        processPacketData(Number, billboard, 'scale', billboardData.scale, interval, sourceUri, entityCollection);\n        processPacketData(Cartesian2, billboard, 'pixelOffset', billboardData.pixelOffset, interval, sourceUri, entityCollection);\n        processPacketData(Cartesian3, billboard, 'eyeOffset', billboardData.eyeOffset, interval, sourceUri, entityCollection);\n        processPacketData(HorizontalOrigin, billboard, 'horizontalOrigin', billboardData.horizontalOrigin, interval, sourceUri, entityCollection);\n        processPacketData(VerticalOrigin, billboard, 'verticalOrigin', billboardData.verticalOrigin, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, billboard, 'heightReference', billboardData.heightReference, interval, sourceUri, entityCollection);\n        processPacketData(Color, billboard, 'color', billboardData.color, interval, sourceUri, entityCollection);\n        processPacketData(Rotation, billboard, 'rotation', billboardData.rotation, interval, sourceUri, entityCollection);\n        processAlignedAxis(billboard, billboardData.alignedAxis, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, billboard, 'sizeInMeters', billboardData.sizeInMeters, interval, sourceUri, entityCollection);\n        processPacketData(Number, billboard, 'width', billboardData.width, interval, sourceUri, entityCollection);\n        processPacketData(Number, billboard, 'height', billboardData.height, interval, sourceUri, entityCollection);\n        processPacketData(NearFarScalar, billboard, 'scaleByDistance', billboardData.scaleByDistance, interval, sourceUri, entityCollection);\n        processPacketData(NearFarScalar, billboard, 'translucencyByDistance', billboardData.translucencyByDistance, interval, sourceUri, entityCollection);\n        processPacketData(NearFarScalar, billboard, 'pixelOffsetScaleByDistance', billboardData.pixelOffsetScaleByDistance, interval, sourceUri, entityCollection);\n        processPacketData(BoundingRectangle, billboard, 'imageSubRegion', billboardData.imageSubRegion, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, billboard, 'distanceDisplayCondition', billboardData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n        processPacketData(Number, billboard, 'disableDepthTestDistance', billboardData.disableDepthTestDistance, interval, sourceUri, entityCollection);\n    }\n\n    function processBox(entity, packet, entityCollection, sourceUri) {\n        var boxData = packet.box;\n        if (!defined(boxData)) {\n            return;\n        }\n\n        var interval = intervalFromString(boxData.interval);\n        var box = entity.box;\n        if (!defined(box)) {\n            entity.box = box = new BoxGraphics();\n        }\n\n        processPacketData(Boolean, box, 'show', boxData.show, interval, sourceUri, entityCollection);\n        processPacketData(Cartesian3, box, 'dimensions', boxData.dimensions, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, box, 'heightReference', boxData.heightReference, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, box, 'fill', boxData.fill, interval, sourceUri, entityCollection);\n        processMaterialPacketData(box, 'material', boxData.material, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, box, 'outline', boxData.outline, interval, sourceUri, entityCollection);\n        processPacketData(Color, box, 'outlineColor', boxData.outlineColor, interval, sourceUri, entityCollection);\n        processPacketData(Number, box, 'outlineWidth', boxData.outlineWidth, interval, sourceUri, entityCollection);\n        processPacketData(ShadowMode, box, 'shadows', boxData.shadows, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, box, 'distanceDisplayCondition', boxData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n    }\n\n    function processCorridor(entity, packet, entityCollection, sourceUri) {\n        var corridorData = packet.corridor;\n        if (!defined(corridorData)) {\n            return;\n        }\n\n        var interval = intervalFromString(corridorData.interval);\n        var corridor = entity.corridor;\n        if (!defined(corridor)) {\n            entity.corridor = corridor = new CorridorGraphics();\n        }\n\n        processPacketData(Boolean, corridor, 'show', corridorData.show, interval, sourceUri, entityCollection);\n        processPositionArray(corridor, 'positions', corridorData.positions, entityCollection);\n        processPacketData(Number, corridor, 'width', corridorData.width, interval, sourceUri, entityCollection);\n        processPacketData(Number, corridor, 'height', corridorData.height, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, corridor, 'heightReference', corridorData.heightReference, interval, sourceUri, entityCollection);\n        processPacketData(Number, corridor, 'extrudedHeight', corridorData.extrudedHeight, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, corridor, 'extrudedHeightReference', corridorData.extrudedHeightReference, interval, sourceUri, entityCollection);\n        processPacketData(CornerType, corridor, 'cornerType', corridorData.cornerType, interval, sourceUri, entityCollection);\n        processPacketData(Number, corridor, 'granularity', corridorData.granularity, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, corridor, 'fill', corridorData.fill, interval, sourceUri, entityCollection);\n        processMaterialPacketData(corridor, 'material', corridorData.material, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, corridor, 'outline', corridorData.outline, interval, sourceUri, entityCollection);\n        processPacketData(Color, corridor, 'outlineColor', corridorData.outlineColor, interval, sourceUri, entityCollection);\n        processPacketData(Number, corridor, 'outlineWidth', corridorData.outlineWidth, interval, sourceUri, entityCollection);\n        processPacketData(ShadowMode, corridor, 'shadows', corridorData.shadows, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, corridor, 'distanceDisplayCondition', corridorData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n        processPacketData(ClassificationType, corridor, 'classificationType', corridorData.classificationType, interval, sourceUri, entityCollection);\n        processPacketData(Number, corridor, 'zIndex', corridorData.zIndex, interval, sourceUri, entityCollection);\n    }\n\n    function processCylinder(entity, packet, entityCollection, sourceUri) {\n        var cylinderData = packet.cylinder;\n        if (!defined(cylinderData)) {\n            return;\n        }\n\n        var interval = intervalFromString(cylinderData.interval);\n        var cylinder = entity.cylinder;\n        if (!defined(cylinder)) {\n            entity.cylinder = cylinder = new CylinderGraphics();\n        }\n\n        processPacketData(Boolean, cylinder, 'show', cylinderData.show, interval, sourceUri, entityCollection);\n        processPacketData(Number, cylinder, 'length', cylinderData.length, interval, sourceUri, entityCollection);\n        processPacketData(Number, cylinder, 'topRadius', cylinderData.topRadius, interval, sourceUri, entityCollection);\n        processPacketData(Number, cylinder, 'bottomRadius', cylinderData.bottomRadius, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, cylinder, 'heightReference', cylinderData.heightReference, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, cylinder, 'fill', cylinderData.fill, interval, sourceUri, entityCollection);\n        processMaterialPacketData(cylinder, 'material', cylinderData.material, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, cylinder, 'outline', cylinderData.outline, interval, sourceUri, entityCollection);\n        processPacketData(Color, cylinder, 'outlineColor', cylinderData.outlineColor, interval, sourceUri, entityCollection);\n        processPacketData(Number, cylinder, 'outlineWidth', cylinderData.outlineWidth, interval, sourceUri, entityCollection);\n        processPacketData(Number, cylinder, 'numberOfVerticalLines', cylinderData.numberOfVerticalLines, interval, sourceUri, entityCollection);\n        processPacketData(Number, cylinder, 'slices', cylinderData.slices, interval, sourceUri, entityCollection);\n        processPacketData(ShadowMode, cylinder, 'shadows', cylinderData.shadows, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, cylinder, 'distanceDisplayCondition', cylinderData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n    }\n\n    function processDocument(packet, dataSource) {\n        var version = packet.version;\n        if (defined(version)) {\n            if (typeof version === 'string') {\n                var tokens = version.split('.');\n                if (tokens.length === 2) {\n                    if (tokens[0] !== '1') {\n                        throw new RuntimeError('Cesium only supports CZML version 1.');\n                    }\n                    dataSource._version = version;\n                }\n            }\n        }\n\n        if (!defined(dataSource._version)) {\n            throw new RuntimeError('CZML version information invalid.  It is expected to be a property on the document object in the <Major>.<Minor> version format.');\n        }\n\n        var documentPacket = dataSource._documentPacket;\n\n        if (defined(packet.name)) {\n            documentPacket.name = packet.name;\n        }\n\n        var clockPacket = packet.clock;\n        if (defined(clockPacket)) {\n            var clock = documentPacket.clock;\n            if (!defined(clock)) {\n                documentPacket.clock = {\n                    interval : clockPacket.interval,\n                    currentTime : clockPacket.currentTime,\n                    range : clockPacket.range,\n                    step : clockPacket.step,\n                    multiplier : clockPacket.multiplier\n                };\n            } else {\n                clock.interval = defaultValue(clockPacket.interval, clock.interval);\n                clock.currentTime = defaultValue(clockPacket.currentTime, clock.currentTime);\n                clock.range = defaultValue(clockPacket.range, clock.range);\n                clock.step = defaultValue(clockPacket.step, clock.step);\n                clock.multiplier = defaultValue(clockPacket.multiplier, clock.multiplier);\n            }\n        }\n    }\n\n    function processEllipse(entity, packet, entityCollection, sourceUri) {\n        var ellipseData = packet.ellipse;\n        if (!defined(ellipseData)) {\n            return;\n        }\n\n        var interval = intervalFromString(ellipseData.interval);\n        var ellipse = entity.ellipse;\n        if (!defined(ellipse)) {\n            entity.ellipse = ellipse = new EllipseGraphics();\n        }\n\n        processPacketData(Boolean, ellipse, 'show', ellipseData.show, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipse, 'semiMajorAxis', ellipseData.semiMajorAxis, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipse, 'semiMinorAxis', ellipseData.semiMinorAxis, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipse, 'height', ellipseData.height, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, ellipse, 'heightReference', ellipseData.heightReference, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipse, 'extrudedHeight', ellipseData.extrudedHeight, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, ellipse, 'extrudedHeightReference', ellipseData.extrudedHeightReference, interval, sourceUri, entityCollection);\n        processPacketData(Rotation, ellipse, 'rotation', ellipseData.rotation, interval, sourceUri, entityCollection);\n        processPacketData(Rotation, ellipse, 'stRotation', ellipseData.stRotation, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipse, 'granularity', ellipseData.granularity, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, ellipse, 'fill', ellipseData.fill, interval, sourceUri, entityCollection);\n        processMaterialPacketData(ellipse, 'material', ellipseData.material, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, ellipse, 'outline', ellipseData.outline, interval, sourceUri, entityCollection);\n        processPacketData(Color, ellipse, 'outlineColor', ellipseData.outlineColor, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipse, 'outlineWidth', ellipseData.outlineWidth, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipse, 'numberOfVerticalLines', ellipseData.numberOfVerticalLines, interval, sourceUri, entityCollection);\n        processPacketData(ShadowMode, ellipse, 'shadows', ellipseData.shadows, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, ellipse, 'distanceDisplayCondition', ellipseData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n        processPacketData(ClassificationType, ellipse, 'classificationType', ellipseData.classificationType, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipse, 'zIndex', ellipseData.zIndex, interval, sourceUri, entityCollection);\n    }\n\n    function processEllipsoid(entity, packet, entityCollection, sourceUri) {\n        var ellipsoidData = packet.ellipsoid;\n        if (!defined(ellipsoidData)) {\n            return;\n        }\n\n        var interval = intervalFromString(ellipsoidData.interval);\n        var ellipsoid = entity.ellipsoid;\n        if (!defined(ellipsoid)) {\n            entity.ellipsoid = ellipsoid = new EllipsoidGraphics();\n        }\n\n        processPacketData(Boolean, ellipsoid, 'show', ellipsoidData.show, interval, sourceUri, entityCollection);\n        processPacketData(Cartesian3, ellipsoid, 'radii', ellipsoidData.radii, interval, sourceUri, entityCollection);\n        processPacketData(Cartesian3, ellipsoid, 'innerRadii', ellipsoidData.innerRadii, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipsoid, 'minimumClock', ellipsoidData.minimumClock, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipsoid, 'maximumClock', ellipsoidData.maximumClock, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipsoid, 'minimumCone', ellipsoidData.minimumCone, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipsoid, 'maximumCone', ellipsoidData.maximumCone, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, ellipsoid, 'heightReference', ellipsoidData.heightReference, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, ellipsoid, 'fill', ellipsoidData.fill, interval, sourceUri, entityCollection);\n        processMaterialPacketData(ellipsoid, 'material', ellipsoidData.material, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, ellipsoid, 'outline', ellipsoidData.outline, interval, sourceUri, entityCollection);\n        processPacketData(Color, ellipsoid, 'outlineColor', ellipsoidData.outlineColor, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipsoid, 'outlineWidth', ellipsoidData.outlineWidth, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipsoid, 'stackPartitions', ellipsoidData.stackPartitions, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipsoid, 'slicePartitions', ellipsoidData.slicePartitions, interval, sourceUri, entityCollection);\n        processPacketData(Number, ellipsoid, 'subdivisions', ellipsoidData.subdivisions, interval, sourceUri, entityCollection);\n        processPacketData(ShadowMode, ellipsoid, 'shadows', ellipsoidData.shadows, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, ellipsoid, 'distanceDisplayCondition', ellipsoidData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n    }\n\n    function processLabel(entity, packet, entityCollection, sourceUri) {\n        var labelData = packet.label;\n        if (!defined(labelData)) {\n            return;\n        }\n\n        var interval = intervalFromString(labelData.interval);\n        var label = entity.label;\n        if (!defined(label)) {\n            entity.label = label = new LabelGraphics();\n        }\n\n        processPacketData(Boolean, label, 'show', labelData.show, interval, sourceUri, entityCollection);\n        processPacketData(String, label, 'text', labelData.text, interval, sourceUri, entityCollection);\n        processPacketData(String, label, 'font', labelData.font, interval, sourceUri, entityCollection);\n        processPacketData(LabelStyle, label, 'style', labelData.style, interval, sourceUri, entityCollection);\n        processPacketData(Number, label, 'scale', labelData.scale, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, label, 'showBackground', labelData.showBackground, interval, sourceUri, entityCollection);\n        processPacketData(Color, label, 'backgroundColor', labelData.backgroundColor, interval, sourceUri, entityCollection);\n        processPacketData(Cartesian2, label, 'backgroundPadding', labelData.backgroundPadding, interval, sourceUri, entityCollection);\n        processPacketData(Cartesian2, label, 'pixelOffset', labelData.pixelOffset, interval, sourceUri, entityCollection);\n        processPacketData(Cartesian3, label, 'eyeOffset', labelData.eyeOffset, interval, sourceUri, entityCollection);\n        processPacketData(HorizontalOrigin, label, 'horizontalOrigin', labelData.horizontalOrigin, interval, sourceUri, entityCollection);\n        processPacketData(VerticalOrigin, label, 'verticalOrigin', labelData.verticalOrigin, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, label, 'heightReference', labelData.heightReference, interval, sourceUri, entityCollection);\n        processPacketData(Color, label, 'fillColor', labelData.fillColor, interval, sourceUri, entityCollection);\n        processPacketData(Color, label, 'outlineColor', labelData.outlineColor, interval, sourceUri, entityCollection);\n        processPacketData(Number, label, 'outlineWidth', labelData.outlineWidth, interval, sourceUri, entityCollection);\n        processPacketData(NearFarScalar, label, 'translucencyByDistance', labelData.translucencyByDistance, interval, sourceUri, entityCollection);\n        processPacketData(NearFarScalar, label, 'pixelOffsetScaleByDistance', labelData.pixelOffsetScaleByDistance, interval, sourceUri, entityCollection);\n        processPacketData(NearFarScalar, label, 'scaleByDistance', labelData.scaleByDistance, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, label, 'distanceDisplayCondition', labelData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n        processPacketData(Number, label, 'disableDepthTestDistance', labelData.disableDepthTestDistance, interval, sourceUri, entityCollection);\n    }\n\n    function processModel(entity, packet, entityCollection, sourceUri) {\n        var modelData = packet.model;\n        if (!defined(modelData)) {\n            return;\n        }\n\n        var interval = intervalFromString(modelData.interval);\n        var model = entity.model;\n        if (!defined(model)) {\n            entity.model = model = new ModelGraphics();\n        }\n\n        processPacketData(Boolean, model, 'show', modelData.show, interval, sourceUri, entityCollection);\n        processPacketData(Uri, model, 'uri', modelData.gltf, interval, sourceUri, entityCollection);\n        processPacketData(Number, model, 'scale', modelData.scale, interval, sourceUri, entityCollection);\n        processPacketData(Number, model, 'minimumPixelSize', modelData.minimumPixelSize, interval, sourceUri, entityCollection);\n        processPacketData(Number, model, 'maximumScale', modelData.maximumScale, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, model, 'incrementallyLoadTextures', modelData.incrementallyLoadTextures, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, model, 'runAnimations', modelData.runAnimations, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, model, 'clampAnimations', modelData.clampAnimations, interval, sourceUri, entityCollection);\n        processPacketData(ShadowMode, model, 'shadows', modelData.shadows, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, model, 'heightReference', modelData.heightReference, interval, sourceUri, entityCollection);\n        processPacketData(Color, model, 'silhouetteColor', modelData.silhouetteColor, interval, sourceUri, entityCollection);\n        processPacketData(Number, model, 'silhouetteSize', modelData.silhouetteSize, interval, sourceUri, entityCollection);\n        processPacketData(Color, model, 'color', modelData.color, interval, sourceUri, entityCollection);\n        processPacketData(ColorBlendMode, model, 'colorBlendMode', modelData.colorBlendMode, interval, sourceUri, entityCollection);\n        processPacketData(Number, model, 'colorBlendAmount', modelData.colorBlendAmount, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, model, 'distanceDisplayCondition', modelData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n\n        var i, len;\n        var nodeTransformationsData = modelData.nodeTransformations;\n        if (defined(nodeTransformationsData)) {\n            if (isArray(nodeTransformationsData)) {\n                for (i = 0, len = nodeTransformationsData.length; i < len; ++i) {\n                    processNodeTransformations(model, nodeTransformationsData[i], interval, sourceUri, entityCollection);\n                }\n            } else {\n                processNodeTransformations(model, nodeTransformationsData, interval, sourceUri, entityCollection);\n            }\n        }\n\n        var articulationsData = modelData.articulations;\n        if (defined(articulationsData)) {\n            if (isArray(articulationsData)) {\n                for (i = 0, len = articulationsData.length; i < len; ++i) {\n                    processArticulations(model, articulationsData[i], interval, sourceUri, entityCollection);\n                }\n            } else {\n                processArticulations(model, articulationsData, interval, sourceUri, entityCollection);\n            }\n        }\n    }\n\n    function processNodeTransformations(model, nodeTransformationsData, constrainedInterval, sourceUri, entityCollection) {\n        var combinedInterval = intervalFromString(nodeTransformationsData.interval);\n        if (defined(constrainedInterval)) {\n            if (defined(combinedInterval)) {\n                combinedInterval = TimeInterval.intersect(combinedInterval, constrainedInterval, scratchTimeInterval);\n            } else {\n                combinedInterval = constrainedInterval;\n            }\n        }\n\n        var nodeTransformations = model.nodeTransformations;\n        var nodeNames = Object.keys(nodeTransformationsData);\n        for (var i = 0, len = nodeNames.length; i < len; ++i) {\n            var nodeName = nodeNames[i];\n            if (nodeName === 'interval') {\n                continue;\n            }\n\n            var nodeTransformationData = nodeTransformationsData[nodeName];\n            if (!defined(nodeTransformationData)) {\n                continue;\n            }\n\n            if (!defined(nodeTransformations)) {\n                model.nodeTransformations = nodeTransformations = new PropertyBag();\n            }\n\n            if (!nodeTransformations.hasProperty(nodeName)) {\n                nodeTransformations.addProperty(nodeName);\n            }\n\n            var nodeTransformation = nodeTransformations[nodeName];\n            if (!defined(nodeTransformation)) {\n                nodeTransformations[nodeName] = nodeTransformation = new NodeTransformationProperty();\n            }\n\n            processPacketData(Cartesian3, nodeTransformation, 'translation', nodeTransformationData.translation, combinedInterval, sourceUri, entityCollection);\n            processPacketData(Quaternion, nodeTransformation, 'rotation', nodeTransformationData.rotation, combinedInterval, sourceUri, entityCollection);\n            processPacketData(Cartesian3, nodeTransformation, 'scale', nodeTransformationData.scale, combinedInterval, sourceUri, entityCollection);\n        }\n    }\n\n    function processArticulations(model, articulationsData, constrainedInterval, sourceUri, entityCollection) {\n        var combinedInterval = intervalFromString(articulationsData.interval);\n        if (defined(constrainedInterval)) {\n            if (defined(combinedInterval)) {\n                combinedInterval = TimeInterval.intersect(combinedInterval, constrainedInterval, scratchTimeInterval);\n            } else {\n                combinedInterval = constrainedInterval;\n            }\n        }\n\n        var articulations = model.articulations;\n        var keys = Object.keys(articulationsData);\n        for (var i = 0, len = keys.length; i < len; ++i) {\n            var key = keys[i];\n            if (key === 'interval') {\n                continue;\n            }\n\n            var articulationStageData = articulationsData[key];\n            if (!defined(articulationStageData)) {\n                continue;\n            }\n\n            if (!defined(articulations)) {\n                model.articulations = articulations = new PropertyBag();\n            }\n\n            if (!articulations.hasProperty(key)) {\n                articulations.addProperty(key);\n            }\n\n            processPacketData(Number, articulations, key, articulationStageData, combinedInterval, sourceUri, entityCollection);\n        }\n    }\n\n    function processPath(entity, packet, entityCollection, sourceUri) {\n        var pathData = packet.path;\n        if (!defined(pathData)) {\n            return;\n        }\n\n        var interval = intervalFromString(pathData.interval);\n        var path = entity.path;\n        if (!defined(path)) {\n            entity.path = path = new PathGraphics();\n        }\n\n        processPacketData(Boolean, path, 'show', pathData.show, interval, sourceUri, entityCollection);\n        processPacketData(Number, path, 'leadTime', pathData.leadTime, interval, sourceUri, entityCollection);\n        processPacketData(Number, path, 'trailTime', pathData.trailTime, interval, sourceUri, entityCollection);\n        processPacketData(Number, path, 'width', pathData.width, interval, sourceUri, entityCollection);\n        processPacketData(Number, path, 'resolution', pathData.resolution, interval, sourceUri, entityCollection);\n        processMaterialPacketData(path, 'material', pathData.material, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, path, 'distanceDisplayCondition', pathData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n    }\n\n    function processPoint(entity, packet, entityCollection, sourceUri) {\n        var pointData = packet.point;\n        if (!defined(pointData)) {\n            return;\n        }\n\n        var interval = intervalFromString(pointData.interval);\n        var point = entity.point;\n        if (!defined(point)) {\n            entity.point = point = new PointGraphics();\n        }\n\n        processPacketData(Boolean, point, 'show', pointData.show, interval, sourceUri, entityCollection);\n        processPacketData(Number, point, 'pixelSize', pointData.pixelSize, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, point, 'heightReference', pointData.heightReference, interval, sourceUri, entityCollection);\n        processPacketData(Color, point, 'color', pointData.color, interval, sourceUri, entityCollection);\n        processPacketData(Color, point, 'outlineColor', pointData.outlineColor, interval, sourceUri, entityCollection);\n        processPacketData(Number, point, 'outlineWidth', pointData.outlineWidth, interval, sourceUri, entityCollection);\n        processPacketData(NearFarScalar, point, 'scaleByDistance', pointData.scaleByDistance, interval, sourceUri, entityCollection);\n        processPacketData(NearFarScalar, point, 'translucencyByDistance', pointData.translucencyByDistance, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, point, 'distanceDisplayCondition', pointData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n        processPacketData(Number, point, 'disableDepthTestDistance', pointData.disableDepthTestDistance, interval, sourceUri, entityCollection);\n    }\n\n    function PolygonHierarchyProperty(polygon) {\n        this.polygon = polygon;\n        this._definitionChanged = new Event();\n    }\n\n    defineProperties(PolygonHierarchyProperty.prototype, {\n        isConstant : {\n            get : function() {\n                var positions = this.polygon._positions;\n                var holes = this.polygon._holes;\n                return (!defined(positions) || positions.isConstant) &&\n                       (!defined(holes) || holes.isConstant);\n            }\n        },\n        definitionChanged : {\n            get : function() {\n                return this._definitionChanged;\n            }\n        }\n    });\n\n    PolygonHierarchyProperty.prototype.getValue = function(time, result) {\n        var positions;\n        if (defined(this.polygon._positions)) {\n            positions = this.polygon._positions.getValue(time);\n        }\n\n        var holes;\n        if (defined(this.polygon._holes)) {\n            holes = this.polygon._holes.getValue(time);\n            if (defined(holes)) {\n                holes = holes.map(function(holePositions) {\n                    return new PolygonHierarchy(holePositions);\n                });\n            }\n        }\n\n        if (!defined(result)) {\n            return new PolygonHierarchy(positions, holes);\n        }\n\n        result.positions = positions;\n        result.holes = holes;\n        return result;\n    };\n\n    PolygonHierarchyProperty.prototype.equals = function(other) {\n        return this === other ||\n               (other instanceof PolygonHierarchyProperty &&\n                Property.equals(this.polygon._positions, other.polygon._positions) &&\n                Property.equals(this.polygon._holes, other.polygon._holes));\n    };\n\n    function processPolygon(entity, packet, entityCollection, sourceUri) {\n        var polygonData = packet.polygon;\n        if (!defined(polygonData)) {\n            return;\n        }\n\n        var interval = intervalFromString(polygonData.interval);\n        var polygon = entity.polygon;\n        if (!defined(polygon)) {\n            entity.polygon = polygon = new PolygonGraphics();\n        }\n\n        processPacketData(Boolean, polygon, 'show', polygonData.show, interval, sourceUri, entityCollection);\n\n        // adapt 'position' property producing Cartesian[]\n        // and 'holes' property producing Cartesian[][]\n        // to a single property producing PolygonHierarchy\n        processPositionArray(polygon, '_positions', polygonData.positions, entityCollection);\n        processPositionArrayOfArrays(polygon, '_holes', polygonData.holes, entityCollection);\n        if (defined(polygon._positions) || defined(polygon._holes)) {\n            polygon.hierarchy = new PolygonHierarchyProperty(polygon);\n        }\n\n        processPacketData(Number, polygon, 'height', polygonData.height, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, polygon, 'heightReference', polygonData.heightReference, interval, sourceUri, entityCollection);\n        processPacketData(Number, polygon, 'extrudedHeight', polygonData.extrudedHeight, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, polygon, 'extrudedHeightReference', polygonData.extrudedHeightReference, interval, sourceUri, entityCollection);\n        processPacketData(Rotation, polygon, 'stRotation', polygonData.stRotation, interval, sourceUri, entityCollection);\n        processPacketData(Number, polygon, 'granularity', polygonData.granularity, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, polygon, 'fill', polygonData.fill, interval, sourceUri, entityCollection);\n        processMaterialPacketData(polygon, 'material', polygonData.material, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, polygon, 'outline', polygonData.outline, interval, sourceUri, entityCollection);\n        processPacketData(Color, polygon, 'outlineColor', polygonData.outlineColor, interval, sourceUri, entityCollection);\n        processPacketData(Number, polygon, 'outlineWidth', polygonData.outlineWidth, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, polygon, 'perPositionHeight', polygonData.perPositionHeight, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, polygon, 'closeTop', polygonData.closeTop, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, polygon, 'closeBottom', polygonData.closeBottom, interval, sourceUri, entityCollection);\n        processPacketData(ArcType, polygon, 'arcType', polygonData.arcType, interval, sourceUri, entityCollection);\n        processPacketData(ShadowMode, polygon, 'shadows', polygonData.shadows, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, polygon, 'distanceDisplayCondition', polygonData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n        processPacketData(ClassificationType, polygon, 'classificationType', polygonData.classificationType, interval, sourceUri, entityCollection);\n        processPacketData(Number, polygon, 'zIndex', polygonData.zIndex, interval, sourceUri, entityCollection);\n    }\n\n    function adaptFollowSurfaceToArcType(followSurface) {\n        return followSurface ? ArcType.GEODESIC : ArcType.NONE;\n    }\n\n    function processPolyline(entity, packet, entityCollection, sourceUri) {\n        var polylineData = packet.polyline;\n        if (!defined(polylineData)) {\n            return;\n        }\n\n        var interval = intervalFromString(polylineData.interval);\n        var polyline = entity.polyline;\n        if (!defined(polyline)) {\n            entity.polyline = polyline = new PolylineGraphics();\n        }\n\n        processPacketData(Boolean, polyline, 'show', polylineData.show, interval, sourceUri, entityCollection);\n        processPositionArray(polyline, 'positions', polylineData.positions, entityCollection);\n        processPacketData(Number, polyline, 'width', polylineData.width, interval, sourceUri, entityCollection);\n        processPacketData(Number, polyline, 'granularity', polylineData.granularity, interval, sourceUri, entityCollection);\n        processMaterialPacketData(polyline, 'material', polylineData.material, interval, sourceUri, entityCollection);\n        processMaterialPacketData(polyline, 'depthFailMaterial', polylineData.depthFailMaterial, interval, sourceUri, entityCollection);\n        processPacketData(ArcType, polyline, 'arcType', polylineData.arcType, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, polyline, 'clampToGround', polylineData.clampToGround, interval, sourceUri, entityCollection);\n        processPacketData(ShadowMode, polyline, 'shadows', polylineData.shadows, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, polyline, 'distanceDisplayCondition', polylineData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n        processPacketData(ClassificationType, polyline, 'classificationType', polylineData.classificationType, interval, sourceUri, entityCollection);\n        processPacketData(Number, polyline, 'zIndex', polylineData.zIndex, interval, sourceUri, entityCollection);\n\n        // for backwards compatibility, adapt CZML followSurface to arcType.\n        if (defined(polylineData.followSurface) && !defined(polylineData.arcType)) {\n            var tempObj = {};\n            processPacketData(Boolean, tempObj, 'followSurface', polylineData.followSurface, interval, sourceUri, entityCollection);\n            polyline.arcType = createAdapterProperty(tempObj.followSurface, adaptFollowSurfaceToArcType);\n        }\n    }\n\n    function processRectangle(entity, packet, entityCollection, sourceUri) {\n        var rectangleData = packet.rectangle;\n        if (!defined(rectangleData)) {\n            return;\n        }\n\n        var interval = intervalFromString(rectangleData.interval);\n        var rectangle = entity.rectangle;\n        if (!defined(rectangle)) {\n            entity.rectangle = rectangle = new RectangleGraphics();\n        }\n\n        processPacketData(Boolean, rectangle, 'show', rectangleData.show, interval, sourceUri, entityCollection);\n        processPacketData(Rectangle, rectangle, 'coordinates', rectangleData.coordinates, interval, sourceUri, entityCollection);\n        processPacketData(Number, rectangle, 'height', rectangleData.height, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, rectangle, 'heightReference', rectangleData.heightReference, interval, sourceUri, entityCollection);\n        processPacketData(Number, rectangle, 'extrudedHeight', rectangleData.extrudedHeight, interval, sourceUri, entityCollection);\n        processPacketData(HeightReference, rectangle, 'extrudedHeightReference', rectangleData.extrudedHeightReference, interval, sourceUri, entityCollection);\n        processPacketData(Rotation, rectangle, 'rotation', rectangleData.rotation, interval, sourceUri, entityCollection);\n        processPacketData(Rotation, rectangle, 'stRotation', rectangleData.stRotation, interval, sourceUri, entityCollection);\n        processPacketData(Number, rectangle, 'granularity', rectangleData.granularity, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, rectangle, 'fill', rectangleData.fill, interval, sourceUri, entityCollection);\n        processMaterialPacketData(rectangle, 'material', rectangleData.material, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, rectangle, 'outline', rectangleData.outline, interval, sourceUri, entityCollection);\n        processPacketData(Color, rectangle, 'outlineColor', rectangleData.outlineColor, interval, sourceUri, entityCollection);\n        processPacketData(Number, rectangle, 'outlineWidth', rectangleData.outlineWidth, interval, sourceUri, entityCollection);\n        processPacketData(ShadowMode, rectangle, 'shadows', rectangleData.shadows, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, rectangle, 'distanceDisplayCondition', rectangleData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n        processPacketData(ClassificationType, rectangle, 'classificationType', rectangleData.classificationType, interval, sourceUri, entityCollection);\n        processPacketData(Number, rectangle, 'zIndex', rectangleData.zIndex, interval, sourceUri, entityCollection);\n    }\n\n    function processWall(entity, packet, entityCollection, sourceUri) {\n        var wallData = packet.wall;\n        if (!defined(wallData)) {\n            return;\n        }\n\n        var interval = intervalFromString(wallData.interval);\n        var wall = entity.wall;\n        if (!defined(wall)) {\n            entity.wall = wall = new WallGraphics();\n        }\n\n        processPacketData(Boolean, wall, 'show', wallData.show, interval, sourceUri, entityCollection);\n        processPositionArray(wall, 'positions', wallData.positions, entityCollection);\n        processArray(wall, 'minimumHeights', wallData.minimumHeights, entityCollection);\n        processArray(wall, 'maximumHeights', wallData.maximumHeights, entityCollection);\n        processPacketData(Number, wall, 'granularity', wallData.granularity, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, wall, 'fill', wallData.fill, interval, sourceUri, entityCollection);\n        processMaterialPacketData(wall, 'material', wallData.material, interval, sourceUri, entityCollection);\n        processPacketData(Boolean, wall, 'outline', wallData.outline, interval, sourceUri, entityCollection);\n        processPacketData(Color, wall, 'outlineColor', wallData.outlineColor, interval, sourceUri, entityCollection);\n        processPacketData(Number, wall, 'outlineWidth', wallData.outlineWidth, interval, sourceUri, entityCollection);\n        processPacketData(ShadowMode, wall, 'shadows', wallData.shadows, interval, sourceUri, entityCollection);\n        processPacketData(DistanceDisplayCondition, wall, 'distanceDisplayCondition', wallData.distanceDisplayCondition, interval, sourceUri, entityCollection);\n    }\n\n    function processCzmlPacket(packet, entityCollection, updaterFunctions, sourceUri, dataSource) {\n        var objectId = packet.id;\n        if (!defined(objectId)) {\n            objectId = createGuid();\n        }\n\n        currentId = objectId;\n\n        if (!defined(dataSource._version) && objectId !== 'document') {\n            throw new RuntimeError('The first CZML packet is required to be the document object.');\n        }\n\n        if (packet['delete'] === true) {\n            entityCollection.removeById(objectId);\n        } else if (objectId === 'document') {\n            processDocument(packet, dataSource);\n        } else {\n            var entity = entityCollection.getOrCreateEntity(objectId);\n\n            var parentId = packet.parent;\n            if (defined(parentId)) {\n                entity.parent = entityCollection.getOrCreateEntity(parentId);\n            }\n\n            for (var i = updaterFunctions.length - 1; i > -1; i--) {\n                updaterFunctions[i](entity, packet, entityCollection, sourceUri);\n            }\n        }\n\n        currentId = undefined;\n    }\n\n    function updateClock(dataSource) {\n        var clock;\n        var clockPacket = dataSource._documentPacket.clock;\n        if (!defined(clockPacket)) {\n            if (!defined(dataSource._clock)) {\n                var availability = dataSource._entityCollection.computeAvailability();\n                if (!availability.start.equals(Iso8601.MINIMUM_VALUE)) {\n                    var startTime = availability.start;\n                    var stopTime = availability.stop;\n                    var totalSeconds = JulianDate.secondsDifference(stopTime, startTime);\n                    var multiplier = Math.round(totalSeconds / 120.0);\n\n                    clock = new DataSourceClock();\n                    clock.startTime = JulianDate.clone(startTime);\n                    clock.stopTime = JulianDate.clone(stopTime);\n                    clock.clockRange = ClockRange.LOOP_STOP;\n                    clock.multiplier = multiplier;\n                    clock.currentTime = JulianDate.clone(startTime);\n                    clock.clockStep = ClockStep.SYSTEM_CLOCK_MULTIPLIER;\n                    dataSource._clock = clock;\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        if (defined(dataSource._clock)) {\n            clock = dataSource._clock.clone();\n        } else {\n            clock = new DataSourceClock();\n            clock.startTime = Iso8601.MINIMUM_VALUE.clone();\n            clock.stopTime = Iso8601.MAXIMUM_VALUE.clone();\n            clock.currentTime = Iso8601.MINIMUM_VALUE.clone();\n            clock.clockRange = ClockRange.LOOP_STOP;\n            clock.clockStep = ClockStep.SYSTEM_CLOCK_MULTIPLIER;\n            clock.multiplier = 1.0;\n        }\n\n        var interval = intervalFromString(clockPacket.interval);\n        if (defined(interval)) {\n            clock.startTime = interval.start;\n            clock.stopTime = interval.stop;\n        }\n\n        if (defined(clockPacket.currentTime)) {\n            clock.currentTime = JulianDate.fromIso8601(clockPacket.currentTime);\n        }\n        if (defined(clockPacket.range)) {\n            clock.clockRange = defaultValue(ClockRange[clockPacket.range], ClockRange.LOOP_STOP);\n        }\n        if (defined(clockPacket.step)) {\n            clock.clockStep = defaultValue(ClockStep[clockPacket.step], ClockStep.SYSTEM_CLOCK_MULTIPLIER);\n        }\n        if (defined(clockPacket.multiplier)) {\n            clock.multiplier = clockPacket.multiplier;\n        }\n\n        if (!clock.equals(dataSource._clock)) {\n            dataSource._clock = clock.clone(dataSource._clock);\n            return true;\n        }\n\n        return false;\n    }\n\n    function load(dataSource, czml, options, clear) {\n        \n\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n        var promise = czml;\n        var sourceUri = options.sourceUri;\n\n        // User specified credit\n        var credit = options.credit;\n        if (typeof credit === 'string') {\n            credit = new Credit(credit);\n        }\n        dataSource._credit = credit;\n\n        // If the czml is a URL\n        if (typeof czml === 'string' || (czml instanceof Resource)) {\n            czml = Resource.createIfNeeded(czml);\n            promise = czml.fetchJson();\n            sourceUri = defaultValue(sourceUri, czml.clone());\n\n            // Add resource credits to our list of credits to display\n            var resourceCredits = dataSource._resourceCredits;\n            var credits = czml.credits;\n            if (defined(credits)) {\n                var length = credits.length;\n                for (var i = 0; i < length; i++) {\n                    resourceCredits.push(credits[i]);\n                }\n            }\n        }\n\n        sourceUri = Resource.createIfNeeded(sourceUri);\n\n        DataSource.setLoading(dataSource, true);\n\n        return when(promise, function(czml) {\n            return loadCzml(dataSource, czml, sourceUri, clear);\n        }).otherwise(function(error) {\n            DataSource.setLoading(dataSource, false);\n            dataSource._error.raiseEvent(dataSource, error);\n            console.log(error);\n            return when.reject(error);\n        });\n    }\n\n    function loadCzml(dataSource, czml, sourceUri, clear) {\n        DataSource.setLoading(dataSource, true);\n        var entityCollection = dataSource._entityCollection;\n\n        if (clear) {\n            dataSource._version = undefined;\n            dataSource._documentPacket = new DocumentPacket();\n            entityCollection.removeAll();\n        }\n\n        CzmlDataSource._processCzml(czml, entityCollection, sourceUri, undefined, dataSource);\n\n        var raiseChangedEvent = updateClock(dataSource);\n\n        var documentPacket = dataSource._documentPacket;\n        if (defined(documentPacket.name) && dataSource._name !== documentPacket.name) {\n            dataSource._name = documentPacket.name;\n            raiseChangedEvent = true;\n        } else if (!defined(dataSource._name) && defined(sourceUri)) {\n            dataSource._name = getFilenameFromUri(sourceUri.getUrlComponent());\n            raiseChangedEvent = true;\n        }\n\n        DataSource.setLoading(dataSource, false);\n        if (raiseChangedEvent) {\n            dataSource._changed.raiseEvent(dataSource);\n        }\n\n        return dataSource;\n    }\n\n    function DocumentPacket() {\n        this.name = undefined;\n        this.clock = undefined;\n    }\n\n    /**\n     * A {@link DataSource} which processes {@link https://github.com/AnalyticalGraphicsInc/czml-writer/wiki/CZML-Guide|CZML}.\n     * @alias CzmlDataSource\n     * @constructor\n     *\n     * @param {String} [name] An optional name for the data source.  This value will be overwritten if a loaded document contains a name.\n     *\n     * @demo {@link https://sandcastle.cesium.com/index.html?src=CZML.html|Cesium Sandcastle CZML Demo}\n     */\n    function CzmlDataSource(name) {\n        this._name = name;\n        this._changed = new Event();\n        this._error = new Event();\n        this._isLoading = false;\n        this._loading = new Event();\n        this._clock = undefined;\n        this._documentPacket = new DocumentPacket();\n        this._version = undefined;\n        this._entityCollection = new EntityCollection(this);\n        this._entityCluster = new EntityCluster();\n        this._credit = undefined;\n        this._resourceCredits = [];\n    }\n\n    /**\n     * Creates a Promise to a new instance loaded with the provided CZML data.\n     *\n     * @param {Resource|String|Object} czml A url or CZML object to be processed.\n     * @param {Object} [options] An object with the following properties:\n     * @param {Resource|String} [options.sourceUri] Overrides the url to use for resolving relative links.\n     * @param {Credit|String} [options.credit] A credit for the data source, which is displayed on the canvas.\n     * @returns {Promise.<CzmlDataSource>} A promise that resolves to the new instance once the data is processed.\n     */\n    CzmlDataSource.load = function(czml, options) {\n        return new CzmlDataSource().load(czml, options);\n    };\n\n    defineProperties(CzmlDataSource.prototype, {\n        /**\n         * Gets a human-readable name for this instance.\n         * @memberof CzmlDataSource.prototype\n         * @type {String}\n         */\n        name : {\n            get : function() {\n                return this._name;\n            }\n        },\n        /**\n         * Gets the clock settings defined by the loaded CZML.  If no clock is explicitly\n         * defined in the CZML, the combined availability of all objects is returned.  If\n         * only static data exists, this value is undefined.\n         * @memberof CzmlDataSource.prototype\n         * @type {DataSourceClock}\n         */\n        clock : {\n            get : function() {\n                return this._clock;\n            }\n        },\n        /**\n         * Gets the collection of {@link Entity} instances.\n         * @memberof CzmlDataSource.prototype\n         * @type {EntityCollection}\n         */\n        entities : {\n            get : function() {\n                return this._entityCollection;\n            }\n        },\n        /**\n         * Gets a value indicating if the data source is currently loading data.\n         * @memberof CzmlDataSource.prototype\n         * @type {Boolean}\n         */\n        isLoading : {\n            get : function() {\n                return this._isLoading;\n            }\n        },\n        /**\n         * Gets an event that will be raised when the underlying data changes.\n         * @memberof CzmlDataSource.prototype\n         * @type {Event}\n         */\n        changedEvent : {\n            get : function() {\n                return this._changed;\n            }\n        },\n        /**\n         * Gets an event that will be raised if an error is encountered during processing.\n         * @memberof CzmlDataSource.prototype\n         * @type {Event}\n         */\n        errorEvent : {\n            get : function() {\n                return this._error;\n            }\n        },\n        /**\n         * Gets an event that will be raised when the data source either starts or stops loading.\n         * @memberof CzmlDataSource.prototype\n         * @type {Event}\n         */\n        loadingEvent : {\n            get : function() {\n                return this._loading;\n            }\n        },\n        /**\n         * Gets whether or not this data source should be displayed.\n         * @memberof CzmlDataSource.prototype\n         * @type {Boolean}\n         */\n        show : {\n            get : function() {\n                return this._entityCollection.show;\n            },\n            set : function(value) {\n                this._entityCollection.show = value;\n            }\n        },\n\n        /**\n         * Gets or sets the clustering options for this data source. This object can be shared between multiple data sources.\n         *\n         * @memberof CzmlDataSource.prototype\n         * @type {EntityCluster}\n         */\n        clustering : {\n            get : function() {\n                return this._entityCluster;\n            },\n            set : function(value) {\n                \n                this._entityCluster = value;\n            }\n        },\n        /**\n         * Gets the credit that will be displayed for the data source\n         * @memberof CzmlDataSource.prototype\n         * @type {Credit}\n         */\n        credit : {\n            get : function() {\n                return this._credit;\n            }\n        }\n    });\n\n    /**\n     * Gets the array of CZML processing functions.\n     * @memberof CzmlDataSource\n     * @type Array\n     */\n    CzmlDataSource.updaters = [\n        processBillboard, //\n        processBox, //\n        processCorridor, //\n        processCylinder, //\n        processEllipse, //\n        processEllipsoid, //\n        processLabel, //\n        processModel, //\n        processName, //\n        processDescription, //\n        processPath, //\n        processPoint, //\n        processPolygon, //\n        processPolyline, //\n        processProperties, //\n        processRectangle, //\n        processPosition, //\n        processViewFrom, //\n        processWall, //\n        processOrientation, //\n        processAvailability];\n\n    /**\n     * Processes the provided url or CZML object without clearing any existing data.\n     *\n     * @param {Resource|String|Object} czml A url or CZML object to be processed.\n     * @param {Object} [options] An object with the following properties:\n     * @param {String} [options.sourceUri] Overrides the url to use for resolving relative links.\n     * @returns {Promise.<CzmlDataSource>} A promise that resolves to this instances once the data is processed.\n     */\n    CzmlDataSource.prototype.process = function(czml, options) {\n        return load(this, czml, options, false);\n    };\n\n    /**\n     * Loads the provided url or CZML object, replacing any existing data.\n     *\n     * @param {Resource|String|Object} czml A url or CZML object to be processed.\n     * @param {Object} [options] An object with the following properties:\n     * @param {String} [options.sourceUri] Overrides the url to use for resolving relative links.\n     * @param {Credit|String} [options.credit] A credit for the data source, which is displayed on the canvas.\n     * @returns {Promise.<CzmlDataSource>} A promise that resolves to this instances once the data is processed.\n     */\n    CzmlDataSource.prototype.load = function(czml, options) {\n        return load(this, czml, options, true);\n    };\n\n    /**\n     * A helper function used by custom CZML updater functions\n     * which creates or updates a {@link Property} from a CZML packet.\n     * @function\n     *\n     * @param {Function} type The constructor function for the property being processed.\n     * @param {Object} object The object on which the property will be added or updated.\n     * @param {String} propertyName The name of the property on the object.\n     * @param {Object} packetData The CZML packet being processed.\n     * @param {TimeInterval} interval A constraining interval for which the data is valid.\n     * @param {String} sourceUri The originating uri of the data being processed.\n     * @param {EntityCollection} entityCollection The collection being processsed.\n     */\n    CzmlDataSource.processPacketData = processPacketData;\n\n    /**\n     * A helper function used by custom CZML updater functions\n     * which creates or updates a {@link PositionProperty} from a CZML packet.\n     * @function\n     *\n     * @param {Object} object The object on which the property will be added or updated.\n     * @param {String} propertyName The name of the property on the object.\n     * @param {Object} packetData The CZML packet being processed.\n     * @param {TimeInterval} interval A constraining interval for which the data is valid.\n     * @param {String} sourceUri The originating uri of the data being processed.\n     * @param {EntityCollection} entityCollection The collection being processsed.\n     */\n    CzmlDataSource.processPositionPacketData = processPositionPacketData;\n\n    /**\n     * A helper function used by custom CZML updater functions\n     * which creates or updates a {@link MaterialProperty} from a CZML packet.\n     * @function\n     *\n     * @param {Object} object The object on which the property will be added or updated.\n     * @param {String} propertyName The name of the property on the object.\n     * @param {Object} packetData The CZML packet being processed.\n     * @param {TimeInterval} interval A constraining interval for which the data is valid.\n     * @param {String} sourceUri The originating uri of the data being processed.\n     * @param {EntityCollection} entityCollection The collection being processsed.\n     */\n    CzmlDataSource.processMaterialPacketData = processMaterialPacketData;\n\n    CzmlDataSource._processCzml = function(czml, entityCollection, sourceUri, updaterFunctions, dataSource) {\n        updaterFunctions = defaultValue(updaterFunctions, CzmlDataSource.updaters);\n\n        if (isArray(czml)) {\n            for (var i = 0, len = czml.length; i < len; ++i) {\n                processCzmlPacket(czml[i], entityCollection, updaterFunctions, sourceUri, dataSource);\n            }\n        } else {\n            processCzmlPacket(czml, entityCollection, updaterFunctions, sourceUri, dataSource);\n        }\n    };\nexport default CzmlDataSource;\n","var tmp = {};\n\n/*!\n * Autolinker.js\n * 3.11.0\n *\n * Copyright(c) 2019 Gregory Jacobs <greg@greg-jacobs.com>\n * MIT License\n *\n * https-colon-slashslash github.com/gregjacobs/Autolinker.js\n */\n(function (global, factory) {\n    global.Autolinker = factory();\n}(tmp, function () { 'use strict';\n\n    /**\n     * Assigns (shallow copies) the properties of `src` onto `dest`, if the\n     * corresponding property on `dest` === `undefined`.\n     *\n     * @param {Object} dest The destination object.\n     * @param {Object} src The source object.\n     * @return {Object} The destination object (`dest`)\n     */\n    function defaults(dest, src) {\n        for (var prop in src) {\n            if (src.hasOwnProperty(prop) && dest[prop] === undefined) {\n                dest[prop] = src[prop];\n            }\n        }\n        return dest;\n    }\n    /**\n     * Truncates the `str` at `len - ellipsisChars.length`, and adds the `ellipsisChars` to the\n     * end of the string (by default, two periods: '..'). If the `str` length does not exceed\n     * `len`, the string will be returned unchanged.\n     *\n     * @param {String} str The string to truncate and add an ellipsis to.\n     * @param {Number} truncateLen The length to truncate the string at.\n     * @param {String} [ellipsisChars=...] The ellipsis character(s) to add to the end of `str`\n     *   when truncated. Defaults to '...'\n     */\n    function ellipsis(str, truncateLen, ellipsisChars) {\n        var ellipsisLength;\n        if (str.length > truncateLen) {\n            if (ellipsisChars == null) {\n                ellipsisChars = '&hellip;';\n                ellipsisLength = 3;\n            }\n            else {\n                ellipsisLength = ellipsisChars.length;\n            }\n            str = str.substring(0, truncateLen - ellipsisLength) + ellipsisChars;\n        }\n        return str;\n    }\n    /**\n     * Supports `Array.prototype.indexOf()` functionality for old IE (IE8 and below).\n     *\n     * @param {Array} arr The array to find an element of.\n     * @param {*} element The element to find in the array, and return the index of.\n     * @return {Number} The index of the `element`, or -1 if it was not found.\n     */\n    function indexOf(arr, element) {\n        if (Array.prototype.indexOf) {\n            return arr.indexOf(element);\n        }\n        else {\n            for (var i = 0, len = arr.length; i < len; i++) {\n                if (arr[i] === element)\n                    return i;\n            }\n            return -1;\n        }\n    }\n    /**\n     * Removes array elements based on a filtering function. Mutates the input\n     * array.\n     *\n     * Using this instead of the ES5 Array.prototype.filter() function, to allow\n     * Autolinker compatibility with IE8, and also to prevent creating many new\n     * arrays in memory for filtering.\n     *\n     * @param {Array} arr The array to remove elements from. This array is\n     *   mutated.\n     * @param {Function} fn A function which should return `true` to\n     *   remove an element.\n     * @return {Array} The mutated input `arr`.\n     */\n    function remove(arr, fn) {\n        for (var i = arr.length - 1; i >= 0; i--) {\n            if (fn(arr[i]) === true) {\n                arr.splice(i, 1);\n            }\n        }\n    }\n    /**\n     * Performs the functionality of what modern browsers do when `String.prototype.split()` is called\n     * with a regular expression that contains capturing parenthesis.\n     *\n     * For example:\n     *\n     *     // Modern browsers:\n     *     \"a,b,c\".split( /(,)/ );  // --> [ 'a', ',', 'b', ',', 'c' ]\n     *\n     *     // Old IE (including IE8):\n     *     \"a,b,c\".split( /(,)/ );  // --> [ 'a', 'b', 'c' ]\n     *\n     * This method emulates the functionality of modern browsers for the old IE case.\n     *\n     * @param {String} str The string to split.\n     * @param {RegExp} splitRegex The regular expression to split the input `str` on. The splitting\n     *   character(s) will be spliced into the array, as in the \"modern browsers\" example in the\n     *   description of this method.\n     *   Note #1: the supplied regular expression **must** have the 'g' flag specified.\n     *   Note #2: for simplicity's sake, the regular expression does not need\n     *   to contain capturing parenthesis - it will be assumed that any match has them.\n     * @return {String[]} The split array of strings, with the splitting character(s) included.\n     */\n    function splitAndCapture(str, splitRegex) {\n        if (!splitRegex.global)\n            throw new Error(\"`splitRegex` must have the 'g' flag set\");\n        var result = [], lastIdx = 0, match;\n        while (match = splitRegex.exec(str)) {\n            result.push(str.substring(lastIdx, match.index));\n            result.push(match[0]); // push the splitting char(s)\n            lastIdx = match.index + match[0].length;\n        }\n        result.push(str.substring(lastIdx));\n        return result;\n    }\n    /**\n     * Function that should never be called but is used to check that every\n     * enum value is handled using TypeScript's 'never' type.\n     */\n    function throwUnhandledCaseError(theValue) {\n        throw new Error(\"Unhandled case for value: '\" + theValue + \"'\");\n    }\n\n    /**\n     * @class Autolinker.HtmlTag\n     * @extends Object\n     *\n     * Represents an HTML tag, which can be used to easily build/modify HTML tags programmatically.\n     *\n     * Autolinker uses this abstraction to create HTML tags, and then write them out as strings. You may also use\n     * this class in your code, especially within a {@link Autolinker#replaceFn replaceFn}.\n     *\n     * ## Examples\n     *\n     * Example instantiation:\n     *\n     *     var tag = new Autolinker.HtmlTag( {\n     *         tagName : 'a',\n     *         attrs   : { 'href': 'http-colon-slashslash google.com', 'class': 'external-link' },\n     *         innerHtml : 'Google'\n     *     } );\n     *\n     *     tag.toAnchorString();  // <a href=\"http-colon-slashslash google.com\" class=\"external-link\">Google</a>\n     *\n     *     // Individual accessor methods\n     *     tag.getTagName();                 // 'a'\n     *     tag.getAttr( 'href' );            // 'http-colon-slashslash google.com'\n     *     tag.hasClass( 'external-link' );  // true\n     *\n     *\n     * Using mutator methods (which may be used in combination with instantiation config properties):\n     *\n     *     var tag = new Autolinker.HtmlTag();\n     *     tag.setTagName( 'a' );\n     *     tag.setAttr( 'href', 'http-colon-slashslash google.com' );\n     *     tag.addClass( 'external-link' );\n     *     tag.setInnerHtml( 'Google' );\n     *\n     *     tag.getTagName();                 // 'a'\n     *     tag.getAttr( 'href' );            // 'http-colon-slashslash google.com'\n     *     tag.hasClass( 'external-link' );  // true\n     *\n     *     tag.toAnchorString();  // <a href=\"http-colon-slashslash google.com\" class=\"external-link\">Google</a>\n     *\n     *\n     * ## Example use within a {@link Autolinker#replaceFn replaceFn}\n     *\n     *     var html = Autolinker.link( \"Test google.com\", {\n     *         replaceFn : function( match ) {\n     *             var tag = match.buildTag();  // returns an {@link Autolinker.HtmlTag} instance, configured with the Match's href and anchor text\n     *             tag.setAttr( 'rel', 'nofollow' );\n     *\n     *             return tag;\n     *         }\n     *     } );\n     *\n     *     // generated html:\n     *     //   Test <a href=\"http-colon-slashslash google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>\n     *\n     *\n     * ## Example use with a new tag for the replacement\n     *\n     *     var html = Autolinker.link( \"Test google.com\", {\n     *         replaceFn : function( match ) {\n     *             var tag = new Autolinker.HtmlTag( {\n     *                 tagName : 'button',\n     *                 attrs   : { 'title': 'Load URL: ' + match.getAnchorHref() },\n     *                 innerHtml : 'Load URL: ' + match.getAnchorText()\n     *             } );\n     *\n     *             return tag;\n     *         }\n     *     } );\n     *\n     *     // generated html:\n     *     //   Test <button title=\"Load URL: http-colon-slashslash google.com\">Load URL: google.com</button>\n     */\n    var HtmlTag = /** @class */ (function () {\n        /**\n         * @method constructor\n         * @param {Object} [cfg] The configuration properties for this class, in an Object (map)\n         */\n        function HtmlTag(cfg) {\n            if (cfg === void 0) { cfg = {}; }\n            /**\n             * @cfg {String} tagName\n             *\n             * The tag name. Ex: 'a', 'button', etc.\n             *\n             * Not required at instantiation time, but should be set using {@link #setTagName} before {@link #toAnchorString}\n             * is executed.\n             */\n            this.tagName = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {Object.<String, String>} attrs\n             *\n             * An key/value Object (map) of attributes to create the tag with. The keys are the attribute names, and the\n             * values are the attribute values.\n             */\n            this.attrs = {}; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {String} innerHTML\n             *\n             * The inner HTML for the tag.\n             */\n            this.innerHTML = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @protected\n             * @property {RegExp} whitespaceRegex\n             *\n             * Regular expression used to match whitespace in a string of CSS classes.\n             */\n            this.whitespaceRegex = /\\s+/; // default value just to get the above doc comment in the ES5 output and documentation generator\n            this.tagName = cfg.tagName || '';\n            this.attrs = cfg.attrs || {};\n            this.innerHTML = cfg.innerHtml || cfg.innerHTML || ''; // accept either the camelCased form or the fully capitalized acronym as in the DOM\n        }\n        /**\n         * Sets the tag name that will be used to generate the tag with.\n         *\n         * @param {String} tagName\n         * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n         */\n        HtmlTag.prototype.setTagName = function (tagName) {\n            this.tagName = tagName;\n            return this;\n        };\n        /**\n         * Retrieves the tag name.\n         *\n         * @return {String}\n         */\n        HtmlTag.prototype.getTagName = function () {\n            return this.tagName || '';\n        };\n        /**\n         * Sets an attribute on the HtmlTag.\n         *\n         * @param {String} attrName The attribute name to set.\n         * @param {String} attrValue The attribute value to set.\n         * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n         */\n        HtmlTag.prototype.setAttr = function (attrName, attrValue) {\n            var tagAttrs = this.getAttrs();\n            tagAttrs[attrName] = attrValue;\n            return this;\n        };\n        /**\n         * Retrieves an attribute from the HtmlTag. If the attribute does not exist, returns `undefined`.\n         *\n         * @param {String} attrName The attribute name to retrieve.\n         * @return {String} The attribute's value, or `undefined` if it does not exist on the HtmlTag.\n         */\n        HtmlTag.prototype.getAttr = function (attrName) {\n            return this.getAttrs()[attrName];\n        };\n        /**\n         * Sets one or more attributes on the HtmlTag.\n         *\n         * @param {Object.<String, String>} attrs A key/value Object (map) of the attributes to set.\n         * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n         */\n        HtmlTag.prototype.setAttrs = function (attrs) {\n            Object.assign(this.getAttrs(), attrs);\n            return this;\n        };\n        /**\n         * Retrieves the attributes Object (map) for the HtmlTag.\n         *\n         * @return {Object.<String, String>} A key/value object of the attributes for the HtmlTag.\n         */\n        HtmlTag.prototype.getAttrs = function () {\n            return this.attrs || (this.attrs = {});\n        };\n        /**\n         * Sets the provided `cssClass`, overwriting any current CSS classes on the HtmlTag.\n         *\n         * @param {String} cssClass One or more space-separated CSS classes to set (overwrite).\n         * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n         */\n        HtmlTag.prototype.setClass = function (cssClass) {\n            return this.setAttr('class', cssClass);\n        };\n        /**\n         * Convenience method to add one or more CSS classes to the HtmlTag. Will not add duplicate CSS classes.\n         *\n         * @param {String} cssClass One or more space-separated CSS classes to add.\n         * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n         */\n        HtmlTag.prototype.addClass = function (cssClass) {\n            var classAttr = this.getClass(), whitespaceRegex = this.whitespaceRegex, classes = (!classAttr) ? [] : classAttr.split(whitespaceRegex), newClasses = cssClass.split(whitespaceRegex), newClass;\n            while (newClass = newClasses.shift()) {\n                if (indexOf(classes, newClass) === -1) {\n                    classes.push(newClass);\n                }\n            }\n            this.getAttrs()['class'] = classes.join(\" \");\n            return this;\n        };\n        /**\n         * Convenience method to remove one or more CSS classes from the HtmlTag.\n         *\n         * @param {String} cssClass One or more space-separated CSS classes to remove.\n         * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n         */\n        HtmlTag.prototype.removeClass = function (cssClass) {\n            var classAttr = this.getClass(), whitespaceRegex = this.whitespaceRegex, classes = (!classAttr) ? [] : classAttr.split(whitespaceRegex), removeClasses = cssClass.split(whitespaceRegex), removeClass;\n            while (classes.length && (removeClass = removeClasses.shift())) {\n                var idx = indexOf(classes, removeClass);\n                if (idx !== -1) {\n                    classes.splice(idx, 1);\n                }\n            }\n            this.getAttrs()['class'] = classes.join(\" \");\n            return this;\n        };\n        /**\n         * Convenience method to retrieve the CSS class(es) for the HtmlTag, which will each be separated by spaces when\n         * there are multiple.\n         *\n         * @return {String}\n         */\n        HtmlTag.prototype.getClass = function () {\n            return this.getAttrs()['class'] || \"\";\n        };\n        /**\n         * Convenience method to check if the tag has a CSS class or not.\n         *\n         * @param {String} cssClass The CSS class to check for.\n         * @return {Boolean} `true` if the HtmlTag has the CSS class, `false` otherwise.\n         */\n        HtmlTag.prototype.hasClass = function (cssClass) {\n            return (' ' + this.getClass() + ' ').indexOf(' ' + cssClass + ' ') !== -1;\n        };\n        /**\n         * Sets the inner HTML for the tag.\n         *\n         * @param {String} html The inner HTML to set.\n         * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n         */\n        HtmlTag.prototype.setInnerHTML = function (html) {\n            this.innerHTML = html;\n            return this;\n        };\n        /**\n         * Backwards compatibility method name.\n         *\n         * @param {String} html The inner HTML to set.\n         * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n         */\n        HtmlTag.prototype.setInnerHtml = function (html) {\n            return this.setInnerHTML(html);\n        };\n        /**\n         * Retrieves the inner HTML for the tag.\n         *\n         * @return {String}\n         */\n        HtmlTag.prototype.getInnerHTML = function () {\n            return this.innerHTML || \"\";\n        };\n        /**\n         * Backward compatibility method name.\n         *\n         * @return {String}\n         */\n        HtmlTag.prototype.getInnerHtml = function () {\n            return this.getInnerHTML();\n        };\n        /**\n         * Override of superclass method used to generate the HTML string for the tag.\n         *\n         * @return {String}\n         */\n        HtmlTag.prototype.toAnchorString = function () {\n            var tagName = this.getTagName(), attrsStr = this.buildAttrsStr();\n            attrsStr = (attrsStr) ? ' ' + attrsStr : ''; // prepend a space if there are actually attributes\n            return ['<', tagName, attrsStr, '>', this.getInnerHtml(), '</', tagName, '>'].join(\"\");\n        };\n        /**\n         * Support method for {@link #toAnchorString}, returns the string space-separated key=\"value\" pairs, used to populate\n         * the stringified HtmlTag.\n         *\n         * @protected\n         * @return {String} Example return: `attr1=\"value1\" attr2=\"value2\"`\n         */\n        HtmlTag.prototype.buildAttrsStr = function () {\n            if (!this.attrs)\n                return \"\"; // no `attrs` Object (map) has been set, return empty string\n            var attrs = this.getAttrs(), attrsArr = [];\n            for (var prop in attrs) {\n                if (attrs.hasOwnProperty(prop)) {\n                    attrsArr.push(prop + '=\"' + attrs[prop] + '\"');\n                }\n            }\n            return attrsArr.join(\" \");\n        };\n        return HtmlTag;\n    }());\n\n    /**\n     * Date: 2015-10-05\n     * Author: Kasper Søfren <soefritz@gmail.com> (https-colon-slashslash github.com/kafoso)\n     *\n     * A truncation feature, where the ellipsis will be placed at a section within\n     * the URL making it still somewhat human readable.\n     *\n     * @param {String} url\t\t\t\t\t\t A URL.\n     * @param {Number} truncateLen\t\t The maximum length of the truncated output URL string.\n     * @param {String} ellipsisChars\t The characters to place within the url, e.g. \"...\".\n     * @return {String} The truncated URL.\n     */\n    function truncateSmart(url, truncateLen, ellipsisChars) {\n        var ellipsisLengthBeforeParsing;\n        var ellipsisLength;\n        if (ellipsisChars == null) {\n            ellipsisChars = '&hellip;';\n            ellipsisLength = 3;\n            ellipsisLengthBeforeParsing = 8;\n        }\n        else {\n            ellipsisLength = ellipsisChars.length;\n            ellipsisLengthBeforeParsing = ellipsisChars.length;\n        }\n        var parse_url = function (url) {\n            var urlObj = {};\n            var urlSub = url;\n            var match = urlSub.match(/^([a-z]+):\\/\\//i);\n            if (match) {\n                urlObj.scheme = match[1];\n                urlSub = urlSub.substr(match[0].length);\n            }\n            match = urlSub.match(/^(.*?)(?=(\\?|#|\\/|$))/i);\n            if (match) {\n                urlObj.host = match[1];\n                urlSub = urlSub.substr(match[0].length);\n            }\n            match = urlSub.match(/^\\/(.*?)(?=(\\?|#|$))/i);\n            if (match) {\n                urlObj.path = match[1];\n                urlSub = urlSub.substr(match[0].length);\n            }\n            match = urlSub.match(/^\\?(.*?)(?=(#|$))/i);\n            if (match) {\n                urlObj.query = match[1];\n                urlSub = urlSub.substr(match[0].length);\n            }\n            match = urlSub.match(/^#(.*?)$/i);\n            if (match) {\n                urlObj.fragment = match[1];\n                //urlSub = urlSub.substr(match[0].length);  -- not used. Uncomment if adding another block.\n            }\n            return urlObj;\n        };\n        var buildUrl = function (urlObj) {\n            var url = \"\";\n            if (urlObj.scheme && urlObj.host) {\n                url += urlObj.scheme + \"://\";\n            }\n            if (urlObj.host) {\n                url += urlObj.host;\n            }\n            if (urlObj.path) {\n                url += \"/\" + urlObj.path;\n            }\n            if (urlObj.query) {\n                url += \"?\" + urlObj.query;\n            }\n            if (urlObj.fragment) {\n                url += \"#\" + urlObj.fragment;\n            }\n            return url;\n        };\n        var buildSegment = function (segment, remainingAvailableLength) {\n            var remainingAvailableLengthHalf = remainingAvailableLength / 2, startOffset = Math.ceil(remainingAvailableLengthHalf), endOffset = (-1) * Math.floor(remainingAvailableLengthHalf), end = \"\";\n            if (endOffset < 0) {\n                end = segment.substr(endOffset);\n            }\n            return segment.substr(0, startOffset) + ellipsisChars + end;\n        };\n        if (url.length <= truncateLen) {\n            return url;\n        }\n        var availableLength = truncateLen - ellipsisLength;\n        var urlObj = parse_url(url);\n        // Clean up the URL\n        if (urlObj.query) {\n            var matchQuery = urlObj.query.match(/^(.*?)(?=(\\?|\\#))(.*?)$/i);\n            if (matchQuery) {\n                // Malformed URL; two or more \"?\". Removed any content behind the 2nd.\n                urlObj.query = urlObj.query.substr(0, matchQuery[1].length);\n                url = buildUrl(urlObj);\n            }\n        }\n        if (url.length <= truncateLen) {\n            return url;\n        }\n        if (urlObj.host) {\n            urlObj.host = urlObj.host.replace(/^www\\./, \"\");\n            url = buildUrl(urlObj);\n        }\n        if (url.length <= truncateLen) {\n            return url;\n        }\n        // Process and build the URL\n        var str = \"\";\n        if (urlObj.host) {\n            str += urlObj.host;\n        }\n        if (str.length >= availableLength) {\n            if (urlObj.host.length == truncateLen) {\n                return (urlObj.host.substr(0, (truncateLen - ellipsisLength)) + ellipsisChars).substr(0, availableLength + ellipsisLengthBeforeParsing);\n            }\n            return buildSegment(str, availableLength).substr(0, availableLength + ellipsisLengthBeforeParsing);\n        }\n        var pathAndQuery = \"\";\n        if (urlObj.path) {\n            pathAndQuery += \"/\" + urlObj.path;\n        }\n        if (urlObj.query) {\n            pathAndQuery += \"?\" + urlObj.query;\n        }\n        if (pathAndQuery) {\n            if ((str + pathAndQuery).length >= availableLength) {\n                if ((str + pathAndQuery).length == truncateLen) {\n                    return (str + pathAndQuery).substr(0, truncateLen);\n                }\n                var remainingAvailableLength = availableLength - str.length;\n                return (str + buildSegment(pathAndQuery, remainingAvailableLength)).substr(0, availableLength + ellipsisLengthBeforeParsing);\n            }\n            else {\n                str += pathAndQuery;\n            }\n        }\n        if (urlObj.fragment) {\n            var fragment = \"#\" + urlObj.fragment;\n            if ((str + fragment).length >= availableLength) {\n                if ((str + fragment).length == truncateLen) {\n                    return (str + fragment).substr(0, truncateLen);\n                }\n                var remainingAvailableLength2 = availableLength - str.length;\n                return (str + buildSegment(fragment, remainingAvailableLength2)).substr(0, availableLength + ellipsisLengthBeforeParsing);\n            }\n            else {\n                str += fragment;\n            }\n        }\n        if (urlObj.scheme && urlObj.host) {\n            var scheme = urlObj.scheme + \"://\";\n            if ((str + scheme).length < availableLength) {\n                return (scheme + str).substr(0, truncateLen);\n            }\n        }\n        if (str.length <= truncateLen) {\n            return str;\n        }\n        var end = \"\";\n        if (availableLength > 0) {\n            end = str.substr((-1) * Math.floor(availableLength / 2));\n        }\n        return (str.substr(0, Math.ceil(availableLength / 2)) + ellipsisChars + end).substr(0, availableLength + ellipsisLengthBeforeParsing);\n    }\n\n    /**\n     * Date: 2015-10-05\n     * Author: Kasper Søfren <soefritz@gmail.com> (https-colon-slashslash github.com/kafoso)\n     *\n     * A truncation feature, where the ellipsis will be placed in the dead-center of the URL.\n     *\n     * @param {String} url             A URL.\n     * @param {Number} truncateLen     The maximum length of the truncated output URL string.\n     * @param {String} ellipsisChars   The characters to place within the url, e.g. \"..\".\n     * @return {String} The truncated URL.\n     */\n    function truncateMiddle(url, truncateLen, ellipsisChars) {\n        if (url.length <= truncateLen) {\n            return url;\n        }\n        var ellipsisLengthBeforeParsing;\n        var ellipsisLength;\n        if (ellipsisChars == null) {\n            ellipsisChars = '&hellip;';\n            ellipsisLengthBeforeParsing = 8;\n            ellipsisLength = 3;\n        }\n        else {\n            ellipsisLengthBeforeParsing = ellipsisChars.length;\n            ellipsisLength = ellipsisChars.length;\n        }\n        var availableLength = truncateLen - ellipsisLength;\n        var end = \"\";\n        if (availableLength > 0) {\n            end = url.substr((-1) * Math.floor(availableLength / 2));\n        }\n        return (url.substr(0, Math.ceil(availableLength / 2)) + ellipsisChars + end).substr(0, availableLength + ellipsisLengthBeforeParsing);\n    }\n\n    /**\n     * A truncation feature where the ellipsis will be placed at the end of the URL.\n     *\n     * @param {String} anchorText\n     * @param {Number} truncateLen The maximum length of the truncated output URL string.\n     * @param {String} ellipsisChars The characters to place within the url, e.g. \"..\".\n     * @return {String} The truncated URL.\n     */\n    function truncateEnd(anchorText, truncateLen, ellipsisChars) {\n        return ellipsis(anchorText, truncateLen, ellipsisChars);\n    }\n\n    /**\n     * @protected\n     * @class Autolinker.AnchorTagBuilder\n     * @extends Object\n     *\n     * Builds anchor (&lt;a&gt;) tags for the Autolinker utility when a match is\n     * found.\n     *\n     * Normally this class is instantiated, configured, and used internally by an\n     * {@link Autolinker} instance, but may actually be used indirectly in a\n     * {@link Autolinker#replaceFn replaceFn} to create {@link Autolinker.HtmlTag HtmlTag}\n     * instances which may be modified before returning from the\n     * {@link Autolinker#replaceFn replaceFn}. For example:\n     *\n     *     var html = Autolinker.link( \"Test google.com\", {\n     *         replaceFn : function( match ) {\n     *             var tag = match.buildTag();  // returns an {@link Autolinker.HtmlTag} instance\n     *             tag.setAttr( 'rel', 'nofollow' );\n     *\n     *             return tag;\n     *         }\n     *     } );\n     *\n     *     // generated html:\n     *     //   Test <a href=\"http-colon-slashslash google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>\n     */\n    var AnchorTagBuilder = /** @class */ (function () {\n        /**\n         * @method constructor\n         * @param {Object} [cfg] The configuration options for the AnchorTagBuilder instance, specified in an Object (map).\n         */\n        function AnchorTagBuilder(cfg) {\n            if (cfg === void 0) { cfg = {}; }\n            /**\n             * @cfg {Boolean} newWindow\n             * @inheritdoc Autolinker#newWindow\n             */\n            this.newWindow = false; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {Object} truncate\n             * @inheritdoc Autolinker#truncate\n             */\n            this.truncate = {}; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {String} className\n             * @inheritdoc Autolinker#className\n             */\n            this.className = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n            this.newWindow = cfg.newWindow || false;\n            this.truncate = cfg.truncate || {};\n            this.className = cfg.className || '';\n        }\n        /**\n         * Generates the actual anchor (&lt;a&gt;) tag to use in place of the\n         * matched text, via its `match` object.\n         *\n         * @param {Autolinker.match.Match} match The Match instance to generate an\n         *   anchor tag from.\n         * @return {Autolinker.HtmlTag} The HtmlTag instance for the anchor tag.\n         */\n        AnchorTagBuilder.prototype.build = function (match) {\n            return new HtmlTag({\n                tagName: 'a',\n                attrs: this.createAttrs(match),\n                innerHtml: this.processAnchorText(match.getAnchorText())\n            });\n        };\n        /**\n         * Creates the Object (map) of the HTML attributes for the anchor (&lt;a&gt;)\n         *   tag being generated.\n         *\n         * @protected\n         * @param {Autolinker.match.Match} match The Match instance to generate an\n         *   anchor tag from.\n         * @return {Object} A key/value Object (map) of the anchor tag's attributes.\n         */\n        AnchorTagBuilder.prototype.createAttrs = function (match) {\n            var attrs = {\n                'href': match.getAnchorHref() // we'll always have the `href` attribute\n            };\n            var cssClass = this.createCssClass(match);\n            if (cssClass) {\n                attrs['class'] = cssClass;\n            }\n            if (this.newWindow) {\n                attrs['target'] = \"_blank\";\n                attrs['rel'] = \"noopener noreferrer\"; // Issue #149. See https://mathiasbynens.github.io/rel-noopener/\n            }\n            if (this.truncate) {\n                if (this.truncate.length && this.truncate.length < match.getAnchorText().length) {\n                    attrs['title'] = match.getAnchorHref();\n                }\n            }\n            return attrs;\n        };\n        /**\n         * Creates the CSS class that will be used for a given anchor tag, based on\n         * the `matchType` and the {@link #className} config.\n         *\n         * Example returns:\n         *\n         * - \"\"                                      // no {@link #className}\n         * - \"myLink myLink-url\"                     // url match\n         * - \"myLink myLink-email\"                   // email match\n         * - \"myLink myLink-phone\"                   // phone match\n         * - \"myLink myLink-hashtag\"                 // hashtag match\n         * - \"myLink myLink-mention myLink-twitter\"  // mention match with Twitter service\n         *\n         * @protected\n         * @param {Autolinker.match.Match} match The Match instance to generate an\n         *   anchor tag from.\n         * @return {String} The CSS class string for the link. Example return:\n         *   \"myLink myLink-url\". If no {@link #className} was configured, returns\n         *   an empty string.\n         */\n        AnchorTagBuilder.prototype.createCssClass = function (match) {\n            var className = this.className;\n            if (!className) {\n                return \"\";\n            }\n            else {\n                var returnClasses = [className], cssClassSuffixes = match.getCssClassSuffixes();\n                for (var i = 0, len = cssClassSuffixes.length; i < len; i++) {\n                    returnClasses.push(className + '-' + cssClassSuffixes[i]);\n                }\n                return returnClasses.join(' ');\n            }\n        };\n        /**\n         * Processes the `anchorText` by truncating the text according to the\n         * {@link #truncate} config.\n         *\n         * @private\n         * @param {String} anchorText The anchor tag's text (i.e. what will be\n         *   displayed).\n         * @return {String} The processed `anchorText`.\n         */\n        AnchorTagBuilder.prototype.processAnchorText = function (anchorText) {\n            anchorText = this.doTruncate(anchorText);\n            return anchorText;\n        };\n        /**\n         * Performs the truncation of the `anchorText` based on the {@link #truncate}\n         * option. If the `anchorText` is longer than the length specified by the\n         * {@link #truncate} option, the truncation is performed based on the\n         * `location` property. See {@link #truncate} for details.\n         *\n         * @private\n         * @param {String} anchorText The anchor tag's text (i.e. what will be\n         *   displayed).\n         * @return {String} The truncated anchor text.\n         */\n        AnchorTagBuilder.prototype.doTruncate = function (anchorText) {\n            var truncate = this.truncate;\n            if (!truncate || !truncate.length)\n                return anchorText;\n            var truncateLength = truncate.length, truncateLocation = truncate.location;\n            if (truncateLocation === 'smart') {\n                return truncateSmart(anchorText, truncateLength);\n            }\n            else if (truncateLocation === 'middle') {\n                return truncateMiddle(anchorText, truncateLength);\n            }\n            else {\n                return truncateEnd(anchorText, truncateLength);\n            }\n        };\n        return AnchorTagBuilder;\n    }());\n\n    /**\n     * @abstract\n     * @class Autolinker.match.Match\n     *\n     * Represents a match found in an input string which should be Autolinked. A Match object is what is provided in a\n     * {@link Autolinker#replaceFn replaceFn}, and may be used to query for details about the match.\n     *\n     * For example:\n     *\n     *     var input = \"...\";  // string with URLs, Email Addresses, and Mentions (Twitter, Instagram, Soundcloud)\n     *\n     *     var linkedText = Autolinker.link( input, {\n     *         replaceFn : function( match ) {\n     *             console.log( \"href = \", match.getAnchorHref() );\n     *             console.log( \"text = \", match.getAnchorText() );\n     *\n     *             switch( match.getType() ) {\n     *                 case 'url' :\n     *                     console.log( \"url: \", match.getUrl() );\n     *\n     *                 case 'email' :\n     *                     console.log( \"email: \", match.getEmail() );\n     *\n     *                 case 'mention' :\n     *                     console.log( \"mention: \", match.getMention() );\n     *             }\n     *         }\n     *     } );\n     *\n     * See the {@link Autolinker} class for more details on using the {@link Autolinker#replaceFn replaceFn}.\n     */\n    var Match = /** @class */ (function () {\n        /**\n         * @member Autolinker.match.Match\n         * @method constructor\n         * @param {Object} cfg The configuration properties for the Match\n         *   instance, specified in an Object (map).\n         */\n        function Match(cfg) {\n            /**\n             * @cfg {Autolinker.AnchorTagBuilder} tagBuilder (required)\n             *\n             * Reference to the AnchorTagBuilder instance to use to generate an anchor\n             * tag for the Match.\n             */\n            this.__jsduckDummyDocProp = null; // property used just to get the above doc comment into the ES5 output and documentation generator\n            /**\n             * @cfg {String} matchedText (required)\n             *\n             * The original text that was matched by the {@link Autolinker.matcher.Matcher}.\n             */\n            this.matchedText = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {Number} offset (required)\n             *\n             * The offset of where the match was made in the input string.\n             */\n            this.offset = 0; // default value just to get the above doc comment in the ES5 output and documentation generator\n            this.tagBuilder = cfg.tagBuilder;\n            this.matchedText = cfg.matchedText;\n            this.offset = cfg.offset;\n        }\n        /**\n         * Returns the original text that was matched.\n         *\n         * @return {String}\n         */\n        Match.prototype.getMatchedText = function () {\n            return this.matchedText;\n        };\n        /**\n         * Sets the {@link #offset} of where the match was made in the input string.\n         *\n         * A {@link Autolinker.matcher.Matcher} will be fed only HTML text nodes,\n         * and will therefore set an original offset that is relative to the HTML\n         * text node itself. However, we want this offset to be relative to the full\n         * HTML input string, and thus if using {@link Autolinker#parse} (rather\n         * than calling a {@link Autolinker.matcher.Matcher} directly), then this\n         * offset is corrected after the Matcher itself has done its job.\n         *\n         * @param {Number} offset\n         */\n        Match.prototype.setOffset = function (offset) {\n            this.offset = offset;\n        };\n        /**\n         * Returns the offset of where the match was made in the input string. This\n         * is the 0-based index of the match.\n         *\n         * @return {Number}\n         */\n        Match.prototype.getOffset = function () {\n            return this.offset;\n        };\n        /**\n         * Returns the CSS class suffix(es) for this match.\n         *\n         * A CSS class suffix is appended to the {@link Autolinker#className} in\n         * the {@link Autolinker.AnchorTagBuilder} when a match is translated into\n         * an anchor tag.\n         *\n         * For example, if {@link Autolinker#className} was configured as 'myLink',\n         * and this method returns `[ 'url' ]`, the final class name of the element\n         * will become: 'myLink myLink-url'.\n         *\n         * The match may provide multiple CSS class suffixes to be appended to the\n         * {@link Autolinker#className} in order to facilitate better styling\n         * options for different match criteria. See {@link Autolinker.match.Mention}\n         * for an example.\n         *\n         * By default, this method returns a single array with the match's\n         * {@link #getType type} name, but may be overridden by subclasses.\n         *\n         * @return {String[]}\n         */\n        Match.prototype.getCssClassSuffixes = function () {\n            return [this.getType()];\n        };\n        /**\n         * Builds and returns an {@link Autolinker.HtmlTag} instance based on the\n         * Match.\n         *\n         * This can be used to easily generate anchor tags from matches, and either\n         * return their HTML string, or modify them before doing so.\n         *\n         * Example Usage:\n         *\n         *     var tag = match.buildTag();\n         *     tag.addClass( 'cordova-link' );\n         *     tag.setAttr( 'target', '_system' );\n         *\n         *     tag.toAnchorString();  // <a href=\"http-colon-slashslash google.com\" class=\"cordova-link\" target=\"_system\">Google</a>\n         *\n         * Example Usage in {@link Autolinker#replaceFn}:\n         *\n         *     var html = Autolinker.link( \"Test google.com\", {\n         *         replaceFn : function( match ) {\n         *             var tag = match.buildTag();  // returns an {@link Autolinker.HtmlTag} instance\n         *             tag.setAttr( 'rel', 'nofollow' );\n         *\n         *             return tag;\n         *         }\n         *     } );\n         *\n         *     // generated html:\n         *     //   Test <a href=\"http-colon-slashslash google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>\n         */\n        Match.prototype.buildTag = function () {\n            return this.tagBuilder.build(this);\n        };\n        return Match;\n    }());\n\n    /*! *****************************************************************************\n    Copyright (c) Microsoft Corporation. All rights reserved.\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\n    this file except in compliance with the License. You may obtain a copy of the\n    License at http-colon-slashslash www.apache.org/licenses/LICENSE-2.0\n\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\n    MERCHANTABLITY OR NON-INFRINGEMENT.\n\n    See the Apache Version 2.0 License for specific language governing permissions\n    and limitations under the License.\n    ***************************************************************************** */\n    /* global Reflect, Promise */\n\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n\n    function __extends(d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    }\n\n    var __assign = function() {\n        __assign = Object.assign || function __assign(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign.apply(this, arguments);\n    };\n\n    /**\n     * @class Autolinker.match.Email\n     * @extends Autolinker.match.Match\n     *\n     * Represents a Email match found in an input string which should be Autolinked.\n     *\n     * See this class's superclass ({@link Autolinker.match.Match}) for more details.\n     */\n    var EmailMatch = /** @class */ (function (_super) {\n        __extends(EmailMatch, _super);\n        /**\n         * @method constructor\n         * @param {Object} cfg The configuration properties for the Match\n         *   instance, specified in an Object (map).\n         */\n        function EmailMatch(cfg) {\n            var _this = _super.call(this, cfg) || this;\n            /**\n             * @cfg {String} email (required)\n             *\n             * The email address that was matched.\n             */\n            _this.email = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n            _this.email = cfg.email;\n            return _this;\n        }\n        /**\n         * Returns a string name for the type of match that this class represents.\n         * For the case of EmailMatch, returns 'email'.\n         *\n         * @return {String}\n         */\n        EmailMatch.prototype.getType = function () {\n            return 'email';\n        };\n        /**\n         * Returns the email address that was matched.\n         *\n         * @return {String}\n         */\n        EmailMatch.prototype.getEmail = function () {\n            return this.email;\n        };\n        /**\n         * Returns the anchor href that should be generated for the match.\n         *\n         * @return {String}\n         */\n        EmailMatch.prototype.getAnchorHref = function () {\n            return 'mailto:' + this.email;\n        };\n        /**\n         * Returns the anchor text that should be generated for the match.\n         *\n         * @return {String}\n         */\n        EmailMatch.prototype.getAnchorText = function () {\n            return this.email;\n        };\n        return EmailMatch;\n    }(Match));\n\n    /**\n     * @class Autolinker.match.Hashtag\n     * @extends Autolinker.match.Match\n     *\n     * Represents a Hashtag match found in an input string which should be\n     * Autolinked.\n     *\n     * See this class's superclass ({@link Autolinker.match.Match}) for more\n     * details.\n     */\n    var HashtagMatch = /** @class */ (function (_super) {\n        __extends(HashtagMatch, _super);\n        /**\n         * @method constructor\n         * @param {Object} cfg The configuration properties for the Match\n         *   instance, specified in an Object (map).\n         */\n        function HashtagMatch(cfg) {\n            var _this = _super.call(this, cfg) || this;\n            /**\n             * @cfg {String} serviceName\n             *\n             * The service to point hashtag matches to. See {@link Autolinker#hashtag}\n             * for available values.\n             */\n            _this.serviceName = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {String} hashtag (required)\n             *\n             * The HashtagMatch that was matched, without the '#'.\n             */\n            _this.hashtag = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n            _this.serviceName = cfg.serviceName;\n            _this.hashtag = cfg.hashtag;\n            return _this;\n        }\n        /**\n         * Returns a string name for the type of match that this class represents.\n         * For the case of HashtagMatch, returns 'hashtag'.\n         *\n         * @return {String}\n         */\n        HashtagMatch.prototype.getType = function () {\n            return 'hashtag';\n        };\n        /**\n         * Returns the configured {@link #serviceName} to point the HashtagMatch to.\n         * Ex: 'facebook', 'twitter'.\n         *\n         * @return {String}\n         */\n        HashtagMatch.prototype.getServiceName = function () {\n            return this.serviceName;\n        };\n        /**\n         * Returns the matched hashtag, without the '#' character.\n         *\n         * @return {String}\n         */\n        HashtagMatch.prototype.getHashtag = function () {\n            return this.hashtag;\n        };\n        /**\n         * Returns the anchor href that should be generated for the match.\n         *\n         * @return {String}\n         */\n        HashtagMatch.prototype.getAnchorHref = function () {\n            var serviceName = this.serviceName, hashtag = this.hashtag;\n            switch (serviceName) {\n                case 'twitter':\n                    return 'https://twitter.com/hashtag/' + hashtag;\n                case 'facebook':\n                    return 'https://www.facebook.com/hashtag/' + hashtag;\n                case 'instagram':\n                    return 'https://instagram.com/explore/tags/' + hashtag;\n                default: // Shouldn't happen because Autolinker's constructor should block any invalid values, but just in case.\n                    throw new Error('Unknown service name to point hashtag to: ' + serviceName);\n            }\n        };\n        /**\n         * Returns the anchor text that should be generated for the match.\n         *\n         * @return {String}\n         */\n        HashtagMatch.prototype.getAnchorText = function () {\n            return '#' + this.hashtag;\n        };\n        return HashtagMatch;\n    }(Match));\n\n    /**\n     * @class Autolinker.match.Mention\n     * @extends Autolinker.match.Match\n     *\n     * Represents a Mention match found in an input string which should be Autolinked.\n     *\n     * See this class's superclass ({@link Autolinker.match.Match}) for more details.\n     */\n    var MentionMatch = /** @class */ (function (_super) {\n        __extends(MentionMatch, _super);\n        /**\n         * @method constructor\n         * @param {Object} cfg The configuration properties for the Match\n         *   instance, specified in an Object (map).\n         */\n        function MentionMatch(cfg) {\n            var _this = _super.call(this, cfg) || this;\n            /**\n             * @cfg {String} serviceName\n             *\n             * The service to point mention matches to. See {@link Autolinker#mention}\n             * for available values.\n             */\n            _this.serviceName = 'twitter'; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {String} mention (required)\n             *\n             * The Mention that was matched, without the '@' character.\n             */\n            _this.mention = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n            _this.mention = cfg.mention;\n            _this.serviceName = cfg.serviceName;\n            return _this;\n        }\n        /**\n         * Returns a string name for the type of match that this class represents.\n         * For the case of MentionMatch, returns 'mention'.\n         *\n         * @return {String}\n         */\n        MentionMatch.prototype.getType = function () {\n            return 'mention';\n        };\n        /**\n         * Returns the mention, without the '@' character.\n         *\n         * @return {String}\n         */\n        MentionMatch.prototype.getMention = function () {\n            return this.mention;\n        };\n        /**\n         * Returns the configured {@link #serviceName} to point the mention to.\n         * Ex: 'instagram', 'twitter', 'soundcloud'.\n         *\n         * @return {String}\n         */\n        MentionMatch.prototype.getServiceName = function () {\n            return this.serviceName;\n        };\n        /**\n         * Returns the anchor href that should be generated for the match.\n         *\n         * @return {String}\n         */\n        MentionMatch.prototype.getAnchorHref = function () {\n            switch (this.serviceName) {\n                case 'twitter':\n                    return 'https://twitter.com/' + this.mention;\n                case 'instagram':\n                    return 'https://instagram.com/' + this.mention;\n                case 'soundcloud':\n                    return 'https://soundcloud.com/' + this.mention;\n                default: // Shouldn't happen because Autolinker's constructor should block any invalid values, but just in case.\n                    throw new Error('Unknown service name to point mention to: ' + this.serviceName);\n            }\n        };\n        /**\n         * Returns the anchor text that should be generated for the match.\n         *\n         * @return {String}\n         */\n        MentionMatch.prototype.getAnchorText = function () {\n            return '@' + this.mention;\n        };\n        /**\n         * Returns the CSS class suffixes that should be used on a tag built with\n         * the match. See {@link Autolinker.match.Match#getCssClassSuffixes} for\n         * details.\n         *\n         * @return {String[]}\n         */\n        MentionMatch.prototype.getCssClassSuffixes = function () {\n            var cssClassSuffixes = _super.prototype.getCssClassSuffixes.call(this), serviceName = this.getServiceName();\n            if (serviceName) {\n                cssClassSuffixes.push(serviceName);\n            }\n            return cssClassSuffixes;\n        };\n        return MentionMatch;\n    }(Match));\n\n    /**\n     * @class Autolinker.match.Phone\n     * @extends Autolinker.match.Match\n     *\n     * Represents a Phone number match found in an input string which should be\n     * Autolinked.\n     *\n     * See this class's superclass ({@link Autolinker.match.Match}) for more\n     * details.\n     */\n    var PhoneMatch = /** @class */ (function (_super) {\n        __extends(PhoneMatch, _super);\n        /**\n         * @method constructor\n         * @param {Object} cfg The configuration properties for the Match\n         *   instance, specified in an Object (map).\n         */\n        function PhoneMatch(cfg) {\n            var _this = _super.call(this, cfg) || this;\n            /**\n             * @protected\n             * @property {String} number (required)\n             *\n             * The phone number that was matched, without any delimiter characters.\n             *\n             * Note: This is a string to allow for prefixed 0's.\n             */\n            _this.number = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @protected\n             * @property  {Boolean} plusSign (required)\n             *\n             * `true` if the matched phone number started with a '+' sign. We'll include\n             * it in the `tel:` URL if so, as this is needed for international numbers.\n             *\n             * Ex: '+1 (123) 456 7879'\n             */\n            _this.plusSign = false; // default value just to get the above doc comment in the ES5 output and documentation generator\n            _this.number = cfg.number;\n            _this.plusSign = cfg.plusSign;\n            return _this;\n        }\n        /**\n         * Returns a string name for the type of match that this class represents.\n         * For the case of PhoneMatch, returns 'phone'.\n         *\n         * @return {String}\n         */\n        PhoneMatch.prototype.getType = function () {\n            return 'phone';\n        };\n        /**\n         * Returns the phone number that was matched as a string, without any\n         * delimiter characters.\n         *\n         * Note: This is a string to allow for prefixed 0's.\n         *\n         * @return {String}\n         */\n        PhoneMatch.prototype.getPhoneNumber = function () {\n            return this.number;\n        };\n        /**\n         * Alias of {@link #getPhoneNumber}, returns the phone number that was\n         * matched as a string, without any delimiter characters.\n         *\n         * Note: This is a string to allow for prefixed 0's.\n         *\n         * @return {String}\n         */\n        PhoneMatch.prototype.getNumber = function () {\n            return this.getPhoneNumber();\n        };\n        /**\n         * Returns the anchor href that should be generated for the match.\n         *\n         * @return {String}\n         */\n        PhoneMatch.prototype.getAnchorHref = function () {\n            return 'tel:' + (this.plusSign ? '+' : '') + this.number;\n        };\n        /**\n         * Returns the anchor text that should be generated for the match.\n         *\n         * @return {String}\n         */\n        PhoneMatch.prototype.getAnchorText = function () {\n            return this.matchedText;\n        };\n        return PhoneMatch;\n    }(Match));\n\n    /**\n     * @class Autolinker.match.Url\n     * @extends Autolinker.match.Match\n     *\n     * Represents a Url match found in an input string which should be Autolinked.\n     *\n     * See this class's superclass ({@link Autolinker.match.Match}) for more details.\n     */\n    var UrlMatch = /** @class */ (function (_super) {\n        __extends(UrlMatch, _super);\n        /**\n         * @method constructor\n         * @param {Object} cfg The configuration properties for the Match\n         *   instance, specified in an Object (map).\n         */\n        function UrlMatch(cfg) {\n            var _this = _super.call(this, cfg) || this;\n            /**\n             * @cfg {String} url (required)\n             *\n             * The url that was matched.\n             */\n            _this.url = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {\"scheme\"/\"www\"/\"tld\"} urlMatchType (required)\n             *\n             * The type of URL match that this class represents. This helps to determine\n             * if the match was made in the original text with a prefixed scheme (ex:\n             * 'http-colon-slashslash www.google.com'), a prefixed 'www' (ex: 'www.google.com'), or\n             * was matched by a known top-level domain (ex: 'google.com').\n             */\n            _this.urlMatchType = 'scheme'; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {Boolean} protocolUrlMatch (required)\n             *\n             * `true` if the URL is a match which already has a protocol (i.e.\n             * 'http-colon-slashslash '), `false` if the match was from a 'www' or known TLD match.\n             */\n            _this.protocolUrlMatch = false; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {Boolean} protocolRelativeMatch (required)\n             *\n             * `true` if the URL is a protocol-relative match. A protocol-relative match\n             * is a URL that starts with '//', and will be either http-colon-slashslash  or https-colon-slashslash \n             * based on the protocol that the site is loaded under.\n             */\n            _this.protocolRelativeMatch = false; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {Object} stripPrefix (required)\n             *\n             * The Object form of {@link Autolinker#cfg-stripPrefix}.\n             */\n            _this.stripPrefix = { scheme: true, www: true }; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {Boolean} stripTrailingSlash (required)\n             * @inheritdoc Autolinker#cfg-stripTrailingSlash\n             */\n            _this.stripTrailingSlash = true; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {Boolean} decodePercentEncoding (required)\n             * @inheritdoc Autolinker#cfg-decodePercentEncoding\n             */\n            _this.decodePercentEncoding = true; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @private\n             * @property {RegExp} schemePrefixRegex\n             *\n             * A regular expression used to remove the 'http-colon-slashslash ' or 'https-colon-slashslash ' from\n             * URLs.\n             */\n            _this.schemePrefixRegex = /^(https?:\\/\\/)?/i;\n            /**\n             * @private\n             * @property {RegExp} wwwPrefixRegex\n             *\n             * A regular expression used to remove the 'www.' from URLs.\n             */\n            _this.wwwPrefixRegex = /^(https?:\\/\\/)?(www\\.)?/i;\n            /**\n             * @private\n             * @property {RegExp} protocolRelativeRegex\n             *\n             * The regular expression used to remove the protocol-relative '//' from the {@link #url} string, for purposes\n             * of {@link #getAnchorText}. A protocol-relative URL is, for example, \"//yahoo.com\"\n             */\n            _this.protocolRelativeRegex = /^\\/\\//;\n            /**\n             * @private\n             * @property {Boolean} protocolPrepended\n             *\n             * Will be set to `true` if the 'http-colon-slashslash ' protocol has been prepended to the {@link #url} (because the\n             * {@link #url} did not have a protocol)\n             */\n            _this.protocolPrepended = false;\n            _this.urlMatchType = cfg.urlMatchType;\n            _this.url = cfg.url;\n            _this.protocolUrlMatch = cfg.protocolUrlMatch;\n            _this.protocolRelativeMatch = cfg.protocolRelativeMatch;\n            _this.stripPrefix = cfg.stripPrefix;\n            _this.stripTrailingSlash = cfg.stripTrailingSlash;\n            _this.decodePercentEncoding = cfg.decodePercentEncoding;\n            return _this;\n        }\n        /**\n         * Returns a string name for the type of match that this class represents.\n         * For the case of UrlMatch, returns 'url'.\n         *\n         * @return {String}\n         */\n        UrlMatch.prototype.getType = function () {\n            return 'url';\n        };\n        /**\n         * Returns a string name for the type of URL match that this class\n         * represents.\n         *\n         * This helps to determine if the match was made in the original text with a\n         * prefixed scheme (ex: 'http-colon-slashslash www.google.com'), a prefixed 'www' (ex:\n         * 'www.google.com'), or was matched by a known top-level domain (ex:\n         * 'google.com').\n         *\n         * @return {\"scheme\"/\"www\"/\"tld\"}\n         */\n        UrlMatch.prototype.getUrlMatchType = function () {\n            return this.urlMatchType;\n        };\n        /**\n         * Returns the url that was matched, assuming the protocol to be 'http-colon-slashslash ' if the original\n         * match was missing a protocol.\n         *\n         * @return {String}\n         */\n        UrlMatch.prototype.getUrl = function () {\n            var url = this.url;\n            // if the url string doesn't begin with a protocol, assume 'http://'\n            if (!this.protocolRelativeMatch && !this.protocolUrlMatch && !this.protocolPrepended) {\n                url = this.url = 'http://' + url;\n                this.protocolPrepended = true;\n            }\n            return url;\n        };\n        /**\n         * Returns the anchor href that should be generated for the match.\n         *\n         * @return {String}\n         */\n        UrlMatch.prototype.getAnchorHref = function () {\n            var url = this.getUrl();\n            return url.replace(/&amp;/g, '&'); // any &amp;'s in the URL should be converted back to '&' if they were displayed as &amp; in the source html\n        };\n        /**\n         * Returns the anchor text that should be generated for the match.\n         *\n         * @return {String}\n         */\n        UrlMatch.prototype.getAnchorText = function () {\n            var anchorText = this.getMatchedText();\n            if (this.protocolRelativeMatch) {\n                // Strip off any protocol-relative '//' from the anchor text\n                anchorText = this.stripProtocolRelativePrefix(anchorText);\n            }\n            if (this.stripPrefix.scheme) {\n                anchorText = this.stripSchemePrefix(anchorText);\n            }\n            if (this.stripPrefix.www) {\n                anchorText = this.stripWwwPrefix(anchorText);\n            }\n            if (this.stripTrailingSlash) {\n                anchorText = this.removeTrailingSlash(anchorText); // remove trailing slash, if there is one\n            }\n            if (this.decodePercentEncoding) {\n                anchorText = this.removePercentEncoding(anchorText);\n            }\n            return anchorText;\n        };\n        // ---------------------------------------\n        // Utility Functionality\n        /**\n         * Strips the scheme prefix (such as \"http-colon-slashslash \" or \"https-colon-slashslash \") from the given\n         * `url`.\n         *\n         * @private\n         * @param {String} url The text of the anchor that is being generated, for\n         *   which to strip off the url scheme.\n         * @return {String} The `url`, with the scheme stripped.\n         */\n        UrlMatch.prototype.stripSchemePrefix = function (url) {\n            return url.replace(this.schemePrefixRegex, '');\n        };\n        /**\n         * Strips the 'www' prefix from the given `url`.\n         *\n         * @private\n         * @param {String} url The text of the anchor that is being generated, for\n         *   which to strip off the 'www' if it exists.\n         * @return {String} The `url`, with the 'www' stripped.\n         */\n        UrlMatch.prototype.stripWwwPrefix = function (url) {\n            return url.replace(this.wwwPrefixRegex, '$1'); // leave any scheme ($1), it one exists\n        };\n        /**\n         * Strips any protocol-relative '//' from the anchor text.\n         *\n         * @private\n         * @param {String} text The text of the anchor that is being generated, for which to strip off the\n         *   protocol-relative prefix (such as stripping off \"//\")\n         * @return {String} The `anchorText`, with the protocol-relative prefix stripped.\n         */\n        UrlMatch.prototype.stripProtocolRelativePrefix = function (text) {\n            return text.replace(this.protocolRelativeRegex, '');\n        };\n        /**\n         * Removes any trailing slash from the given `anchorText`, in preparation for the text to be displayed.\n         *\n         * @private\n         * @param {String} anchorText The text of the anchor that is being generated, for which to remove any trailing\n         *   slash ('/') that may exist.\n         * @return {String} The `anchorText`, with the trailing slash removed.\n         */\n        UrlMatch.prototype.removeTrailingSlash = function (anchorText) {\n            if (anchorText.charAt(anchorText.length - 1) === '/') {\n                anchorText = anchorText.slice(0, -1);\n            }\n            return anchorText;\n        };\n        /**\n         * Decodes percent-encoded characters from the given `anchorText`, in\n         * preparation for the text to be displayed.\n         *\n         * @private\n         * @param {String} anchorText The text of the anchor that is being\n         *   generated, for which to decode any percent-encoded characters.\n         * @return {String} The `anchorText`, with the percent-encoded characters\n         *   decoded.\n         */\n        UrlMatch.prototype.removePercentEncoding = function (anchorText) {\n            // First, convert a few of the known % encodings to the corresponding\n            // HTML entities that could accidentally be interpretted as special\n            // HTML characters\n            var preProcessedEntityAnchorText = anchorText\n                .replace(/%22/gi, '&quot;') // \" char\n                .replace(/%26/gi, '&amp;') // & char\n                .replace(/%27/gi, '&#39;') // ' char\n                .replace(/%3C/gi, '&lt;') // < char\n                .replace(/%3E/gi, '&gt;'); // > char\n            try {\n                // Now attempt to decode the rest of the anchor text\n                return decodeURIComponent(preProcessedEntityAnchorText);\n            }\n            catch (e) { // Invalid % escape sequence in the anchor text\n                return preProcessedEntityAnchorText;\n            }\n        };\n        return UrlMatch;\n    }(Match));\n\n    /**\n     * @abstract\n     * @class Autolinker.matcher.Matcher\n     *\n     * An abstract class and interface for individual matchers to find matches in\n     * an input string with linkified versions of them.\n     *\n     * Note that Matchers do not take HTML into account - they must be fed the text\n     * nodes of any HTML string, which is handled by {@link Autolinker#parse}.\n     */\n    var Matcher = /** @class */ (function () {\n        /**\n         * @method constructor\n         * @param {Object} cfg The configuration properties for the Matcher\n         *   instance, specified in an Object (map).\n         */\n        function Matcher(cfg) {\n            /**\n             * @cfg {Autolinker.AnchorTagBuilder} tagBuilder (required)\n             *\n             * Reference to the AnchorTagBuilder instance to use to generate HTML tags\n             * for {@link Autolinker.match.Match Matches}.\n             */\n            this.__jsduckDummyDocProp = null; // property used just to get the above doc comment into the ES5 output and documentation generator\n            this.tagBuilder = cfg.tagBuilder;\n        }\n        return Matcher;\n    }());\n\n    /*\n     * This file builds and stores a library of the common regular expressions used\n     * by the Autolinker utility.\n     *\n     * Other regular expressions may exist ad-hoc, but these are generally the\n     * regular expressions that are shared between source files.\n     */\n    /**\n     * Regular expression to match upper and lowercase ASCII letters\n     */\n    var letterRe = /[A-Za-z]/;\n    /**\n     * Regular expression to match ASCII digits\n     */\n    var digitRe = /[0-9]/;\n    /**\n     * Regular expression to match whitespace\n     */\n    var whitespaceRe = /\\s/;\n    /**\n     * Regular expression to match quote characters\n     */\n    var quoteRe = /['\"]/;\n    /**\n     * Regular expression to match the range of ASCII control characters (0-31), and\n     * the backspace char (127)\n     */\n    var controlCharsRe = /[\\x00-\\x1F\\x7F]/;\n    /**\n     * The string form of a regular expression that would match all of the\n     * alphabetic (\"letter\") chars in the unicode character set when placed in a\n     * RegExp character class (`[]`). This includes all international alphabetic\n     * characters.\n     *\n     * These would be the characters matched by unicode regex engines `\\p{L}`\n     * escape (\"all letters\").\n     *\n     * Taken from the XRegExp library: http-colon-slashslash xregexp.com/ (thanks @https-colon-slashslash github.com/slevithan)\n     * Specifically: http-colon-slashslash xregexp.com/v/3.2.0/xregexp-all.js, the 'Letter'\n     *   regex's bmp\n     *\n     * VERY IMPORTANT: This set of characters is defined inside of a Regular\n     *   Expression literal rather than a string literal to prevent UglifyJS from\n     *   compressing the unicode escape sequences into their actual unicode\n     *   characters. If Uglify compresses these into the unicode characters\n     *   themselves, this results in the error \"Range out of order in character\n     *   class\" when these characters are used inside of a Regular Expression\n     *   character class (`[]`). See usages of this const. Alternatively, we can set\n     *   the UglifyJS option `ascii_only` to true for the build, but that doesn't\n     *   help others who are pulling in Autolinker into their own build and running\n     *   UglifyJS themselves.\n     */\n    var alphaCharsStr = /A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC/\n        .source; // see note in above variable description\n    /**\n     * The string form of a regular expression that would match all emoji characters\n     * Source: https-colon-slashslash www.regextester.com/106421\n     */\n    var emojiStr = /\\u00a9\\u00ae\\u2000-\\u3300\\ud83c\\ud000-\\udfff\\ud83d\\ud000-\\udfff\\ud83e\\ud000-\\udfff/\n        .source;\n    /**\n     * The string form of a regular expression that would match all of the\n     * combining mark characters in the unicode character set when placed in a\n     * RegExp character class (`[]`).\n     *\n     * These would be the characters matched by unicode regex engines `\\p{M}`\n     * escape (\"all marks\").\n     *\n     * Taken from the XRegExp library: http-colon-slashslash xregexp.com/ (thanks @https-colon-slashslash github.com/slevithan)\n     * Specifically: http-colon-slashslash xregexp.com/v/3.2.0/xregexp-all.js, the 'Mark'\n     *   regex's bmp\n     *\n     * VERY IMPORTANT: This set of characters is defined inside of a Regular\n     *   Expression literal rather than a string literal to prevent UglifyJS from\n     *   compressing the unicode escape sequences into their actual unicode\n     *   characters. If Uglify compresses these into the unicode characters\n     *   themselves, this results in the error \"Range out of order in character\n     *   class\" when these characters are used inside of a Regular Expression\n     *   character class (`[]`). See usages of this const. Alternatively, we can set\n     *   the UglifyJS option `ascii_only` to true for the build, but that doesn't\n     *   help others who are pulling in Autolinker into their own build and running\n     *   UglifyJS themselves.\n     */\n    var marksStr = /\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D4-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFB-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F/\n        .source; // see note in above variable description\n    /**\n     * The string form of a regular expression that would match all of the\n     * alphabetic (\"letter\") chars, emoji, and combining marks in the unicode character set\n     * when placed in a RegExp character class (`[]`). This includes all\n     * international alphabetic characters.\n     *\n     * These would be the characters matched by unicode regex engines `\\p{L}\\p{M}`\n     * escapes and emoji characters.\n     */\n    var alphaCharsAndMarksStr = alphaCharsStr + emojiStr + marksStr;\n    /**\n     * The string form of a regular expression that would match all of the\n     * decimal number chars in the unicode character set when placed in a RegExp\n     * character class (`[]`).\n     *\n     * These would be the characters matched by unicode regex engines `\\p{Nd}`\n     * escape (\"all decimal numbers\")\n     *\n     * Taken from the XRegExp library: http-colon-slashslash xregexp.com/ (thanks @https-colon-slashslash github.com/slevithan)\n     * Specifically: http-colon-slashslash xregexp.com/v/3.2.0/xregexp-all.js, the 'Decimal_Number'\n     *   regex's bmp\n     *\n     * VERY IMPORTANT: This set of characters is defined inside of a Regular\n     *   Expression literal rather than a string literal to prevent UglifyJS from\n     *   compressing the unicode escape sequences into their actual unicode\n     *   characters. If Uglify compresses these into the unicode characters\n     *   themselves, this results in the error \"Range out of order in character\n     *   class\" when these characters are used inside of a Regular Expression\n     *   character class (`[]`). See usages of this const. Alternatively, we can set\n     *   the UglifyJS option `ascii_only` to true for the build, but that doesn't\n     *   help others who are pulling in Autolinker into their own build and running\n     *   UglifyJS themselves.\n     */\n    var decimalNumbersStr = /0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19/\n        .source; // see note in above variable description\n    /**\n     * The string form of a regular expression that would match all of the\n     * letters and decimal number chars in the unicode character set when placed in\n     * a RegExp character class (`[]`).\n     *\n     * These would be the characters matched by unicode regex engines\n     * `[\\p{L}\\p{Nd}]` escape (\"all letters and decimal numbers\")\n     */\n    var alphaNumericCharsStr = alphaCharsAndMarksStr + decimalNumbersStr;\n    /**\n     * The string form of a regular expression that would match all of the\n     * letters, combining marks, and decimal number chars in the unicode character\n     * set when placed in a RegExp character class (`[]`).\n     *\n     * These would be the characters matched by unicode regex engines\n     * `[\\p{L}\\p{M}\\p{Nd}]` escape (\"all letters, combining marks, and decimal\n     * numbers\")\n     */\n    var alphaNumericAndMarksCharsStr = alphaCharsAndMarksStr + decimalNumbersStr;\n    // Simplified IP regular expression\n    var ipStr = '(?:[' + decimalNumbersStr + ']{1,3}\\\\.){3}[' + decimalNumbersStr + ']{1,3}';\n    // Protected domain label which do not allow \"-\" character on the beginning and the end of a single label\n    var domainLabelStr = '[' + alphaNumericAndMarksCharsStr + '](?:[' + alphaNumericAndMarksCharsStr + '\\\\-]{0,61}[' + alphaNumericAndMarksCharsStr + '])?';\n    var getDomainLabelStr = function (group) {\n        return '(?=(' + domainLabelStr + '))\\\\' + group;\n    };\n    /**\n     * A function to match domain names of a URL or email address.\n     * Ex: 'google', 'yahoo', 'some-other-company', etc.\n     */\n    var getDomainNameStr = function (group) {\n        return '(?:' + getDomainLabelStr(group) + '(?:\\\\.' + getDomainLabelStr(group + 1) + '){0,126}|' + ipStr + ')';\n    };\n    /**\n     * A regular expression that is simply the character class of the characters\n     * that may be used in a domain name, minus the '-' or '.'\n     */\n    var domainNameCharRegex = new RegExp(\"[\" + alphaNumericAndMarksCharsStr + \"]\");\n\n    // NOTE: THIS IS A GENERATED FILE\n    // To update with the latest TLD list, run `npm run update-tld-regex` or `yarn update-tld-regex` (depending on which you have installed)\n    var tldRegex = /(?:xn--vermgensberatung-pwb|xn--vermgensberater-ctb|xn--clchc0ea0b2g2a9gcd|xn--w4r85el8fhu5dnra|northwesternmutual|travelersinsurance|vermögensberatung|xn--3oq18vl8pn36a|xn--5su34j936bgsg|xn--bck1b9a5dre4c|xn--mgbai9azgqp6j|xn--mgberp4a5d4ar|xn--xkc2dl3a5ee0h|vermögensberater|xn--fzys8d69uvgm|xn--mgba7c0bbn0a|xn--xkc2al3hye2a|americanexpress|kerryproperties|sandvikcoromant|xn--i1b6b1a6a2e|xn--kcrx77d1x4a|xn--lgbbat1ad8j|xn--mgba3a4f16a|xn--mgbaakc7dvf|xn--mgbc0a9azcg|xn--nqv7fs00ema|afamilycompany|americanfamily|bananarepublic|cancerresearch|cookingchannel|kerrylogistics|weatherchannel|xn--54b7fta0cc|xn--6qq986b3xl|xn--80aqecdr1a|xn--b4w605ferd|xn--fiq228c5hs|xn--h2breg3eve|xn--jlq61u9w7b|xn--mgba3a3ejt|xn--mgbaam7a8h|xn--mgbayh7gpa|xn--mgbb9fbpob|xn--mgbbh1a71e|xn--mgbca7dzdo|xn--mgbi4ecexp|xn--mgbx4cd0ab|xn--rvc1e0am3e|international|lifeinsurance|spreadbetting|travelchannel|wolterskluwer|xn--eckvdtc9d|xn--fpcrj9c3d|xn--fzc2c9e2c|xn--h2brj9c8c|xn--tiq49xqyj|xn--yfro4i67o|xn--ygbi2ammx|construction|lplfinancial|scholarships|versicherung|xn--3e0b707e|xn--45br5cyl|xn--80adxhks|xn--80asehdb|xn--8y0a063a|xn--gckr3f0f|xn--mgb9awbf|xn--mgbab2bd|xn--mgbgu82a|xn--mgbpl2fh|xn--mgbt3dhd|xn--mk1bu44c|xn--ngbc5azd|xn--ngbe9e0a|xn--ogbpf8fl|xn--qcka1pmc|accountants|barclaycard|blackfriday|blockbuster|bridgestone|calvinklein|contractors|creditunion|engineering|enterprises|foodnetwork|investments|kerryhotels|lamborghini|motorcycles|olayangroup|photography|playstation|productions|progressive|redumbrella|rightathome|williamhill|xn--11b4c3d|xn--1ck2e1b|xn--1qqw23a|xn--2scrj9c|xn--3bst00m|xn--3ds443g|xn--3hcrj9c|xn--42c2d9a|xn--45brj9c|xn--55qw42g|xn--6frz82g|xn--80ao21a|xn--9krt00a|xn--cck2b3b|xn--czr694b|xn--d1acj3b|xn--efvy88h|xn--estv75g|xn--fct429k|xn--fjq720a|xn--flw351e|xn--g2xx48c|xn--gecrj9c|xn--gk3at1e|xn--h2brj9c|xn--hxt814e|xn--imr513n|xn--j6w193g|xn--jvr189m|xn--kprw13d|xn--kpry57d|xn--kpu716f|xn--mgbbh1a|xn--mgbtx2b|xn--mix891f|xn--nyqy26a|xn--otu796d|xn--pbt977c|xn--pgbs0dh|xn--q9jyb4c|xn--rhqv96g|xn--rovu88b|xn--s9brj9c|xn--ses554g|xn--t60b56a|xn--vuq861b|xn--w4rs40l|xn--xhq521b|xn--zfr164b|சிங்கப்பூர்|accountant|apartments|associates|basketball|bnpparibas|boehringer|capitalone|consulting|creditcard|cuisinella|eurovision|extraspace|foundation|healthcare|immobilien|industries|management|mitsubishi|nationwide|newholland|nextdirect|onyourside|properties|protection|prudential|realestate|republican|restaurant|schaeffler|swiftcover|tatamotors|technology|telefonica|university|vistaprint|vlaanderen|volkswagen|xn--30rr7y|xn--3pxu8k|xn--45q11c|xn--4gbrim|xn--55qx5d|xn--5tzm5g|xn--80aswg|xn--90a3ac|xn--9dbq2a|xn--9et52u|xn--c2br7g|xn--cg4bki|xn--czrs0t|xn--czru2d|xn--fiq64b|xn--fiqs8s|xn--fiqz9s|xn--io0a7i|xn--kput3i|xn--mxtq1m|xn--o3cw4h|xn--pssy2u|xn--unup4y|xn--wgbh1c|xn--wgbl6a|xn--y9a3aq|accenture|alfaromeo|allfinanz|amsterdam|analytics|aquarelle|barcelona|bloomberg|christmas|community|directory|education|equipment|fairwinds|financial|firestone|fresenius|frontdoor|fujixerox|furniture|goldpoint|hisamitsu|homedepot|homegoods|homesense|honeywell|institute|insurance|kuokgroup|ladbrokes|lancaster|landrover|lifestyle|marketing|marshalls|melbourne|microsoft|panasonic|passagens|pramerica|richardli|scjohnson|shangrila|solutions|statebank|statefarm|stockholm|travelers|vacations|xn--90ais|xn--c1avg|xn--d1alf|xn--e1a4c|xn--fhbei|xn--j1aef|xn--j1amh|xn--l1acc|xn--ngbrx|xn--nqv7f|xn--p1acf|xn--tckwe|xn--vhquv|yodobashi|abudhabi|airforce|allstate|attorney|barclays|barefoot|bargains|baseball|boutique|bradesco|broadway|brussels|budapest|builders|business|capetown|catering|catholic|chrysler|cipriani|cityeats|cleaning|clinique|clothing|commbank|computer|delivery|deloitte|democrat|diamonds|discount|discover|download|engineer|ericsson|esurance|etisalat|everbank|exchange|feedback|fidelity|firmdale|football|frontier|goodyear|grainger|graphics|guardian|hdfcbank|helsinki|holdings|hospital|infiniti|ipiranga|istanbul|jpmorgan|lighting|lundbeck|marriott|maserati|mckinsey|memorial|merckmsd|mortgage|movistar|observer|partners|pharmacy|pictures|plumbing|property|redstone|reliance|saarland|samsclub|security|services|shopping|showtime|softbank|software|stcgroup|supplies|symantec|training|uconnect|vanguard|ventures|verisign|woodside|xn--90ae|xn--node|xn--p1ai|xn--qxam|yokohama|السعودية|abogado|academy|agakhan|alibaba|android|athleta|auction|audible|auspost|avianca|banamex|bauhaus|bentley|bestbuy|booking|brother|bugatti|capital|caravan|careers|cartier|channel|charity|chintai|citadel|clubmed|college|cologne|comcast|company|compare|contact|cooking|corsica|country|coupons|courses|cricket|cruises|dentist|digital|domains|exposed|express|farmers|fashion|ferrari|ferrero|finance|fishing|fitness|flights|florist|flowers|forsale|frogans|fujitsu|gallery|genting|godaddy|grocery|guitars|hamburg|hangout|hitachi|holiday|hosting|hoteles|hotmail|hyundai|iselect|ismaili|jewelry|juniper|kitchen|komatsu|lacaixa|lancome|lanxess|lasalle|latrobe|leclerc|liaison|limited|lincoln|markets|metlife|monster|netbank|netflix|network|neustar|okinawa|oldnavy|organic|origins|philips|pioneer|politie|realtor|recipes|rentals|reviews|rexroth|samsung|sandvik|schmidt|schwarz|science|shiksha|shriram|singles|staples|starhub|storage|support|surgery|systems|temasek|theater|theatre|tickets|tiffany|toshiba|trading|walmart|wanggou|watches|weather|website|wedding|whoswho|windows|winners|xfinity|yamaxun|youtube|zuerich|католик|اتصالات|الجزائر|العليان|پاکستان|كاثوليك|موبايلي|இந்தியா|abarth|abbott|abbvie|active|africa|agency|airbus|airtel|alipay|alsace|alstom|anquan|aramco|author|bayern|beauty|berlin|bharti|blanco|bostik|boston|broker|camera|career|caseih|casino|center|chanel|chrome|church|circle|claims|clinic|coffee|comsec|condos|coupon|credit|cruise|dating|datsun|dealer|degree|dental|design|direct|doctor|dunlop|dupont|durban|emerck|energy|estate|events|expert|family|flickr|futbol|gallup|garden|george|giving|global|google|gratis|health|hermes|hiphop|hockey|hotels|hughes|imamat|insure|intuit|jaguar|joburg|juegos|kaufen|kinder|kindle|kosher|lancia|latino|lawyer|lefrak|living|locker|london|luxury|madrid|maison|makeup|market|mattel|mobile|mobily|monash|mormon|moscow|museum|mutual|nagoya|natura|nissan|nissay|norton|nowruz|office|olayan|online|oracle|orange|otsuka|pfizer|photos|physio|piaget|pictet|quebec|racing|realty|reisen|repair|report|review|rocher|rogers|ryukyu|safety|sakura|sanofi|school|schule|search|secure|select|shouji|soccer|social|stream|studio|supply|suzuki|swatch|sydney|taipei|taobao|target|tattoo|tennis|tienda|tjmaxx|tkmaxx|toyota|travel|unicom|viajes|viking|villas|virgin|vision|voting|voyage|vuelos|walter|warman|webcam|xihuan|yachts|yandex|zappos|москва|онлайн|ابوظبي|ارامكو|الاردن|المغرب|امارات|فلسطين|مليسيا|भारतम्|இலங்கை|ファッション|actor|adult|aetna|amfam|amica|apple|archi|audio|autos|azure|baidu|beats|bible|bingo|black|boats|bosch|build|canon|cards|chase|cheap|cisco|citic|click|cloud|coach|codes|crown|cymru|dabur|dance|deals|delta|dodge|drive|dubai|earth|edeka|email|epost|epson|faith|fedex|final|forex|forum|gallo|games|gifts|gives|glade|glass|globo|gmail|green|gripe|group|gucci|guide|homes|honda|horse|house|hyatt|ikano|intel|irish|iveco|jetzt|koeln|kyoto|lamer|lease|legal|lexus|lilly|linde|lipsy|lixil|loans|locus|lotte|lotto|lupin|macys|mango|media|miami|money|mopar|movie|nadex|nexus|nikon|ninja|nokia|nowtv|omega|osaka|paris|parts|party|phone|photo|pizza|place|poker|praxi|press|prime|promo|quest|radio|rehab|reise|ricoh|rocks|rodeo|rugby|salon|sener|seven|sharp|shell|shoes|skype|sling|smart|smile|solar|space|sport|stada|store|study|style|sucks|swiss|tatar|tires|tirol|tmall|today|tokyo|tools|toray|total|tours|trade|trust|tunes|tushu|ubank|vegas|video|vodka|volvo|wales|watch|weber|weibo|works|world|xerox|yahoo|zippo|ایران|بازار|بھارت|سودان|سورية|همراه|भारोत|संगठन|বাংলা|భారత్|ഭാരതം|嘉里大酒店|aarp|able|adac|aero|aigo|akdn|ally|amex|arab|army|arpa|arte|asda|asia|audi|auto|baby|band|bank|bbva|beer|best|bike|bing|blog|blue|bofa|bond|book|buzz|cafe|call|camp|care|cars|casa|case|cash|cbre|cern|chat|citi|city|club|cool|coop|cyou|data|date|dclk|deal|dell|desi|diet|dish|docs|doha|duck|duns|dvag|erni|fage|fail|fans|farm|fast|fiat|fido|film|fire|fish|flir|food|ford|free|fund|game|gbiz|gent|ggee|gift|gmbh|gold|golf|goog|guge|guru|hair|haus|hdfc|help|here|hgtv|host|hsbc|icbc|ieee|imdb|immo|info|itau|java|jeep|jobs|jprs|kddi|kiwi|kpmg|kred|land|lego|lgbt|lidl|life|like|limo|link|live|loan|loft|love|ltda|luxe|maif|meet|meme|menu|mini|mint|mobi|moda|moto|name|navy|news|next|nico|nike|ollo|open|page|pars|pccw|pics|ping|pink|play|plus|pohl|porn|post|prod|prof|qpon|raid|read|reit|rent|rest|rich|rmit|room|rsvp|ruhr|safe|sale|sarl|save|saxo|scor|scot|seat|seek|sexy|shaw|shia|shop|show|silk|sina|site|skin|sncf|sohu|song|sony|spot|star|surf|talk|taxi|team|tech|teva|tiaa|tips|town|toys|tube|vana|visa|viva|vivo|vote|voto|wang|weir|wien|wiki|wine|work|xbox|yoga|zara|zero|zone|дети|сайт|بارت|بيتك|ڀارت|تونس|شبكة|عراق|عمان|موقع|भारत|ভারত|ভাৰত|ਭਾਰਤ|ભારત|ଭାରତ|ಭಾರತ|ලංකා|グーグル|クラウド|ポイント|大众汽车|组织机构|電訊盈科|香格里拉|aaa|abb|abc|aco|ads|aeg|afl|aig|anz|aol|app|art|aws|axa|bar|bbc|bbt|bcg|bcn|bet|bid|bio|biz|bms|bmw|bnl|bom|boo|bot|box|buy|bzh|cab|cal|cam|car|cat|cba|cbn|cbs|ceb|ceo|cfa|cfd|com|crs|csc|dad|day|dds|dev|dhl|diy|dnp|dog|dot|dtv|dvr|eat|eco|edu|esq|eus|fan|fit|fly|foo|fox|frl|ftr|fun|fyi|gal|gap|gdn|gea|gle|gmo|gmx|goo|gop|got|gov|hbo|hiv|hkt|hot|how|ibm|ice|icu|ifm|inc|ing|ink|int|ist|itv|jcb|jcp|jio|jll|jmp|jnj|jot|joy|kfh|kia|kim|kpn|krd|lat|law|lds|llc|lol|lpl|ltd|man|map|mba|med|men|mil|mit|mlb|mls|mma|moe|moi|mom|mov|msd|mtn|mtr|nab|nba|nec|net|new|nfl|ngo|nhk|now|nra|nrw|ntt|nyc|obi|off|one|ong|onl|ooo|org|ott|ovh|pay|pet|phd|pid|pin|pnc|pro|pru|pub|pwc|qvc|red|ren|ril|rio|rip|run|rwe|sap|sas|sbi|sbs|sca|scb|ses|sew|sex|sfr|ski|sky|soy|srl|srt|stc|tab|tax|tci|tdk|tel|thd|tjx|top|trv|tui|tvs|ubs|uno|uol|ups|vet|vig|vin|vip|wed|win|wme|wow|wtc|wtf|xin|xxx|xyz|you|yun|zip|бел|ком|қаз|мкд|мон|орг|рус|срб|укр|հայ|קום|عرب|قطر|كوم|مصر|कॉम|नेट|คอม|ไทย|ストア|セール|みんな|中文网|天主教|我爱你|新加坡|淡马锡|诺基亚|飞利浦|ac|ad|ae|af|ag|ai|al|am|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cu|cv|cw|cx|cy|cz|de|dj|dk|dm|do|dz|ec|ee|eg|er|es|et|eu|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|st|su|sv|sx|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tr|tt|tv|tw|tz|ua|ug|uk|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|za|zm|zw|ελ|бг|ею|рф|გე|닷넷|닷컴|삼성|한국|コム|世界|中信|中国|中國|企业|佛山|信息|健康|八卦|公司|公益|台湾|台灣|商城|商店|商标|嘉里|在线|大拿|娱乐|家電|工行|广东|微博|慈善|手机|手表|招聘|政务|政府|新闻|时尚|書籍|机构|游戏|澳門|点看|珠宝|移动|网址|网店|网站|网络|联通|谷歌|购物|通販|集团|食品|餐厅|香港)/;\n\n    // For debugging: search for other \"For debugging\" lines\n    // import CliTable from 'cli-table';\n    /**\n     * @class Autolinker.matcher.Email\n     * @extends Autolinker.matcher.Matcher\n     *\n     * Matcher to find email matches in an input string.\n     *\n     * See this class's superclass ({@link Autolinker.matcher.Matcher}) for more details.\n     */\n    var EmailMatcher = /** @class */ (function (_super) {\n        __extends(EmailMatcher, _super);\n        function EmailMatcher() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /**\n             * Valid characters that can be used in the \"local\" part of an email address,\n             * i.e. the \"name\" part of \"name@site.com\"\n             */\n            _this.localPartCharRegex = new RegExp(\"[\" + alphaNumericAndMarksCharsStr + \"!#$%&'*+/=?^_`{|}~-]\");\n            /**\n             * Stricter TLD regex which adds a beginning and end check to ensure\n             * the string is a valid TLD\n             */\n            _this.strictTldRegex = new RegExp(\"^\" + tldRegex.source + \"$\");\n            return _this;\n        }\n        /**\n         * @inheritdoc\n         */\n        EmailMatcher.prototype.parseMatches = function (text) {\n            var tagBuilder = this.tagBuilder, localPartCharRegex = this.localPartCharRegex, strictTldRegex = this.strictTldRegex, matches = [], len = text.length, noCurrentEmailMatch = new CurrentEmailMatch();\n            // for matching a 'mailto:' prefix\n            var mailtoTransitions = {\n                'm': 'a',\n                'a': 'i',\n                'i': 'l',\n                'l': 't',\n                't': 'o',\n                'o': ':',\n            };\n            var charIdx = 0, state = 0 /* NonEmailMatch */, currentEmailMatch = noCurrentEmailMatch;\n            // For debugging: search for other \"For debugging\" lines\n            // const table = new CliTable( {\n            // \thead: [ 'charIdx', 'char', 'state', 'charIdx', 'currentEmailAddress.idx', 'hasDomainDot' ]\n            // } );\n            while (charIdx < len) {\n                var char = text.charAt(charIdx);\n                // For debugging: search for other \"For debugging\" lines\n                // table.push(\n                // \t[ charIdx, char, State[ state ], charIdx, currentEmailAddress.idx, currentEmailAddress.hasDomainDot ]\n                // );\n                switch (state) {\n                    case 0 /* NonEmailMatch */:\n                        stateNonEmailAddress(char);\n                        break;\n                    case 1 /* Mailto */:\n                        stateMailTo(text.charAt(charIdx - 1), char);\n                        break;\n                    case 2 /* LocalPart */:\n                        stateLocalPart(char);\n                        break;\n                    case 3 /* LocalPartDot */:\n                        stateLocalPartDot(char);\n                        break;\n                    case 4 /* AtSign */:\n                        stateAtSign(char);\n                        break;\n                    case 5 /* DomainChar */:\n                        stateDomainChar(char);\n                        break;\n                    case 6 /* DomainHyphen */:\n                        stateDomainHyphen(char);\n                        break;\n                    case 7 /* DomainDot */:\n                        stateDomainDot(char);\n                        break;\n                    default:\n                        throwUnhandledCaseError(state);\n                }\n                // For debugging: search for other \"For debugging\" lines\n                // table.push(\n                // \t[ charIdx, char, State[ state ], charIdx, currentEmailAddress.idx, currentEmailAddress.hasDomainDot ]\n                // );\n                charIdx++;\n            }\n            // Capture any valid match at the end of the string\n            captureMatchIfValidAndReset();\n            // For debugging: search for other \"For debugging\" lines\n            //console.log( '\\n' + table.toString() );\n            return matches;\n            // Handles the state when we're not in an email address\n            function stateNonEmailAddress(char) {\n                if (char === 'm') {\n                    beginEmailMatch(1 /* Mailto */);\n                }\n                else if (localPartCharRegex.test(char)) {\n                    beginEmailMatch();\n                }\n            }\n            // Handles if we're reading a 'mailto:' prefix on the string\n            function stateMailTo(prevChar, char) {\n                if (prevChar === ':') {\n                    // We've reached the end of the 'mailto:' prefix\n                    if (localPartCharRegex.test(char)) {\n                        state = 2 /* LocalPart */;\n                        currentEmailMatch = new CurrentEmailMatch(__assign({}, currentEmailMatch, { hasMailtoPrefix: true }));\n                    }\n                    else {\n                        // we've matched 'mailto:' but didn't get anything meaningful\n                        // immediately afterwards (for example, we encountered a\n                        // space character, or an '@' character which formed 'mailto:@'\n                        resetToNonEmailMatchState();\n                    }\n                }\n                else if (mailtoTransitions[prevChar] === char) ;\n                else if (localPartCharRegex.test(char)) {\n                    // We we're reading a prefix of 'mailto:', but encountered a\n                    // different character that didn't continue the prefix\n                    state = 2 /* LocalPart */;\n                }\n                else if (char === '.') {\n                    // We we're reading a prefix of 'mailto:', but encountered a\n                    // dot character\n                    state = 3 /* LocalPartDot */;\n                }\n                else if (char === '@') {\n                    // We we're reading a prefix of 'mailto:', but encountered a\n                    // an @ character\n                    state = 4 /* AtSign */;\n                }\n                else {\n                    // not an email address character, return to \"NonEmailAddress\" state\n                    resetToNonEmailMatchState();\n                }\n            }\n            // Handles the state when we're currently in the \"local part\" of an\n            // email address (as opposed to the \"domain part\")\n            function stateLocalPart(char) {\n                if (char === '.') {\n                    state = 3 /* LocalPartDot */;\n                }\n                else if (char === '@') {\n                    state = 4 /* AtSign */;\n                }\n                else if (localPartCharRegex.test(char)) ;\n                else {\n                    // not an email address character, return to \"NonEmailAddress\" state\n                    resetToNonEmailMatchState();\n                }\n            }\n            // Handles the state where we've read\n            function stateLocalPartDot(char) {\n                if (char === '.') {\n                    // We read a second '.' in a row, not a valid email address\n                    // local part\n                    resetToNonEmailMatchState();\n                }\n                else if (char === '@') {\n                    // We read the '@' character immediately after a dot ('.'), not\n                    // an email address\n                    resetToNonEmailMatchState();\n                }\n                else if (localPartCharRegex.test(char)) {\n                    state = 2 /* LocalPart */;\n                }\n                else {\n                    // Anything else, not an email address\n                    resetToNonEmailMatchState();\n                }\n            }\n            function stateAtSign(char) {\n                if (domainNameCharRegex.test(char)) {\n                    state = 5 /* DomainChar */;\n                }\n                else {\n                    // Anything else, not an email address\n                    resetToNonEmailMatchState();\n                }\n            }\n            function stateDomainChar(char) {\n                if (char === '.') {\n                    state = 7 /* DomainDot */;\n                }\n                else if (char === '-') {\n                    state = 6 /* DomainHyphen */;\n                }\n                else if (domainNameCharRegex.test(char)) ;\n                else {\n                    // Anything else, we potentially matched if the criteria has\n                    // been met\n                    captureMatchIfValidAndReset();\n                }\n            }\n            function stateDomainHyphen(char) {\n                if (char === '-' || char === '.') {\n                    // Not valid to have two hyphens (\"--\") or hypen+dot (\"-.\")\n                    captureMatchIfValidAndReset();\n                }\n                else if (domainNameCharRegex.test(char)) {\n                    state = 5 /* DomainChar */;\n                }\n                else {\n                    // Anything else\n                    captureMatchIfValidAndReset();\n                }\n            }\n            function stateDomainDot(char) {\n                if (char === '.' || char === '-') {\n                    // not valid to have two dots (\"..\") or dot+hypen (\".-\")\n                    captureMatchIfValidAndReset();\n                }\n                else if (domainNameCharRegex.test(char)) {\n                    state = 5 /* DomainChar */;\n                    // After having read a '.' and then a valid domain character,\n                    // we now know that the domain part of the email is valid, and\n                    // we have found at least a partial EmailMatch (however, the\n                    // email address may have additional characters from this point)\n                    currentEmailMatch = new CurrentEmailMatch(__assign({}, currentEmailMatch, { hasDomainDot: true }));\n                }\n                else {\n                    // Anything else\n                    captureMatchIfValidAndReset();\n                }\n            }\n            function beginEmailMatch(newState) {\n                if (newState === void 0) { newState = 2 /* LocalPart */; }\n                state = newState;\n                currentEmailMatch = new CurrentEmailMatch({ idx: charIdx });\n            }\n            function resetToNonEmailMatchState() {\n                state = 0 /* NonEmailMatch */;\n                currentEmailMatch = noCurrentEmailMatch;\n            }\n            /*\n             * Captures the current email address as an EmailMatch if it's valid,\n             * and resets the state to read another email address.\n             */\n            function captureMatchIfValidAndReset() {\n                if (currentEmailMatch.hasDomainDot) { // we need at least one dot in the domain to be considered a valid email address\n                    var matchedText = text.slice(currentEmailMatch.idx, charIdx);\n                    // If we read a '.' or '-' char that ended the email address\n                    // (valid domain name characters, but only valid email address\n                    // characters if they are followed by something else), strip\n                    // it off now\n                    if (/[-.]$/.test(matchedText)) {\n                        matchedText = matchedText.slice(0, -1);\n                    }\n                    var emailAddress = currentEmailMatch.hasMailtoPrefix\n                        ? matchedText.slice('mailto:'.length)\n                        : matchedText;\n                    // if the email address has a valid TLD, add it to the list of matches\n                    if (doesEmailHaveValidTld(emailAddress)) {\n                        matches.push(new EmailMatch({\n                            tagBuilder: tagBuilder,\n                            matchedText: matchedText,\n                            offset: currentEmailMatch.idx,\n                            email: emailAddress\n                        }));\n                    }\n                }\n                resetToNonEmailMatchState();\n                /**\n                 * Determines if the given email address has a valid TLD or not\n                 * @param {string} emailAddress - email address\n                 * @return {Boolean} - true is email have valid TLD, false otherwise\n                 */\n                function doesEmailHaveValidTld(emailAddress) {\n                    var emailAddressTld = emailAddress.split('.').pop() || '';\n                    var emailAddressNormalized = emailAddressTld.toLowerCase();\n                    var isValidTld = strictTldRegex.test(emailAddressNormalized);\n                    return isValidTld;\n                }\n            }\n        };\n        return EmailMatcher;\n    }(Matcher));\n    var CurrentEmailMatch = /** @class */ (function () {\n        function CurrentEmailMatch(cfg) {\n            if (cfg === void 0) { cfg = {}; }\n            this.idx = cfg.idx !== undefined ? cfg.idx : -1;\n            this.hasMailtoPrefix = !!cfg.hasMailtoPrefix;\n            this.hasDomainDot = !!cfg.hasDomainDot;\n        }\n        return CurrentEmailMatch;\n    }());\n\n    /**\n     * @private\n     * @class Autolinker.matcher.UrlMatchValidator\n     * @singleton\n     *\n     * Used by Autolinker to filter out false URL positives from the\n     * {@link Autolinker.matcher.Url UrlMatcher}.\n     *\n     * Due to the limitations of regular expressions (including the missing feature\n     * of look-behinds in JS regular expressions), we cannot always determine the\n     * validity of a given match. This class applies a bit of additional logic to\n     * filter out any false positives that have been matched by the\n     * {@link Autolinker.matcher.Url UrlMatcher}.\n     */\n    var UrlMatchValidator = /** @class */ (function () {\n        function UrlMatchValidator() {\n        }\n        /**\n         * Determines if a given URL match found by the {@link Autolinker.matcher.Url UrlMatcher}\n         * is valid. Will return `false` for:\n         *\n         * 1) URL matches which do not have at least have one period ('.') in the\n         *    domain name (effectively skipping over matches like \"abc:def\").\n         *    However, URL matches with a protocol will be allowed (ex: 'http-colon-slashslash localhost')\n         * 2) URL matches which do not have at least one word character in the\n         *    domain name (effectively skipping over matches like \"git:1.0\").\n         * 3) A protocol-relative url match (a URL beginning with '//') whose\n         *    previous character is a word character (effectively skipping over\n         *    strings like \"abc//google.com\")\n         *\n         * Otherwise, returns `true`.\n         *\n         * @param {String} urlMatch The matched URL, if there was one. Will be an\n         *   empty string if the match is not a URL match.\n         * @param {String} protocolUrlMatch The match URL string for a protocol\n         *   match. Ex: 'http-colon-slashslash yahoo.com'. This is used to match something like\n         *   'http-colon-slashslash localhost', where we won't double check that the domain name\n         *   has at least one '.' in it.\n         * @return {Boolean} `true` if the match given is valid and should be\n         *   processed, or `false` if the match is invalid and/or should just not be\n         *   processed.\n         */\n        UrlMatchValidator.isValid = function (urlMatch, protocolUrlMatch) {\n            if ((protocolUrlMatch && !this.isValidUriScheme(protocolUrlMatch)) ||\n                this.urlMatchDoesNotHaveProtocolOrDot(urlMatch, protocolUrlMatch) || // At least one period ('.') must exist in the URL match for us to consider it an actual URL, *unless* it was a full protocol match (like 'http://localhost')\n                (this.urlMatchDoesNotHaveAtLeastOneWordChar(urlMatch, protocolUrlMatch) && // At least one letter character must exist in the domain name after a protocol match. Ex: skip over something like \"git:1.0\"\n                    !this.isValidIpAddress(urlMatch)) || // Except if it's an IP address\n                this.containsMultipleDots(urlMatch)) {\n                return false;\n            }\n            return true;\n        };\n        UrlMatchValidator.isValidIpAddress = function (uriSchemeMatch) {\n            var newRegex = new RegExp(this.hasFullProtocolRegex.source + this.ipRegex.source);\n            var uriScheme = uriSchemeMatch.match(newRegex);\n            return uriScheme !== null;\n        };\n        UrlMatchValidator.containsMultipleDots = function (urlMatch) {\n            var stringBeforeSlash = urlMatch;\n            if (this.hasFullProtocolRegex.test(urlMatch)) {\n                stringBeforeSlash = urlMatch.split('://')[1];\n            }\n            return stringBeforeSlash.split('/')[0].indexOf(\"..\") > -1;\n        };\n        /**\n         * Determines if the URI scheme is a valid scheme to be autolinked. Returns\n         * `false` if the scheme is 'javascript:' or 'vbscript:'\n         *\n         * @private\n         * @param {String} uriSchemeMatch The match URL string for a full URI scheme\n         *   match. Ex: 'http-colon-slashslash yahoo.com' or 'mailto:a@a.com'.\n         * @return {Boolean} `true` if the scheme is a valid one, `false` otherwise.\n         */\n        UrlMatchValidator.isValidUriScheme = function (uriSchemeMatch) {\n            var uriSchemeMatchArr = uriSchemeMatch.match(this.uriSchemeRegex), uriScheme = uriSchemeMatchArr && uriSchemeMatchArr[0].toLowerCase();\n            return (uriScheme !== 'javascript:' && uriScheme !== 'vbscript:');\n        };\n        /**\n         * Determines if a URL match does not have either:\n         *\n         * a) a full protocol (i.e. 'http-colon-slashslash '), or\n         * b) at least one dot ('.') in the domain name (for a non-full-protocol\n         *    match).\n         *\n         * Either situation is considered an invalid URL (ex: 'git:d' does not have\n         * either the '://' part, or at least one dot in the domain name. If the\n         * match was 'git:abc.com', we would consider this valid.)\n         *\n         * @private\n         * @param {String} urlMatch The matched URL, if there was one. Will be an\n         *   empty string if the match is not a URL match.\n         * @param {String} protocolUrlMatch The match URL string for a protocol\n         *   match. Ex: 'http-colon-slashslash yahoo.com'. This is used to match something like\n         *   'http-colon-slashslash localhost', where we won't double check that the domain name\n         *   has at least one '.' in it.\n         * @return {Boolean} `true` if the URL match does not have a full protocol,\n         *   or at least one dot ('.') in a non-full-protocol match.\n         */\n        UrlMatchValidator.urlMatchDoesNotHaveProtocolOrDot = function (urlMatch, protocolUrlMatch) {\n            return (!!urlMatch && (!protocolUrlMatch || !this.hasFullProtocolRegex.test(protocolUrlMatch)) && urlMatch.indexOf('.') === -1);\n        };\n        /**\n         * Determines if a URL match does not have at least one word character after\n         * the protocol (i.e. in the domain name).\n         *\n         * At least one letter character must exist in the domain name after a\n         * protocol match. Ex: skip over something like \"git:1.0\"\n         *\n         * @private\n         * @param {String} urlMatch The matched URL, if there was one. Will be an\n         *   empty string if the match is not a URL match.\n         * @param {String} protocolUrlMatch The match URL string for a protocol\n         *   match. Ex: 'http-colon-slashslash yahoo.com'. This is used to know whether or not we\n         *   have a protocol in the URL string, in order to check for a word\n         *   character after the protocol separator (':').\n         * @return {Boolean} `true` if the URL match does not have at least one word\n         *   character in it after the protocol, `false` otherwise.\n         */\n        UrlMatchValidator.urlMatchDoesNotHaveAtLeastOneWordChar = function (urlMatch, protocolUrlMatch) {\n            if (urlMatch && protocolUrlMatch) {\n                return !this.hasWordCharAfterProtocolRegex.test(urlMatch);\n            }\n            else {\n                return false;\n            }\n        };\n        /**\n         * Regex to test for a full protocol, with the two trailing slashes. Ex: 'http-colon-slashslash '\n         *\n         * @private\n         * @property {RegExp} hasFullProtocolRegex\n         */\n        UrlMatchValidator.hasFullProtocolRegex = /^[A-Za-z][-.+A-Za-z0-9]*:\\/\\//;\n        /**\n         * Regex to find the URI scheme, such as 'mailto:'.\n         *\n         * This is used to filter out 'javascript:' and 'vbscript:' schemes.\n         *\n         * @private\n         * @property {RegExp} uriSchemeRegex\n         */\n        UrlMatchValidator.uriSchemeRegex = /^[A-Za-z][-.+A-Za-z0-9]*:/;\n        /**\n         * Regex to determine if at least one word char exists after the protocol (i.e. after the ':')\n         *\n         * @private\n         * @property {RegExp} hasWordCharAfterProtocolRegex\n         */\n        UrlMatchValidator.hasWordCharAfterProtocolRegex = new RegExp(\":[^\\\\s]*?[\" + alphaCharsStr + \"]\");\n        /**\n         * Regex to determine if the string is a valid IP address\n         *\n         * @private\n         * @property {RegExp} ipRegex\n         */\n        UrlMatchValidator.ipRegex = /[0-9][0-9]?[0-9]?\\.[0-9][0-9]?[0-9]?\\.[0-9][0-9]?[0-9]?\\.[0-9][0-9]?[0-9]?(:[0-9]*)?\\/?$/;\n        return UrlMatchValidator;\n    }());\n\n    /**\n     * @class Autolinker.matcher.Url\n     * @extends Autolinker.matcher.Matcher\n     *\n     * Matcher to find URL matches in an input string.\n     *\n     * See this class's superclass ({@link Autolinker.matcher.Matcher}) for more details.\n     */\n    var UrlMatcher = /** @class */ (function (_super) {\n        __extends(UrlMatcher, _super);\n        /**\n         * @method constructor\n         * @param {Object} cfg The configuration properties for the Match instance,\n         *   specified in an Object (map).\n         */\n        function UrlMatcher(cfg) {\n            var _this = _super.call(this, cfg) || this;\n            /**\n             * @cfg {Object} stripPrefix (required)\n             *\n             * The Object form of {@link Autolinker#cfg-stripPrefix}.\n             */\n            _this.stripPrefix = { scheme: true, www: true }; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {Boolean} stripTrailingSlash (required)\n             * @inheritdoc Autolinker#stripTrailingSlash\n             */\n            _this.stripTrailingSlash = true; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {Boolean} decodePercentEncoding (required)\n             * @inheritdoc Autolinker#decodePercentEncoding\n             */\n            _this.decodePercentEncoding = true; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @protected\n             * @property {RegExp} matcherRegex\n             *\n             * The regular expression to match URLs with an optional scheme, port\n             * number, path, query string, and hash anchor.\n             *\n             * Example matches:\n             *\n             *     http-colon-slashslash google.com\n             *     www.google.com\n             *     google.com/path/to/file?q1=1&q2=2#myAnchor\n             *\n             *\n             * This regular expression will have the following capturing groups:\n             *\n             * 1.  Group that matches a scheme-prefixed URL (i.e. 'http-colon-slashslash google.com').\n             *     This is used to match scheme URLs with just a single word, such as\n             *     'http-colon-slashslash localhost', where we won't double check that the domain name\n             *     has at least one dot ('.') in it.\n             * 2.  Group that matches a 'www.' prefixed URL. This is only matched if the\n             *     'www.' text was not prefixed by a scheme (i.e.: not prefixed by\n             *     'http-colon-slashslash ', 'ftp:', etc.)\n             * 3.  A protocol-relative ('//') match for the case of a 'www.' prefixed\n             *     URL. Will be an empty string if it is not a protocol-relative match.\n             *     We need to know the character before the '//' in order to determine\n             *     if it is a valid match or the // was in a string we don't want to\n             *     auto-link.\n             * 4.  Group that matches a known TLD (top level domain), when a scheme\n             *     or 'www.'-prefixed domain is not matched.\n             * 5.  A protocol-relative ('//') match for the case of a known TLD prefixed\n             *     URL. Will be an empty string if it is not a protocol-relative match.\n             *     See #3 for more info.\n             */\n            _this.matcherRegex = (function () {\n                var schemeRegex = /(?:[A-Za-z][-.+A-Za-z0-9]{0,63}:(?![A-Za-z][-.+A-Za-z0-9]{0,63}:\\/\\/)(?!\\d+\\/?)(?:\\/\\/)?)/, // match protocol, allow in format \"http://\" or \"mailto:\". However, do not match the first part of something like 'link:http://www.google.com' (i.e. don't match \"link:\"). Also, make sure we don't interpret 'google.com:8000' as if 'google.com' was a protocol here (i.e. ignore a trailing port number in this regex)\n                wwwRegex = /(?:www\\.)/, // starting with 'www.'\n                // Allow optional path, query string, and hash anchor, not ending in the following characters: \"?!:,.;\"\n                // http://blog.codinghorror.com/the-problem-with-urls/\n                urlSuffixRegex = new RegExp('[/?#](?:[' + alphaNumericAndMarksCharsStr + '\\\\-+&@#/%=~_()|\\'$*\\\\[\\\\]?!:,.;\\u2713]*[' + alphaNumericAndMarksCharsStr + '\\\\-+&@#/%=~_()|\\'$*\\\\[\\\\]\\u2713])?');\n                return new RegExp([\n                    '(?:',\n                    '(',\n                    schemeRegex.source,\n                    getDomainNameStr(2),\n                    ')',\n                    '|',\n                    '(',\n                    '(//)?',\n                    wwwRegex.source,\n                    getDomainNameStr(6),\n                    ')',\n                    '|',\n                    '(',\n                    '(//)?',\n                    getDomainNameStr(10) + '\\\\.',\n                    tldRegex.source,\n                    '(?![-' + alphaNumericCharsStr + '])',\n                    ')',\n                    ')',\n                    '(?::[0-9]+)?',\n                    '(?:' + urlSuffixRegex.source + ')?' // match for path, query string, and/or hash anchor - optional\n                ].join(\"\"), 'gi');\n            })();\n            /**\n             * A regular expression to use to check the character before a protocol-relative\n             * URL match. We don't want to match a protocol-relative URL if it is part\n             * of another word.\n             *\n             * For example, we want to match something like \"Go to: //google.com\",\n             * but we don't want to match something like \"abc//google.com\"\n             *\n             * This regular expression is used to test the character before the '//'.\n             *\n             * @protected\n             * @type {RegExp} wordCharRegExp\n             */\n            _this.wordCharRegExp = new RegExp('[' + alphaNumericAndMarksCharsStr + ']');\n            _this.stripPrefix = cfg.stripPrefix;\n            _this.stripTrailingSlash = cfg.stripTrailingSlash;\n            _this.decodePercentEncoding = cfg.decodePercentEncoding;\n            return _this;\n        }\n        /**\n         * @inheritdoc\n         */\n        UrlMatcher.prototype.parseMatches = function (text) {\n            var matcherRegex = this.matcherRegex, stripPrefix = this.stripPrefix, stripTrailingSlash = this.stripTrailingSlash, decodePercentEncoding = this.decodePercentEncoding, tagBuilder = this.tagBuilder, matches = [], match;\n            var _loop_1 = function () {\n                var matchStr = match[0], schemeUrlMatch = match[1], wwwUrlMatch = match[4], wwwProtocolRelativeMatch = match[5],\n                //tldUrlMatch = match[ 8 ],  -- not needed at the moment\n                tldProtocolRelativeMatch = match[9], offset = match.index, protocolRelativeMatch = wwwProtocolRelativeMatch || tldProtocolRelativeMatch, prevChar = text.charAt(offset - 1);\n                if (!UrlMatchValidator.isValid(matchStr, schemeUrlMatch)) {\n                    return \"continue\";\n                }\n                // If the match is preceded by an '@' character, then it is either\n                // an email address or a username. Skip these types of matches.\n                if (offset > 0 && prevChar === '@') {\n                    return \"continue\";\n                }\n                // If it's a protocol-relative '//' match, but the character before the '//'\n                // was a word character (i.e. a letter/number), then we found the '//' in the\n                // middle of another word (such as \"asdf//asdf.com\"). In this case, skip the\n                // match.\n                if (offset > 0 && protocolRelativeMatch && this_1.wordCharRegExp.test(prevChar)) {\n                    return \"continue\";\n                }\n                // If the URL ends with a question mark, don't include the question\n                // mark as part of the URL. We'll assume the question mark was the\n                // end of a sentence, such as: \"Going to google.com?\"\n                if (/\\?$/.test(matchStr)) {\n                    matchStr = matchStr.substr(0, matchStr.length - 1);\n                }\n                // Handle a closing parenthesis or square bracket at the end of the\n                // match, and exclude it if there is not a matching open parenthesis\n                // or square bracket in the match itself.\n                if (this_1.matchHasUnbalancedClosingParen(matchStr)) {\n                    matchStr = matchStr.substr(0, matchStr.length - 1); // remove the trailing \")\"\n                }\n                else {\n                    // Handle an invalid character after the TLD\n                    var pos = this_1.matchHasInvalidCharAfterTld(matchStr, schemeUrlMatch);\n                    if (pos > -1) {\n                        matchStr = matchStr.substr(0, pos); // remove the trailing invalid chars\n                    }\n                }\n                // The autolinker accepts many characters in a url's scheme (like `fake://test.com`).\n                // However, in cases where a URL is missing whitespace before an obvious link,\n                // (for example: `nowhitespacehttp://www.test.com`), we only want the match to start\n                // at the http:// part. We will check if the match contains a common scheme and then\n                // shift the match to start from there.\n                var foundCommonScheme = ['http://', 'https://'].find(function (commonScheme) { return !!schemeUrlMatch && schemeUrlMatch.indexOf(commonScheme) !== -1; });\n                if (foundCommonScheme) {\n                    // If we found an overmatched URL, we want to find the index\n                    // of where the match should start and shift the match to\n                    // start from the beginning of the common scheme\n                    var indexOfSchemeStart = matchStr.indexOf(foundCommonScheme);\n                    matchStr = matchStr.substr(indexOfSchemeStart);\n                    schemeUrlMatch = schemeUrlMatch.substr(indexOfSchemeStart);\n                    offset = offset + indexOfSchemeStart;\n                }\n                var urlMatchType = schemeUrlMatch ? 'scheme' : (wwwUrlMatch ? 'www' : 'tld'), protocolUrlMatch = !!schemeUrlMatch;\n                matches.push(new UrlMatch({\n                    tagBuilder: tagBuilder,\n                    matchedText: matchStr,\n                    offset: offset,\n                    urlMatchType: urlMatchType,\n                    url: matchStr,\n                    protocolUrlMatch: protocolUrlMatch,\n                    protocolRelativeMatch: !!protocolRelativeMatch,\n                    stripPrefix: stripPrefix,\n                    stripTrailingSlash: stripTrailingSlash,\n                    decodePercentEncoding: decodePercentEncoding,\n                }));\n            };\n            var this_1 = this;\n            while ((match = matcherRegex.exec(text)) !== null) {\n                _loop_1();\n            }\n            return matches;\n        };\n        /**\n         * Determines if a match found has an unmatched closing parenthesis or\n         * square bracket. If so, the parenthesis or square bracket will be removed\n         * from the match itself, and appended after the generated anchor tag.\n         *\n         * A match may have an extra closing parenthesis at the end of the match\n         * because the regular expression must include parenthesis for URLs such as\n         * \"wikipedia.com/something_(disambiguation)\", which should be auto-linked.\n         *\n         * However, an extra parenthesis *will* be included when the URL itself is\n         * wrapped in parenthesis, such as in the case of:\n         *     \"(wikipedia.com/something_(disambiguation))\"\n         * In this case, the last closing parenthesis should *not* be part of the\n         * URL itself, and this method will return `true`.\n         *\n         * For square brackets in URLs such as in PHP arrays, the same behavior as\n         * parenthesis discussed above should happen:\n         *     \"[http-colon-slashslash www.example.com/foo.php?bar[]=1&bar[]=2&bar[]=3]\"\n         * The closing square bracket should not be part of the URL itself, and this\n         * method will return `true`.\n         *\n         * @protected\n         * @param {String} matchStr The full match string from the {@link #matcherRegex}.\n         * @return {Boolean} `true` if there is an unbalanced closing parenthesis or\n         *   square bracket at the end of the `matchStr`, `false` otherwise.\n         */\n        UrlMatcher.prototype.matchHasUnbalancedClosingParen = function (matchStr) {\n            var endChar = matchStr.charAt(matchStr.length - 1);\n            var startChar;\n            if (endChar === ')') {\n                startChar = '(';\n            }\n            else if (endChar === ']') {\n                startChar = '[';\n            }\n            else {\n                return false; // not a close parenthesis or square bracket\n            }\n            // Find if there are the same number of open braces as close braces in\n            // the URL string, minus the last character (which we have already\n            // determined to be either ')' or ']'\n            var numOpenBraces = 0;\n            for (var i = 0, len = matchStr.length - 1; i < len; i++) {\n                var char = matchStr.charAt(i);\n                if (char === startChar) {\n                    numOpenBraces++;\n                }\n                else if (char === endChar) {\n                    numOpenBraces = Math.max(numOpenBraces - 1, 0);\n                }\n            }\n            // If the number of open braces matches the number of close braces in\n            // the URL minus the last character, then the match has *unbalanced*\n            // braces because of the last character. Example of unbalanced braces\n            // from the regex match:\n            //     \"http://example.com?a[]=1]\"\n            if (numOpenBraces === 0) {\n                return true;\n            }\n            return false;\n        };\n        /**\n         * Determine if there's an invalid character after the TLD in a URL. Valid\n         * characters after TLD are ':/?#'. Exclude scheme matched URLs from this\n         * check.\n         *\n         * @protected\n         * @param {String} urlMatch The matched URL, if there was one. Will be an\n         *   empty string if the match is not a URL match.\n         * @param {String} schemeUrlMatch The match URL string for a scheme\n         *   match. Ex: 'http-colon-slashslash yahoo.com'. This is used to match something like\n         *   'http-colon-slashslash localhost', where we won't double check that the domain name\n         *   has at least one '.' in it.\n         * @return {Number} the position where the invalid character was found. If\n         *   no such character was found, returns -1\n         */\n        UrlMatcher.prototype.matchHasInvalidCharAfterTld = function (urlMatch, schemeUrlMatch) {\n            if (!urlMatch) {\n                return -1;\n            }\n            var offset = 0;\n            if (schemeUrlMatch) {\n                offset = urlMatch.indexOf(':');\n                urlMatch = urlMatch.slice(offset);\n            }\n            var re = new RegExp(\"^((.?\\/\\/)?[-.\" + alphaNumericAndMarksCharsStr + \"]*[-\" + alphaNumericAndMarksCharsStr + \"]\\\\.[-\" + alphaNumericAndMarksCharsStr + \"]+)\");\n            var res = re.exec(urlMatch);\n            if (res === null) {\n                return -1;\n            }\n            offset += res[1].length;\n            urlMatch = urlMatch.slice(res[1].length);\n            if (/^[^-.A-Za-z0-9:\\/?#]/.test(urlMatch)) {\n                return offset;\n            }\n            return -1;\n        };\n        return UrlMatcher;\n    }(Matcher));\n\n    /**\n     * @class Autolinker.matcher.Hashtag\n     * @extends Autolinker.matcher.Matcher\n     *\n     * Matcher to find HashtagMatch matches in an input string.\n     */\n    var HashtagMatcher = /** @class */ (function (_super) {\n        __extends(HashtagMatcher, _super);\n        /**\n         * @method constructor\n         * @param {Object} cfg The configuration properties for the Match instance,\n         *   specified in an Object (map).\n         */\n        function HashtagMatcher(cfg) {\n            var _this = _super.call(this, cfg) || this;\n            /**\n             * @cfg {String} serviceName\n             *\n             * The service to point hashtag matches to. See {@link Autolinker#hashtag}\n             * for available values.\n             */\n            _this.serviceName = 'twitter'; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * The regular expression to match Hashtags. Example match:\n             *\n             *     #asdf\n             *\n             * @protected\n             * @property {RegExp} matcherRegex\n             */\n            _this.matcherRegex = new RegExp(\"#[_\" + alphaNumericAndMarksCharsStr + \"]{1,139}(?![_\" + alphaNumericAndMarksCharsStr + \"])\", 'g'); // lookahead used to make sure we don't match something above 139 characters\n            /**\n             * The regular expression to use to check the character before a username match to\n             * make sure we didn't accidentally match an email address.\n             *\n             * For example, the string \"asdf@asdf.com\" should not match \"@asdf\" as a username.\n             *\n             * @protected\n             * @property {RegExp} nonWordCharRegex\n             */\n            _this.nonWordCharRegex = new RegExp('[^' + alphaNumericAndMarksCharsStr + ']');\n            _this.serviceName = cfg.serviceName;\n            return _this;\n        }\n        /**\n         * @inheritdoc\n         */\n        HashtagMatcher.prototype.parseMatches = function (text) {\n            var matcherRegex = this.matcherRegex, nonWordCharRegex = this.nonWordCharRegex, serviceName = this.serviceName, tagBuilder = this.tagBuilder, matches = [], match;\n            while ((match = matcherRegex.exec(text)) !== null) {\n                var offset = match.index, prevChar = text.charAt(offset - 1);\n                // If we found the match at the beginning of the string, or we found the match\n                // and there is a whitespace char in front of it (meaning it is not a '#' char\n                // in the middle of a word), then it is a hashtag match.\n                if (offset === 0 || nonWordCharRegex.test(prevChar)) {\n                    var matchedText = match[0], hashtag = match[0].slice(1); // strip off the '#' character at the beginning\n                    matches.push(new HashtagMatch({\n                        tagBuilder: tagBuilder,\n                        matchedText: matchedText,\n                        offset: offset,\n                        serviceName: serviceName,\n                        hashtag: hashtag\n                    }));\n                }\n            }\n            return matches;\n        };\n        return HashtagMatcher;\n    }(Matcher));\n\n    /**\n     * @class Autolinker.matcher.Phone\n     * @extends Autolinker.matcher.Matcher\n     *\n     * Matcher to find Phone number matches in an input string.\n     *\n     * See this class's superclass ({@link Autolinker.matcher.Matcher}) for more\n     * details.\n     */\n    var PhoneMatcher = /** @class */ (function (_super) {\n        __extends(PhoneMatcher, _super);\n        function PhoneMatcher() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /**\n             * The regular expression to match Phone numbers. Example match:\n             *\n             *     (123) 456-7890\n             *\n             * This regular expression has the following capturing groups:\n             *\n             * 1 or 2. The prefixed '+' sign, if there is one.\n             *\n             * @protected\n             * @property {RegExp} matcherRegex\n             */\n            _this.matcherRegex = /(?:(?:(?:(\\+)?\\d{1,3}[-\\040.]?)?\\(?\\d{3}\\)?[-\\040.]?\\d{3}[-\\040.]?\\d{4})|(?:(\\+)(?:9[976]\\d|8[987530]\\d|6[987]\\d|5[90]\\d|42\\d|3[875]\\d|2[98654321]\\d|9[8543210]|8[6421]|6[6543210]|5[87654321]|4[987654310]|3[9643210]|2[70]|7|1)[-\\040.]?(?:\\d[-\\040.]?){6,12}\\d+))([,;]+[0-9]+#?)*/g;\n            return _this;\n        }\n        // ex: (123) 456-7890, 123 456 7890, 123-456-7890, +18004441234,,;,10226420346#,\n        // +1 (800) 444 1234, 10226420346#, 1-800-444-1234,1022,64,20346#\n        /**\n         * @inheritdoc\n         */\n        PhoneMatcher.prototype.parseMatches = function (text) {\n            var matcherRegex = this.matcherRegex, tagBuilder = this.tagBuilder, matches = [], match;\n            while ((match = matcherRegex.exec(text)) !== null) {\n                // Remove non-numeric values from phone number string\n                var matchedText = match[0], cleanNumber = matchedText.replace(/[^0-9,;#]/g, ''), // strip out non-digit characters exclude comma semicolon and #\n                plusSign = !!(match[1] || match[2]), // match[ 1 ] or match[ 2 ] is the prefixed plus sign, if there is one\n                before = match.index == 0 ? '' : text.substr(match.index - 1, 1), after = text.substr(match.index + matchedText.length, 1), contextClear = !before.match(/\\d/) && !after.match(/\\d/);\n                if (this.testMatch(match[3]) && this.testMatch(matchedText) && contextClear) {\n                    matches.push(new PhoneMatch({\n                        tagBuilder: tagBuilder,\n                        matchedText: matchedText,\n                        offset: match.index,\n                        number: cleanNumber,\n                        plusSign: plusSign\n                    }));\n                }\n            }\n            return matches;\n        };\n        PhoneMatcher.prototype.testMatch = function (text) {\n            return /\\D/.test(text);\n        };\n        return PhoneMatcher;\n    }(Matcher));\n\n    /**\n     * @class Autolinker.matcher.Mention\n     * @extends Autolinker.matcher.Matcher\n     *\n     * Matcher to find/replace username matches in an input string.\n     */\n    var MentionMatcher = /** @class */ (function (_super) {\n        __extends(MentionMatcher, _super);\n        /**\n         * @method constructor\n         * @param {Object} cfg The configuration properties for the Match instance,\n         *   specified in an Object (map).\n         */\n        function MentionMatcher(cfg) {\n            var _this = _super.call(this, cfg) || this;\n            /**\n             * @cfg {'twitter'/'instagram'/'soundcloud'} protected\n             *\n             * The name of service to link @mentions to.\n             *\n             * Valid values are: 'twitter', 'instagram', or 'soundcloud'\n             */\n            _this.serviceName = 'twitter'; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * Hash of regular expression to match username handles. Example match:\n             *\n             *     @asdf\n             *\n             * @private\n             * @property {Object} matcherRegexes\n             */\n            _this.matcherRegexes = {\n                'twitter': new RegExp(\"@[_\" + alphaNumericAndMarksCharsStr + \"]{1,50}(?![_\" + alphaNumericAndMarksCharsStr + \"])\", 'g'),\n                'instagram': new RegExp(\"@[_.\" + alphaNumericAndMarksCharsStr + \"]{1,30}(?![_\" + alphaNumericAndMarksCharsStr + \"])\", 'g'),\n                'soundcloud': new RegExp(\"@[-_.\" + alphaNumericAndMarksCharsStr + \"]{1,50}(?![-_\" + alphaNumericAndMarksCharsStr + \"])\", 'g') // lookahead used to make sure we don't match something above 50 characters\n            };\n            /**\n             * The regular expression to use to check the character before a username match to\n             * make sure we didn't accidentally match an email address.\n             *\n             * For example, the string \"asdf@asdf.com\" should not match \"@asdf\" as a username.\n             *\n             * @private\n             * @property {RegExp} nonWordCharRegex\n             */\n            _this.nonWordCharRegex = new RegExp('[^' + alphaNumericAndMarksCharsStr + ']');\n            _this.serviceName = cfg.serviceName;\n            return _this;\n        }\n        /**\n         * @inheritdoc\n         */\n        MentionMatcher.prototype.parseMatches = function (text) {\n            var serviceName = this.serviceName, matcherRegex = this.matcherRegexes[this.serviceName], nonWordCharRegex = this.nonWordCharRegex, tagBuilder = this.tagBuilder, matches = [], match;\n            if (!matcherRegex) {\n                return matches;\n            }\n            while ((match = matcherRegex.exec(text)) !== null) {\n                var offset = match.index, prevChar = text.charAt(offset - 1);\n                // If we found the match at the beginning of the string, or we found the match\n                // and there is a whitespace char in front of it (meaning it is not an email\n                // address), then it is a username match.\n                if (offset === 0 || nonWordCharRegex.test(prevChar)) {\n                    var matchedText = match[0].replace(/\\.+$/g, ''), // strip off trailing .\n                    mention = matchedText.slice(1); // strip off the '@' character at the beginning\n                    matches.push(new MentionMatch({\n                        tagBuilder: tagBuilder,\n                        matchedText: matchedText,\n                        offset: offset,\n                        serviceName: serviceName,\n                        mention: mention\n                    }));\n                }\n            }\n            return matches;\n        };\n        return MentionMatcher;\n    }(Matcher));\n\n    // For debugging: search for other \"For debugging\" lines\n    // import CliTable from 'cli-table';\n    /**\n     * Parses an HTML string, calling the callbacks to notify of tags and text.\n     *\n     * ## History\n     *\n     * This file previously used a regular expression to find html tags in the input\n     * text. Unfortunately, we ran into a bunch of catastrophic backtracking issues\n     * with certain input text, causing Autolinker to either hang or just take a\n     * really long time to parse the string.\n     *\n     * The current code is intended to be a O(n) algorithm that walks through\n     * the string in one pass, and tries to be as cheap as possible. We don't need\n     * to implement the full HTML spec, but rather simply determine where the string\n     * looks like an HTML tag, and where it looks like text (so that we can autolink\n     * that).\n     *\n     * This state machine parser is intended just to be a simple but performant\n     * parser of HTML for the subset of requirements we have. We simply need to:\n     *\n     * 1. Determine where HTML tags are\n     * 2. Determine the tag name (Autolinker specifically only cares about <a>,\n     *    <script>, and <style> tags, so as not to link any text within them)\n     *\n     * We don't need to:\n     *\n     * 1. Create a parse tree\n     * 2. Auto-close tags with invalid markup\n     * 3. etc.\n     *\n     * The other intention behind this is that we didn't want to add external\n     * dependencies on the Autolinker utility which would increase its size. For\n     * instance, adding htmlparser2 adds 125kb to the minified output file,\n     * increasing its final size from 47kb to 172kb (at the time of writing). It\n     * also doesn't work exactly correctly, treating the string \"<3 blah blah blah\"\n     * as an HTML tag.\n     *\n     * Reference for HTML spec:\n     *\n     *     https-colon-slashslash www.w3.org/TR/html51/syntax.html#sec-tokenization\n     *\n     * @param {String} html The HTML to parse\n     * @param {Object} callbacks\n     * @param {Function} callbacks.onOpenTag Callback function to call when an open\n     *   tag is parsed. Called with the tagName as its argument.\n     * @param {Function} callbacks.onCloseTag Callback function to call when a close\n     *   tag is parsed. Called with the tagName as its argument. If a self-closing\n     *   tag is found, `onCloseTag` is called immediately after `onOpenTag`.\n     * @param {Function} callbacks.onText Callback function to call when text (i.e\n     *   not an HTML tag) is parsed. Called with the text (string) as its first\n     *   argument, and offset (number) into the string as its second.\n     */\n    function parseHtml(html, _a) {\n        var onOpenTag = _a.onOpenTag, onCloseTag = _a.onCloseTag, onText = _a.onText, onComment = _a.onComment, onDoctype = _a.onDoctype;\n        var noCurrentTag = new CurrentTag();\n        var charIdx = 0, len = html.length, state = 0 /* Data */, currentDataIdx = 0, // where the current data start index is\n        currentTag = noCurrentTag; // describes the current tag that is being read\n        // For debugging: search for other \"For debugging\" lines\n        // const table = new CliTable( {\n        // \thead: [ 'charIdx', 'char', 'state', 'currentDataIdx', 'currentOpenTagIdx', 'tag.type' ]\n        // } );\n        while (charIdx < len) {\n            var char = html.charAt(charIdx);\n            // For debugging: search for other \"For debugging\" lines\n            // ALSO: Temporarily remove the 'const' keyword on the State enum\n            // table.push(\n            // \t[ charIdx, char, State[ state ], currentDataIdx, currentTag.idx, currentTag.idx === -1 ? '' : currentTag.type ]\n            // );\n            switch (state) {\n                case 0 /* Data */:\n                    stateData(char);\n                    break;\n                case 1 /* TagOpen */:\n                    stateTagOpen(char);\n                    break;\n                case 2 /* EndTagOpen */:\n                    stateEndTagOpen(char);\n                    break;\n                case 3 /* TagName */:\n                    stateTagName(char);\n                    break;\n                case 4 /* BeforeAttributeName */:\n                    stateBeforeAttributeName(char);\n                    break;\n                case 5 /* AttributeName */:\n                    stateAttributeName(char);\n                    break;\n                case 6 /* AfterAttributeName */:\n                    stateAfterAttributeName(char);\n                    break;\n                case 7 /* BeforeAttributeValue */:\n                    stateBeforeAttributeValue(char);\n                    break;\n                case 8 /* AttributeValueDoubleQuoted */:\n                    stateAttributeValueDoubleQuoted(char);\n                    break;\n                case 9 /* AttributeValueSingleQuoted */:\n                    stateAttributeValueSingleQuoted(char);\n                    break;\n                case 10 /* AttributeValueUnquoted */:\n                    stateAttributeValueUnquoted(char);\n                    break;\n                case 11 /* AfterAttributeValueQuoted */:\n                    stateAfterAttributeValueQuoted(char);\n                    break;\n                case 12 /* SelfClosingStartTag */:\n                    stateSelfClosingStartTag(char);\n                    break;\n                case 13 /* MarkupDeclarationOpenState */:\n                    stateMarkupDeclarationOpen(char);\n                    break;\n                case 14 /* CommentStart */:\n                    stateCommentStart(char);\n                    break;\n                case 15 /* CommentStartDash */:\n                    stateCommentStartDash(char);\n                    break;\n                case 16 /* Comment */:\n                    stateComment(char);\n                    break;\n                case 17 /* CommentEndDash */:\n                    stateCommentEndDash(char);\n                    break;\n                case 18 /* CommentEnd */:\n                    stateCommentEnd(char);\n                    break;\n                case 19 /* CommentEndBang */:\n                    stateCommentEndBang(char);\n                    break;\n                case 20 /* Doctype */:\n                    stateDoctype(char);\n                    break;\n                default:\n                    throwUnhandledCaseError(state);\n            }\n            // For debugging: search for other \"For debugging\" lines\n            // ALSO: Temporarily remove the 'const' keyword on the State enum\n            // table.push(\n            // \t[ charIdx, char, State[ state ], currentDataIdx, currentTag.idx, currentTag.idx === -1 ? '' : currentTag.type ]\n            // );\n            charIdx++;\n        }\n        if (currentDataIdx < charIdx) {\n            emitText();\n        }\n        // For debugging: search for other \"For debugging\" lines\n        // console.log( '\\n' + table.toString() );\n        // Called when non-tags are being read (i.e. the text around HTML †ags)\n        // https://www.w3.org/TR/html51/syntax.html#data-state\n        function stateData(char) {\n            if (char === '<') {\n                startNewTag();\n            }\n        }\n        // Called after a '<' is read from the Data state\n        // https://www.w3.org/TR/html51/syntax.html#tag-open-state\n        function stateTagOpen(char) {\n            if (char === '!') {\n                state = 13 /* MarkupDeclarationOpenState */;\n            }\n            else if (char === '/') {\n                state = 2 /* EndTagOpen */;\n                currentTag = new CurrentTag(__assign({}, currentTag, { isClosing: true }));\n            }\n            else if (char === '<') {\n                // start of another tag (ignore the previous, incomplete one)\n                startNewTag();\n            }\n            else if (letterRe.test(char)) {\n                // tag name start (and no '/' read)\n                state = 3 /* TagName */;\n                currentTag = new CurrentTag(__assign({}, currentTag, { isOpening: true }));\n            }\n            else {\n                // Any other\n                state = 0 /* Data */;\n                currentTag = noCurrentTag;\n            }\n        }\n        // After a '<x', '</x' sequence is read (where 'x' is a letter character),\n        // this is to continue reading the tag name\n        // https://www.w3.org/TR/html51/syntax.html#tag-name-state\n        function stateTagName(char) {\n            if (whitespaceRe.test(char)) {\n                currentTag = new CurrentTag(__assign({}, currentTag, { name: captureTagName() }));\n                state = 4 /* BeforeAttributeName */;\n            }\n            else if (char === '<') {\n                // start of another tag (ignore the previous, incomplete one)\n                startNewTag();\n            }\n            else if (char === '/') {\n                currentTag = new CurrentTag(__assign({}, currentTag, { name: captureTagName() }));\n                state = 12 /* SelfClosingStartTag */;\n            }\n            else if (char === '>') {\n                currentTag = new CurrentTag(__assign({}, currentTag, { name: captureTagName() }));\n                emitTagAndPreviousTextNode(); // resets to Data state as well\n            }\n            else if (!letterRe.test(char) && !digitRe.test(char) && char !== ':') {\n                // Anything else that does not form an html tag. Note: the colon\n                // character is accepted for XML namespaced tags\n                resetToDataState();\n            }\n        }\n        // Called after the '/' is read from a '</' sequence\n        // https://www.w3.org/TR/html51/syntax.html#end-tag-open-state\n        function stateEndTagOpen(char) {\n            if (char === '>') { // parse error. Encountered \"</>\". Skip it without treating as a tag\n                resetToDataState();\n            }\n            else if (letterRe.test(char)) {\n                state = 3 /* TagName */;\n            }\n            else {\n                // some other non-tag-like character, don't treat this as a tag\n                resetToDataState();\n            }\n        }\n        // https://www.w3.org/TR/html51/syntax.html#before-attribute-name-state\n        function stateBeforeAttributeName(char) {\n            if (whitespaceRe.test(char)) ;\n            else if (char === '/') {\n                state = 12 /* SelfClosingStartTag */;\n            }\n            else if (char === '>') {\n                emitTagAndPreviousTextNode(); // resets to Data state as well\n            }\n            else if (char === '<') {\n                // start of another tag (ignore the previous, incomplete one)\n                startNewTag();\n            }\n            else if (char === \"=\" || quoteRe.test(char) || controlCharsRe.test(char)) {\n                // \"Parse error\" characters that, according to the spec, should be\n                // appended to the attribute name, but we'll treat these characters\n                // as not forming a real HTML tag\n                resetToDataState();\n            }\n            else {\n                // Any other char, start of a new attribute name\n                state = 5 /* AttributeName */;\n            }\n        }\n        // https://www.w3.org/TR/html51/syntax.html#attribute-name-state\n        function stateAttributeName(char) {\n            if (whitespaceRe.test(char)) {\n                state = 6 /* AfterAttributeName */;\n            }\n            else if (char === '/') {\n                state = 12 /* SelfClosingStartTag */;\n            }\n            else if (char === '=') {\n                state = 7 /* BeforeAttributeValue */;\n            }\n            else if (char === '>') {\n                emitTagAndPreviousTextNode(); // resets to Data state as well\n            }\n            else if (char === '<') {\n                // start of another tag (ignore the previous, incomplete one)\n                startNewTag();\n            }\n            else if (quoteRe.test(char)) {\n                // \"Parse error\" characters that, according to the spec, should be\n                // appended to the attribute name, but we'll treat these characters\n                // as not forming a real HTML tag\n                resetToDataState();\n            }\n        }\n        // https://www.w3.org/TR/html51/syntax.html#after-attribute-name-state\n        function stateAfterAttributeName(char) {\n            if (whitespaceRe.test(char)) ;\n            else if (char === '/') {\n                state = 12 /* SelfClosingStartTag */;\n            }\n            else if (char === '=') {\n                state = 7 /* BeforeAttributeValue */;\n            }\n            else if (char === '>') {\n                emitTagAndPreviousTextNode();\n            }\n            else if (char === '<') {\n                // start of another tag (ignore the previous, incomplete one)\n                startNewTag();\n            }\n            else if (quoteRe.test(char)) {\n                // \"Parse error\" characters that, according to the spec, should be\n                // appended to the attribute name, but we'll treat these characters\n                // as not forming a real HTML tag\n                resetToDataState();\n            }\n            else {\n                // Any other character, start a new attribute in the current tag\n                state = 5 /* AttributeName */;\n            }\n        }\n        // https://www.w3.org/TR/html51/syntax.html#before-attribute-value-state\n        function stateBeforeAttributeValue(char) {\n            if (whitespaceRe.test(char)) ;\n            else if (char === \"\\\"\") {\n                state = 8 /* AttributeValueDoubleQuoted */;\n            }\n            else if (char === \"'\") {\n                state = 9 /* AttributeValueSingleQuoted */;\n            }\n            else if (/[>=`]/.test(char)) {\n                // Invalid chars after an '=' for an attribute value, don't count\n                // the current tag as an HTML tag\n                resetToDataState();\n            }\n            else if (char === '<') {\n                // start of another tag (ignore the previous, incomplete one)\n                startNewTag();\n            }\n            else {\n                // Any other character, consider it an unquoted attribute value\n                state = 10 /* AttributeValueUnquoted */;\n            }\n        }\n        // https://www.w3.org/TR/html51/syntax.html#attribute-value-double-quoted-state\n        function stateAttributeValueDoubleQuoted(char) {\n            if (char === \"\\\"\") { // end the current double-quoted attribute\n                state = 11 /* AfterAttributeValueQuoted */;\n            }\n        }\n        // https://www.w3.org/TR/html51/syntax.html#attribute-value-single-quoted-state\n        function stateAttributeValueSingleQuoted(char) {\n            if (char === \"'\") { // end the current single-quoted attribute\n                state = 11 /* AfterAttributeValueQuoted */;\n            }\n        }\n        // https://www.w3.org/TR/html51/syntax.html#attribute-value-unquoted-state\n        function stateAttributeValueUnquoted(char) {\n            if (whitespaceRe.test(char)) {\n                state = 4 /* BeforeAttributeName */;\n            }\n            else if (char === '>') {\n                emitTagAndPreviousTextNode();\n            }\n            else if (char === '<') {\n                // start of another tag (ignore the previous, incomplete one)\n                startNewTag();\n            }\n        }\n        // https://www.w3.org/TR/html51/syntax.html#after-attribute-value-quoted-state\n        function stateAfterAttributeValueQuoted(char) {\n            if (whitespaceRe.test(char)) {\n                state = 4 /* BeforeAttributeName */;\n            }\n            else if (char === '/') {\n                state = 12 /* SelfClosingStartTag */;\n            }\n            else if (char === '>') {\n                emitTagAndPreviousTextNode();\n            }\n            else if (char === '<') {\n                // start of another tag (ignore the previous, incomplete one)\n                startNewTag();\n            }\n            else {\n                // Any other character, \"parse error\". Spec says to switch to the\n                // BeforeAttributeState and re-consume the character, as it may be\n                // the start of a new attribute name\n                state = 4 /* BeforeAttributeName */;\n                reconsumeCurrentCharacter();\n            }\n        }\n        // A '/' has just been read in the current tag (presumably for '/>'), and\n        // this handles the next character\n        // https://www.w3.org/TR/html51/syntax.html#self-closing-start-tag-state\n        function stateSelfClosingStartTag(char) {\n            if (char === '>') {\n                currentTag = new CurrentTag(__assign({}, currentTag, { isClosing: true }));\n                emitTagAndPreviousTextNode(); // resets to Data state as well\n            }\n            else {\n                state = 4 /* BeforeAttributeName */;\n            }\n        }\n        // https://www.w3.org/TR/html51/syntax.html#markup-declaration-open-state\n        // (HTML Comments or !DOCTYPE)\n        function stateMarkupDeclarationOpen(char) {\n            if (html.substr(charIdx, 2) === '--') { // html comment\n                charIdx += 2; // \"consume\" characters\n                currentTag = new CurrentTag(__assign({}, currentTag, { type: 'comment' }));\n                state = 14 /* CommentStart */;\n            }\n            else if (html.substr(charIdx, 7).toUpperCase() === 'DOCTYPE') {\n                charIdx += 7; // \"consume\" characters\n                currentTag = new CurrentTag(__assign({}, currentTag, { type: 'doctype' }));\n                state = 20 /* Doctype */;\n            }\n            else {\n                // At this point, the spec specifies that the state machine should\n                // enter the \"bogus comment\" state, in which case any character(s)\n                // after the '<!' that were read should become an HTML comment up\n                // until the first '>' that is read (or EOF). Instead, we'll assume\n                // that a user just typed '<!' as part of text data\n                resetToDataState();\n            }\n        }\n        // Handles after the sequence '<!--' has been read\n        // https://www.w3.org/TR/html51/syntax.html#comment-start-state\n        function stateCommentStart(char) {\n            if (char === '-') {\n                // We've read the sequence '<!---' at this point (3 dashes)\n                state = 15 /* CommentStartDash */;\n            }\n            else if (char === '>') {\n                // At this point, we'll assume the comment wasn't a real comment\n                // so we'll just emit it as data. We basically read the sequence\n                // '<!-->'\n                resetToDataState();\n            }\n            else {\n                // Any other char, take it as part of the comment\n                state = 16 /* Comment */;\n            }\n        }\n        // We've read the sequence '<!---' at this point (3 dashes)\n        // https://www.w3.org/TR/html51/syntax.html#comment-start-dash-state\n        function stateCommentStartDash(char) {\n            if (char === '-') {\n                // We've read '<!----' (4 dashes) at this point\n                state = 18 /* CommentEnd */;\n            }\n            else if (char === '>') {\n                // At this point, we'll assume the comment wasn't a real comment\n                // so we'll just emit it as data. We basically read the sequence\n                // '<!--->'\n                resetToDataState();\n            }\n            else {\n                // Anything else, take it as a valid comment\n                state = 16 /* Comment */;\n            }\n        }\n        // Currently reading the comment's text (data)\n        // https://www.w3.org/TR/html51/syntax.html#comment-state\n        function stateComment(char) {\n            if (char === '-') {\n                state = 17 /* CommentEndDash */;\n            }\n        }\n        // When we we've read the first dash inside a comment, it may signal the\n        // end of the comment if we read another dash\n        // https://www.w3.org/TR/html51/syntax.html#comment-end-dash-state\n        function stateCommentEndDash(char) {\n            if (char === '-') {\n                state = 18 /* CommentEnd */;\n            }\n            else {\n                // Wasn't a dash, must still be part of the comment\n                state = 16 /* Comment */;\n            }\n        }\n        // After we've read two dashes inside a comment, it may signal the end of\n        // the comment if we then read a '>' char\n        // https://www.w3.org/TR/html51/syntax.html#comment-end-state\n        function stateCommentEnd(char) {\n            if (char === '>') {\n                emitTagAndPreviousTextNode();\n            }\n            else if (char === '!') {\n                state = 19 /* CommentEndBang */;\n            }\n            else if (char === '-') ;\n            else {\n                // Anything else, switch back to the comment state since we didn't\n                // read the full \"end comment\" sequence (i.e. '-->')\n                state = 16 /* Comment */;\n            }\n        }\n        // We've read the sequence '--!' inside of a comment\n        // https://www.w3.org/TR/html51/syntax.html#comment-end-bang-state\n        function stateCommentEndBang(char) {\n            if (char === '-') {\n                // We read the sequence '--!-' inside of a comment. The last dash\n                // could signify that the comment is going to close\n                state = 17 /* CommentEndDash */;\n            }\n            else if (char === '>') {\n                // End of comment with the sequence '--!>'\n                emitTagAndPreviousTextNode();\n            }\n            else {\n                // The '--!' was not followed by a '>', continue reading the\n                // comment's text\n                state = 16 /* Comment */;\n            }\n        }\n        /**\n         * For DOCTYPES in particular, we don't care about the attributes. Just\n         * advance to the '>' character and emit the tag, unless we find a '<'\n         * character in which case we'll start a new tag.\n         *\n         * Example doctype tag:\n         *    <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http-colon-slashslash www.w3.org/TR/html4/strict.dtd\">\n         *\n         * Actual spec: https-colon-slashslash www.w3.org/TR/html51/syntax.html#doctype-state\n         */\n        function stateDoctype(char) {\n            if (char === '>') {\n                emitTagAndPreviousTextNode();\n            }\n            else if (char === '<') {\n                startNewTag();\n            }\n        }\n        /**\n         * Resets the state back to the Data state, and removes the current tag.\n         *\n         * We'll generally run this function whenever a \"parse error\" is\n         * encountered, where the current tag that is being read no longer looks\n         * like a real HTML tag.\n         */\n        function resetToDataState() {\n            state = 0 /* Data */;\n            currentTag = noCurrentTag;\n        }\n        /**\n         * Starts a new HTML tag at the current index, ignoring any previous HTML\n         * tag that was being read.\n         *\n         * We'll generally run this function whenever we read a new '<' character,\n         * including when we read a '<' character inside of an HTML tag that we were\n         * previously reading.\n         */\n        function startNewTag() {\n            state = 1 /* TagOpen */;\n            currentTag = new CurrentTag({ idx: charIdx });\n        }\n        /**\n         * Once we've decided to emit an open tag, that means we can also emit the\n         * text node before it.\n         */\n        function emitTagAndPreviousTextNode() {\n            var textBeforeTag = html.slice(currentDataIdx, currentTag.idx);\n            if (textBeforeTag) {\n                // the html tag was the first element in the html string, or two\n                // tags next to each other, in which case we should not emit a text\n                // node\n                onText(textBeforeTag, currentDataIdx);\n            }\n            if (currentTag.type === 'comment') {\n                onComment(currentTag.idx);\n            }\n            else if (currentTag.type === 'doctype') {\n                onDoctype(currentTag.idx);\n            }\n            else {\n                if (currentTag.isOpening) {\n                    onOpenTag(currentTag.name, currentTag.idx);\n                }\n                if (currentTag.isClosing) { // note: self-closing tags will emit both opening and closing\n                    onCloseTag(currentTag.name, currentTag.idx);\n                }\n            }\n            // Since we just emitted a tag, reset to the data state for the next char\n            resetToDataState();\n            currentDataIdx = charIdx + 1;\n        }\n        function emitText() {\n            var text = html.slice(currentDataIdx, charIdx);\n            onText(text, currentDataIdx);\n            currentDataIdx = charIdx + 1;\n        }\n        /**\n         * Captures the tag name from the start of the tag to the current character\n         * index, and converts it to lower case\n         */\n        function captureTagName() {\n            var startIdx = currentTag.idx + (currentTag.isClosing ? 2 : 1);\n            return html.slice(startIdx, charIdx).toLowerCase();\n        }\n        /**\n         * Causes the main loop to re-consume the current character, such as after\n         * encountering a \"parse error\" that changed state and needs to reconsume\n         * the same character in that new state.\n         */\n        function reconsumeCurrentCharacter() {\n            charIdx--;\n        }\n    }\n    var CurrentTag = /** @class */ (function () {\n        function CurrentTag(cfg) {\n            if (cfg === void 0) { cfg = {}; }\n            this.idx = cfg.idx !== undefined ? cfg.idx : -1;\n            this.type = cfg.type || 'tag';\n            this.name = cfg.name || '';\n            this.isOpening = !!cfg.isOpening;\n            this.isClosing = !!cfg.isClosing;\n        }\n        return CurrentTag;\n    }());\n\n    /**\n     * @class Autolinker\n     * @extends Object\n     *\n     * Utility class used to process a given string of text, and wrap the matches in\n     * the appropriate anchor (&lt;a&gt;) tags to turn them into links.\n     *\n     * Any of the configuration options may be provided in an Object provided\n     * to the Autolinker constructor, which will configure how the {@link #link link()}\n     * method will process the links.\n     *\n     * For example:\n     *\n     *     var autolinker = new Autolinker( {\n     *         newWindow : false,\n     *         truncate  : 30\n     *     } );\n     *\n     *     var html = autolinker.link( \"Joe went to www.yahoo.com\" );\n     *     // produces: 'Joe went to <a href=\"http-colon-slashslash www.yahoo.com\">yahoo.com</a>'\n     *\n     *\n     * The {@link #static-link static link()} method may also be used to inline\n     * options into a single call, which may be more convenient for one-off uses.\n     * For example:\n     *\n     *     var html = Autolinker.link( \"Joe went to www.yahoo.com\", {\n     *         newWindow : false,\n     *         truncate  : 30\n     *     } );\n     *     // produces: 'Joe went to <a href=\"http-colon-slashslash www.yahoo.com\">yahoo.com</a>'\n     *\n     *\n     * ## Custom Replacements of Links\n     *\n     * If the configuration options do not provide enough flexibility, a {@link #replaceFn}\n     * may be provided to fully customize the output of Autolinker. This function is\n     * called once for each URL/Email/Phone#/Hashtag/Mention (Twitter, Instagram, Soundcloud)\n     * match that is encountered.\n     *\n     * For example:\n     *\n     *     var input = \"...\";  // string with URLs, Email Addresses, Phone #s, Hashtags, and Mentions (Twitter, Instagram, Soundcloud)\n     *\n     *     var linkedText = Autolinker.link( input, {\n     *         replaceFn : function( match ) {\n     *             console.log( \"href = \", match.getAnchorHref() );\n     *             console.log( \"text = \", match.getAnchorText() );\n     *\n     *             switch( match.getType() ) {\n     *                 case 'url' :\n     *                     console.log( \"url: \", match.getUrl() );\n     *\n     *                     if( match.getUrl().indexOf( 'mysite.com' ) === -1 ) {\n     *                         var tag = match.buildTag();  // returns an `Autolinker.HtmlTag` instance, which provides mutator methods for easy changes\n     *                         tag.setAttr( 'rel', 'nofollow' );\n     *                         tag.addClass( 'external-link' );\n     *\n     *                         return tag;\n     *\n     *                     } else {\n     *                         return true;  // let Autolinker perform its normal anchor tag replacement\n     *                     }\n     *\n     *                 case 'email' :\n     *                     var email = match.getEmail();\n     *                     console.log( \"email: \", email );\n     *\n     *                     if( email === \"my@own.address\" ) {\n     *                         return false;  // don't auto-link this particular email address; leave as-is\n     *                     } else {\n     *                         return;  // no return value will have Autolinker perform its normal anchor tag replacement (same as returning `true`)\n     *                     }\n     *\n     *                 case 'phone' :\n     *                     var phoneNumber = match.getPhoneNumber();\n     *                     console.log( phoneNumber );\n     *\n     *                     return '<a href=\"http-colon-slashslash newplace.to.link.phone.numbers.to/\">' + phoneNumber + '</a>';\n     *\n     *                 case 'hashtag' :\n     *                     var hashtag = match.getHashtag();\n     *                     console.log( hashtag );\n     *\n     *                     return '<a href=\"http-colon-slashslash newplace.to.link.hashtag.handles.to/\">' + hashtag + '</a>';\n     *\n     *                 case 'mention' :\n     *                     var mention = match.getMention();\n     *                     console.log( mention );\n     *\n     *                     return '<a href=\"http-colon-slashslash newplace.to.link.mention.to/\">' + mention + '</a>';\n     *             }\n     *         }\n     *     } );\n     *\n     *\n     * The function may return the following values:\n     *\n     * - `true` (Boolean): Allow Autolinker to replace the match as it normally\n     *   would.\n     * - `false` (Boolean): Do not replace the current match at all - leave as-is.\n     * - Any String: If a string is returned from the function, the string will be\n     *   used directly as the replacement HTML for the match.\n     * - An {@link Autolinker.HtmlTag} instance, which can be used to build/modify\n     *   an HTML tag before writing out its HTML text.\n     */\n    var Autolinker = /** @class */ (function () {\n        /**\n         * @method constructor\n         * @param {Object} [cfg] The configuration options for the Autolinker instance,\n         *   specified in an Object (map).\n         */\n        function Autolinker(cfg) {\n            if (cfg === void 0) { cfg = {}; }\n            /**\n             * The Autolinker version number exposed on the instance itself.\n             *\n             * Ex: 0.25.1\n             */\n            this.version = Autolinker.version;\n            /**\n             * @cfg {Boolean/Object} [urls]\n             *\n             * `true` if URLs should be automatically linked, `false` if they should not\n             * be. Defaults to `true`.\n             *\n             * Examples:\n             *\n             *     urls: true\n             *\n             *     // or\n             *\n             *     urls: {\n             *         schemeMatches : true,\n             *         wwwMatches    : true,\n             *         tldMatches    : true\n             *     }\n             *\n             * As shown above, this option also accepts an Object form with 3 properties\n             * to allow for more customization of what exactly gets linked. All default\n             * to `true`:\n             *\n             * @cfg {Boolean} [urls.schemeMatches] `true` to match URLs found prefixed\n             *   with a scheme, i.e. `http-colon-slashslash google.com`, or `other+scheme://google.com`,\n             *   `false` to prevent these types of matches.\n             * @cfg {Boolean} [urls.wwwMatches] `true` to match urls found prefixed with\n             *   `'www.'`, i.e. `www.google.com`. `false` to prevent these types of\n             *   matches. Note that if the URL had a prefixed scheme, and\n             *   `schemeMatches` is true, it will still be linked.\n             * @cfg {Boolean} [urls.tldMatches] `true` to match URLs with known top\n             *   level domains (.com, .net, etc.) that are not prefixed with a scheme or\n             *   `'www.'`. This option attempts to match anything that looks like a URL\n             *   in the given text. Ex: `google.com`, `asdf.org/?page=1`, etc. `false`\n             *   to prevent these types of matches.\n             */\n            this.urls = {}; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {Boolean} [email=true]\n             *\n             * `true` if email addresses should be automatically linked, `false` if they\n             * should not be.\n             */\n            this.email = true; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {Boolean} [phone=true]\n             *\n             * `true` if Phone numbers (\"(555)555-5555\") should be automatically linked,\n             * `false` if they should not be.\n             */\n            this.phone = true; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {Boolean/String} [hashtag=false]\n             *\n             * A string for the service name to have hashtags (ex: \"#myHashtag\")\n             * auto-linked to. The currently-supported values are:\n             *\n             * - 'twitter'\n             * - 'facebook'\n             * - 'instagram'\n             *\n             * Pass `false` to skip auto-linking of hashtags.\n             */\n            this.hashtag = false; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {String/Boolean} [mention=false]\n             *\n             * A string for the service name to have mentions (ex: \"@myuser\")\n             * auto-linked to. The currently supported values are:\n             *\n             * - 'twitter'\n             * - 'instagram'\n             * - 'soundcloud'\n             *\n             * Defaults to `false` to skip auto-linking of mentions.\n             */\n            this.mention = false; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {Boolean} [newWindow=true]\n             *\n             * `true` if the links should open in a new window, `false` otherwise.\n             */\n            this.newWindow = true; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {Boolean/Object} [stripPrefix=true]\n             *\n             * `true` if 'http-colon-slashslash ' (or 'https-colon-slashslash ') and/or the 'www.' should be stripped\n             * from the beginning of URL links' text, `false` otherwise. Defaults to\n             * `true`.\n             *\n             * Examples:\n             *\n             *     stripPrefix: true\n             *\n             *     // or\n             *\n             *     stripPrefix: {\n             *         scheme : true,\n             *         www    : true\n             *     }\n             *\n             * As shown above, this option also accepts an Object form with 2 properties\n             * to allow for more customization of what exactly is prevented from being\n             * displayed. Both default to `true`:\n             *\n             * @cfg {Boolean} [stripPrefix.scheme] `true` to prevent the scheme part of\n             *   a URL match from being displayed to the user. Example:\n             *   `'http-colon-slashslash google.com'` will be displayed as `'google.com'`. `false` to\n             *   not strip the scheme. NOTE: Only an `'http-colon-slashslash '` or `'https-colon-slashslash '` scheme\n             *   will be removed, so as not to remove a potentially dangerous scheme\n             *   (such as `'file://'` or `'javascript:'`)\n             * @cfg {Boolean} [stripPrefix.www] www (Boolean): `true` to prevent the\n             *   `'www.'` part of a URL match from being displayed to the user. Ex:\n             *   `'www.google.com'` will be displayed as `'google.com'`. `false` to not\n             *   strip the `'www'`.\n             */\n            this.stripPrefix = { scheme: true, www: true }; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {Boolean} [stripTrailingSlash=true]\n             *\n             * `true` to remove the trailing slash from URL matches, `false` to keep\n             *  the trailing slash.\n             *\n             *  Example when `true`: `http-colon-slashslash google.com/` will be displayed as\n             *  `http-colon-slashslash google.com`.\n             */\n            this.stripTrailingSlash = true; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {Boolean} [decodePercentEncoding=true]\n             *\n             * `true` to decode percent-encoded characters in URL matches, `false` to keep\n             *  the percent-encoded characters.\n             *\n             *  Example when `true`: `https-colon-slashslash en.wikipedia.org/wiki/San_Jos%C3%A9` will\n             *  be displayed as `https-colon-slashslash en.wikipedia.org/wiki/San_José`.\n             */\n            this.decodePercentEncoding = true; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {Number/Object} [truncate=0]\n             *\n             * ## Number Form\n             *\n             * A number for how many characters matched text should be truncated to\n             * inside the text of a link. If the matched text is over this number of\n             * characters, it will be truncated to this length by adding a two period\n             * ellipsis ('..') to the end of the string.\n             *\n             * For example: A url like 'http-colon-slashslash www.yahoo.com/some/long/path/to/a/file'\n             * truncated to 25 characters might look something like this:\n             * 'yahoo.com/some/long/pat..'\n             *\n             * Example Usage:\n             *\n             *     truncate: 25\n             *\n             *\n             *  Defaults to `0` for \"no truncation.\"\n             *\n             *\n             * ## Object Form\n             *\n             * An Object may also be provided with two properties: `length` (Number) and\n             * `location` (String). `location` may be one of the following: 'end'\n             * (default), 'middle', or 'smart'.\n             *\n             * Example Usage:\n             *\n             *     truncate: { length: 25, location: 'middle' }\n             *\n             * @cfg {Number} [truncate.length=0] How many characters to allow before\n             *   truncation will occur. Defaults to `0` for \"no truncation.\"\n             * @cfg {\"end\"/\"middle\"/\"smart\"} [truncate.location=\"end\"]\n             *\n             * - 'end' (default): will truncate up to the number of characters, and then\n             *   add an ellipsis at the end. Ex: 'yahoo.com/some/long/pat..'\n             * - 'middle': will truncate and add the ellipsis in the middle. Ex:\n             *   'yahoo.com/s..th/to/a/file'\n             * - 'smart': for URLs where the algorithm attempts to strip out unnecessary\n             *   parts first (such as the 'www.', then URL scheme, hash, etc.),\n             *   attempting to make the URL human-readable before looking for a good\n             *   point to insert the ellipsis if it is still too long. Ex:\n             *   'yahoo.com/some..to/a/file'. For more details, see\n             *   {@link Autolinker.truncate.TruncateSmart}.\n             */\n            this.truncate = { length: 0, location: 'end' }; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {String} className\n             *\n             * A CSS class name to add to the generated links. This class will be added\n             * to all links, as well as this class plus match suffixes for styling\n             * url/email/phone/hashtag/mention links differently.\n             *\n             * For example, if this config is provided as \"myLink\", then:\n             *\n             * - URL links will have the CSS classes: \"myLink myLink-url\"\n             * - Email links will have the CSS classes: \"myLink myLink-email\", and\n             * - Phone links will have the CSS classes: \"myLink myLink-phone\"\n             * - Hashtag links will have the CSS classes: \"myLink myLink-hashtag\"\n             * - Mention links will have the CSS classes: \"myLink myLink-mention myLink-[type]\"\n             *   where [type] is either \"instagram\", \"twitter\" or \"soundcloud\"\n             */\n            this.className = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {Function} replaceFn\n             *\n             * A function to individually process each match found in the input string.\n             *\n             * See the class's description for usage.\n             *\n             * The `replaceFn` can be called with a different context object (`this`\n             * reference) using the {@link #context} cfg.\n             *\n             * This function is called with the following parameter:\n             *\n             * @cfg {Autolinker.match.Match} replaceFn.match The Match instance which\n             *   can be used to retrieve information about the match that the `replaceFn`\n             *   is currently processing. See {@link Autolinker.match.Match} subclasses\n             *   for details.\n             */\n            this.replaceFn = null; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @cfg {Object} context\n             *\n             * The context object (`this` reference) to call the `replaceFn` with.\n             *\n             * Defaults to this Autolinker instance.\n             */\n            this.context = undefined; // default value just to get the above doc comment in the ES5 output and documentation generator\n            /**\n             * @private\n             * @property {Autolinker.matcher.Matcher[]} matchers\n             *\n             * The {@link Autolinker.matcher.Matcher} instances for this Autolinker\n             * instance.\n             *\n             * This is lazily created in {@link #getMatchers}.\n             */\n            this.matchers = null;\n            /**\n             * @private\n             * @property {Autolinker.AnchorTagBuilder} tagBuilder\n             *\n             * The AnchorTagBuilder instance used to build match replacement anchor tags.\n             * Note: this is lazily instantiated in the {@link #getTagBuilder} method.\n             */\n            this.tagBuilder = null;\n            // Note: when `this.something` is used in the rhs of these assignments,\n            //       it refers to the default values set above the constructor\n            this.urls = this.normalizeUrlsCfg(cfg.urls);\n            this.email = typeof cfg.email === 'boolean' ? cfg.email : this.email;\n            this.phone = typeof cfg.phone === 'boolean' ? cfg.phone : this.phone;\n            this.hashtag = cfg.hashtag || this.hashtag;\n            this.mention = cfg.mention || this.mention;\n            this.newWindow = typeof cfg.newWindow === 'boolean' ? cfg.newWindow : this.newWindow;\n            this.stripPrefix = this.normalizeStripPrefixCfg(cfg.stripPrefix);\n            this.stripTrailingSlash = typeof cfg.stripTrailingSlash === 'boolean' ? cfg.stripTrailingSlash : this.stripTrailingSlash;\n            this.decodePercentEncoding = typeof cfg.decodePercentEncoding === 'boolean' ? cfg.decodePercentEncoding : this.decodePercentEncoding;\n            // Validate the value of the `mention` cfg\n            var mention = this.mention;\n            if (mention !== false && mention !== 'twitter' && mention !== 'instagram' && mention !== 'soundcloud') {\n                throw new Error(\"invalid `mention` cfg - see docs\");\n            }\n            // Validate the value of the `hashtag` cfg\n            var hashtag = this.hashtag;\n            if (hashtag !== false && hashtag !== 'twitter' && hashtag !== 'facebook' && hashtag !== 'instagram') {\n                throw new Error(\"invalid `hashtag` cfg - see docs\");\n            }\n            this.truncate = this.normalizeTruncateCfg(cfg.truncate);\n            this.className = cfg.className || this.className;\n            this.replaceFn = cfg.replaceFn || this.replaceFn;\n            this.context = cfg.context || this;\n        }\n        /**\n         * Automatically links URLs, Email addresses, Phone Numbers, Twitter handles,\n         * Hashtags, and Mentions found in the given chunk of HTML. Does not link URLs\n         * found within HTML tags.\n         *\n         * For instance, if given the text: `You should go to http-colon-slashslash www.yahoo.com`,\n         * then the result will be `You should go to &lt;a href=\"http-colon-slashslash www.yahoo.com\"&gt;http-colon-slashslash www.yahoo.com&lt;/a&gt;`\n         *\n         * Example:\n         *\n         *     var linkedText = Autolinker.link( \"Go to google.com\", { newWindow: false } );\n         *     // Produces: \"Go to <a href=\"http-colon-slashslash google.com\">google.com</a>\"\n         *\n         * @static\n         * @param {String} textOrHtml The HTML or text to find matches within (depending\n         *   on if the {@link #urls}, {@link #email}, {@link #phone}, {@link #mention},\n         *   {@link #hashtag}, and {@link #mention} options are enabled).\n         * @param {Object} [options] Any of the configuration options for the Autolinker\n         *   class, specified in an Object (map). See the class description for an\n         *   example call.\n         * @return {String} The HTML text, with matches automatically linked.\n         */\n        Autolinker.link = function (textOrHtml, options) {\n            var autolinker = new Autolinker(options);\n            return autolinker.link(textOrHtml);\n        };\n        /**\n         * Parses the input `textOrHtml` looking for URLs, email addresses, phone\n         * numbers, username handles, and hashtags (depending on the configuration\n         * of the Autolinker instance), and returns an array of {@link Autolinker.match.Match}\n         * objects describing those matches (without making any replacements).\n         *\n         * Note that if parsing multiple pieces of text, it is slightly more efficient\n         * to create an Autolinker instance, and use the instance-level {@link #parse}\n         * method.\n         *\n         * Example:\n         *\n         *     var matches = Autolinker.parse( \"Hello google.com, I am asdf@asdf.com\", {\n         *         urls: true,\n         *         email: true\n         *     } );\n         *\n         *     console.log( matches.length );           // 2\n         *     console.log( matches[ 0 ].getType() );   // 'url'\n         *     console.log( matches[ 0 ].getUrl() );    // 'google.com'\n         *     console.log( matches[ 1 ].getType() );   // 'email'\n         *     console.log( matches[ 1 ].getEmail() );  // 'asdf@asdf.com'\n         *\n         * @static\n         * @param {String} textOrHtml The HTML or text to find matches within\n         *   (depending on if the {@link #urls}, {@link #email}, {@link #phone},\n         *   {@link #hashtag}, and {@link #mention} options are enabled).\n         * @param {Object} [options] Any of the configuration options for the Autolinker\n         *   class, specified in an Object (map). See the class description for an\n         *   example call.\n         * @return {Autolinker.match.Match[]} The array of Matches found in the\n         *   given input `textOrHtml`.\n         */\n        Autolinker.parse = function (textOrHtml, options) {\n            var autolinker = new Autolinker(options);\n            return autolinker.parse(textOrHtml);\n        };\n        /**\n         * Normalizes the {@link #urls} config into an Object with 3 properties:\n         * `schemeMatches`, `wwwMatches`, and `tldMatches`, all Booleans.\n         *\n         * See {@link #urls} config for details.\n         *\n         * @private\n         * @param {Boolean/Object} urls\n         * @return {Object}\n         */\n        Autolinker.prototype.normalizeUrlsCfg = function (urls) {\n            if (urls == null)\n                urls = true; // default to `true`\n            if (typeof urls === 'boolean') {\n                return { schemeMatches: urls, wwwMatches: urls, tldMatches: urls };\n            }\n            else { // object form\n                return {\n                    schemeMatches: typeof urls.schemeMatches === 'boolean' ? urls.schemeMatches : true,\n                    wwwMatches: typeof urls.wwwMatches === 'boolean' ? urls.wwwMatches : true,\n                    tldMatches: typeof urls.tldMatches === 'boolean' ? urls.tldMatches : true\n                };\n            }\n        };\n        /**\n         * Normalizes the {@link #stripPrefix} config into an Object with 2\n         * properties: `scheme`, and `www` - both Booleans.\n         *\n         * See {@link #stripPrefix} config for details.\n         *\n         * @private\n         * @param {Boolean/Object} stripPrefix\n         * @return {Object}\n         */\n        Autolinker.prototype.normalizeStripPrefixCfg = function (stripPrefix) {\n            if (stripPrefix == null)\n                stripPrefix = true; // default to `true`\n            if (typeof stripPrefix === 'boolean') {\n                return { scheme: stripPrefix, www: stripPrefix };\n            }\n            else { // object form\n                return {\n                    scheme: typeof stripPrefix.scheme === 'boolean' ? stripPrefix.scheme : true,\n                    www: typeof stripPrefix.www === 'boolean' ? stripPrefix.www : true\n                };\n            }\n        };\n        /**\n         * Normalizes the {@link #truncate} config into an Object with 2 properties:\n         * `length` (Number), and `location` (String).\n         *\n         * See {@link #truncate} config for details.\n         *\n         * @private\n         * @param {Number/Object} truncate\n         * @return {Object}\n         */\n        Autolinker.prototype.normalizeTruncateCfg = function (truncate) {\n            if (typeof truncate === 'number') {\n                return { length: truncate, location: 'end' };\n            }\n            else { // object, or undefined/null\n                return defaults(truncate || {}, {\n                    length: Number.POSITIVE_INFINITY,\n                    location: 'end'\n                });\n            }\n        };\n        /**\n         * Parses the input `textOrHtml` looking for URLs, email addresses, phone\n         * numbers, username handles, and hashtags (depending on the configuration\n         * of the Autolinker instance), and returns an array of {@link Autolinker.match.Match}\n         * objects describing those matches (without making any replacements).\n         *\n         * This method is used by the {@link #link} method, but can also be used to\n         * simply do parsing of the input in order to discover what kinds of links\n         * there are and how many.\n         *\n         * Example usage:\n         *\n         *     var autolinker = new Autolinker( {\n         *         urls: true,\n         *         email: true\n         *     } );\n         *\n         *     var matches = autolinker.parse( \"Hello google.com, I am asdf@asdf.com\" );\n         *\n         *     console.log( matches.length );           // 2\n         *     console.log( matches[ 0 ].getType() );   // 'url'\n         *     console.log( matches[ 0 ].getUrl() );    // 'google.com'\n         *     console.log( matches[ 1 ].getType() );   // 'email'\n         *     console.log( matches[ 1 ].getEmail() );  // 'asdf@asdf.com'\n         *\n         * @param {String} textOrHtml The HTML or text to find matches within\n         *   (depending on if the {@link #urls}, {@link #email}, {@link #phone},\n         *   {@link #hashtag}, and {@link #mention} options are enabled).\n         * @return {Autolinker.match.Match[]} The array of Matches found in the\n         *   given input `textOrHtml`.\n         */\n        Autolinker.prototype.parse = function (textOrHtml) {\n            var _this = this;\n            var skipTagNames = ['a', 'style', 'script'], skipTagsStackCount = 0, // used to only Autolink text outside of anchor/script/style tags. We don't want to autolink something that is already linked inside of an <a> tag, for instance\n            matches = [];\n            // Find all matches within the `textOrHtml` (but not matches that are\n            // already nested within <a>, <style> and <script> tags)\n            parseHtml(textOrHtml, {\n                onOpenTag: function (tagName) {\n                    if (skipTagNames.indexOf(tagName) >= 0) {\n                        skipTagsStackCount++;\n                    }\n                },\n                onText: function (text, offset) {\n                    // Only process text nodes that are not within an <a>, <style> or <script> tag\n                    if (skipTagsStackCount === 0) {\n                        // \"Walk around\" common HTML entities. An '&nbsp;' (for example)\n                        // could be at the end of a URL, but we don't want to\n                        // include the trailing '&' in the URL. See issue #76\n                        // TODO: Handle HTML entities separately in parseHtml() and\n                        // don't emit them as \"text\" except for &amp; entities\n                        var htmlCharacterEntitiesRegex = /(&nbsp;|&#160;|&lt;|&#60;|&gt;|&#62;|&quot;|&#34;|&#39;)/gi;\n                        var textSplit = splitAndCapture(text, htmlCharacterEntitiesRegex);\n                        var currentOffset_1 = offset;\n                        textSplit.forEach(function (splitText, i) {\n                            // even number matches are text, odd numbers are html entities\n                            if (i % 2 === 0) {\n                                var textNodeMatches = _this.parseText(splitText, currentOffset_1);\n                                matches.push.apply(matches, textNodeMatches);\n                            }\n                            currentOffset_1 += splitText.length;\n                        });\n                    }\n                },\n                onCloseTag: function (tagName) {\n                    if (skipTagNames.indexOf(tagName) >= 0) {\n                        skipTagsStackCount = Math.max(skipTagsStackCount - 1, 0); // attempt to handle extraneous </a> tags by making sure the stack count never goes below 0\n                    }\n                },\n                onComment: function (offset) { },\n                onDoctype: function (offset) { },\n            });\n            // After we have found all matches, remove subsequent matches that\n            // overlap with a previous match. This can happen for instance with URLs,\n            // where the url 'google.com/#link' would match '#link' as a hashtag.\n            matches = this.compactMatches(matches);\n            // And finally, remove matches for match types that have been turned\n            // off. We needed to have all match types turned on initially so that\n            // things like hashtags could be filtered out if they were really just\n            // part of a URL match (for instance, as a named anchor).\n            matches = this.removeUnwantedMatches(matches);\n            return matches;\n        };\n        /**\n         * After we have found all matches, we need to remove matches that overlap\n         * with a previous match. This can happen for instance with URLs, where the\n         * url 'google.com/#link' would match '#link' as a hashtag. Because the\n         * '#link' part is contained in a larger match that comes before the HashTag\n         * match, we'll remove the HashTag match.\n         *\n         * @private\n         * @param {Autolinker.match.Match[]} matches\n         * @return {Autolinker.match.Match[]}\n         */\n        Autolinker.prototype.compactMatches = function (matches) {\n            // First, the matches need to be sorted in order of offset\n            matches.sort(function (a, b) { return a.getOffset() - b.getOffset(); });\n            for (var i = 0; i < matches.length - 1; i++) {\n                var match = matches[i], offset = match.getOffset(), matchedTextLength = match.getMatchedText().length, endIdx = offset + matchedTextLength;\n                if (i + 1 < matches.length) {\n                    // Remove subsequent matches that equal offset with current match\n                    if (matches[i + 1].getOffset() === offset) {\n                        var removeIdx = matches[i + 1].getMatchedText().length > matchedTextLength ? i : i + 1;\n                        matches.splice(removeIdx, 1);\n                        continue;\n                    }\n                    // Remove subsequent matches that overlap with the current match\n                    if (matches[i + 1].getOffset() < endIdx) {\n                        matches.splice(i + 1, 1);\n                    }\n                }\n            }\n            return matches;\n        };\n        /**\n         * Removes matches for matchers that were turned off in the options. For\n         * example, if {@link #hashtag hashtags} were not to be matched, we'll\n         * remove them from the `matches` array here.\n         *\n         * Note: we *must* use all Matchers on the input string, and then filter\n         * them out later. For example, if the options were `{ url: false, hashtag: true }`,\n         * we wouldn't want to match the text '#link' as a HashTag inside of the text\n         * 'google.com/#link'. The way the algorithm works is that we match the full\n         * URL first (which prevents the accidental HashTag match), and then we'll\n         * simply throw away the URL match.\n         *\n         * @private\n         * @param {Autolinker.match.Match[]} matches The array of matches to remove\n         *   the unwanted matches from. Note: this array is mutated for the\n         *   removals.\n         * @return {Autolinker.match.Match[]} The mutated input `matches` array.\n         */\n        Autolinker.prototype.removeUnwantedMatches = function (matches) {\n            if (!this.hashtag)\n                remove(matches, function (match) { return match.getType() === 'hashtag'; });\n            if (!this.email)\n                remove(matches, function (match) { return match.getType() === 'email'; });\n            if (!this.phone)\n                remove(matches, function (match) { return match.getType() === 'phone'; });\n            if (!this.mention)\n                remove(matches, function (match) { return match.getType() === 'mention'; });\n            if (!this.urls.schemeMatches) {\n                remove(matches, function (m) { return m.getType() === 'url' && m.getUrlMatchType() === 'scheme'; });\n            }\n            if (!this.urls.wwwMatches) {\n                remove(matches, function (m) { return m.getType() === 'url' && m.getUrlMatchType() === 'www'; });\n            }\n            if (!this.urls.tldMatches) {\n                remove(matches, function (m) { return m.getType() === 'url' && m.getUrlMatchType() === 'tld'; });\n            }\n            return matches;\n        };\n        /**\n         * Parses the input `text` looking for URLs, email addresses, phone\n         * numbers, username handles, and hashtags (depending on the configuration\n         * of the Autolinker instance), and returns an array of {@link Autolinker.match.Match}\n         * objects describing those matches.\n         *\n         * This method processes a **non-HTML string**, and is used to parse and\n         * match within the text nodes of an HTML string. This method is used\n         * internally by {@link #parse}.\n         *\n         * @private\n         * @param {String} text The text to find matches within (depending on if the\n         *   {@link #urls}, {@link #email}, {@link #phone},\n         *   {@link #hashtag}, and {@link #mention} options are enabled). This must be a non-HTML string.\n         * @param {Number} [offset=0] The offset of the text node within the\n         *   original string. This is used when parsing with the {@link #parse}\n         *   method to generate correct offsets within the {@link Autolinker.match.Match}\n         *   instances, but may be omitted if calling this method publicly.\n         * @return {Autolinker.match.Match[]} The array of Matches found in the\n         *   given input `text`.\n         */\n        Autolinker.prototype.parseText = function (text, offset) {\n            if (offset === void 0) { offset = 0; }\n            offset = offset || 0;\n            var matchers = this.getMatchers(), matches = [];\n            for (var i = 0, numMatchers = matchers.length; i < numMatchers; i++) {\n                var textMatches = matchers[i].parseMatches(text);\n                // Correct the offset of each of the matches. They are originally\n                // the offset of the match within the provided text node, but we\n                // need to correct them to be relative to the original HTML input\n                // string (i.e. the one provided to #parse).\n                for (var j = 0, numTextMatches = textMatches.length; j < numTextMatches; j++) {\n                    textMatches[j].setOffset(offset + textMatches[j].getOffset());\n                }\n                matches.push.apply(matches, textMatches);\n            }\n            return matches;\n        };\n        /**\n         * Automatically links URLs, Email addresses, Phone numbers, Hashtags,\n         * and Mentions (Twitter, Instagram, Soundcloud) found in the given chunk of HTML. Does not link\n         * URLs found within HTML tags.\n         *\n         * For instance, if given the text: `You should go to http-colon-slashslash www.yahoo.com`,\n         * then the result will be `You should go to\n         * &lt;a href=\"http-colon-slashslash www.yahoo.com\"&gt;http-colon-slashslash www.yahoo.com&lt;/a&gt;`\n         *\n         * This method finds the text around any HTML elements in the input\n         * `textOrHtml`, which will be the text that is processed. Any original HTML\n         * elements will be left as-is, as well as the text that is already wrapped\n         * in anchor (&lt;a&gt;) tags.\n         *\n         * @param {String} textOrHtml The HTML or text to autolink matches within\n         *   (depending on if the {@link #urls}, {@link #email}, {@link #phone}, {@link #hashtag}, and {@link #mention} options are enabled).\n         * @return {String} The HTML, with matches automatically linked.\n         */\n        Autolinker.prototype.link = function (textOrHtml) {\n            if (!textOrHtml) {\n                return \"\";\n            } // handle `null` and `undefined`\n            var matches = this.parse(textOrHtml), newHtml = [], lastIndex = 0;\n            for (var i = 0, len = matches.length; i < len; i++) {\n                var match = matches[i];\n                newHtml.push(textOrHtml.substring(lastIndex, match.getOffset()));\n                newHtml.push(this.createMatchReturnVal(match));\n                lastIndex = match.getOffset() + match.getMatchedText().length;\n            }\n            newHtml.push(textOrHtml.substring(lastIndex)); // handle the text after the last match\n            return newHtml.join('');\n        };\n        /**\n         * Creates the return string value for a given match in the input string.\n         *\n         * This method handles the {@link #replaceFn}, if one was provided.\n         *\n         * @private\n         * @param {Autolinker.match.Match} match The Match object that represents\n         *   the match.\n         * @return {String} The string that the `match` should be replaced with.\n         *   This is usually the anchor tag string, but may be the `matchStr` itself\n         *   if the match is not to be replaced.\n         */\n        Autolinker.prototype.createMatchReturnVal = function (match) {\n            // Handle a custom `replaceFn` being provided\n            var replaceFnResult;\n            if (this.replaceFn) {\n                replaceFnResult = this.replaceFn.call(this.context, match); // Autolinker instance is the context\n            }\n            if (typeof replaceFnResult === 'string') {\n                return replaceFnResult; // `replaceFn` returned a string, use that\n            }\n            else if (replaceFnResult === false) {\n                return match.getMatchedText(); // no replacement for the match\n            }\n            else if (replaceFnResult instanceof HtmlTag) {\n                return replaceFnResult.toAnchorString();\n            }\n            else { // replaceFnResult === true, or no/unknown return value from function\n                // Perform Autolinker's default anchor tag generation\n                var anchorTag = match.buildTag(); // returns an Autolinker.HtmlTag instance\n                return anchorTag.toAnchorString();\n            }\n        };\n        /**\n         * Lazily instantiates and returns the {@link Autolinker.matcher.Matcher}\n         * instances for this Autolinker instance.\n         *\n         * @private\n         * @return {Autolinker.matcher.Matcher[]}\n         */\n        Autolinker.prototype.getMatchers = function () {\n            if (!this.matchers) {\n                var tagBuilder = this.getTagBuilder();\n                var matchers = [\n                    new HashtagMatcher({ tagBuilder: tagBuilder, serviceName: this.hashtag }),\n                    new EmailMatcher({ tagBuilder: tagBuilder }),\n                    new PhoneMatcher({ tagBuilder: tagBuilder }),\n                    new MentionMatcher({ tagBuilder: tagBuilder, serviceName: this.mention }),\n                    new UrlMatcher({ tagBuilder: tagBuilder, stripPrefix: this.stripPrefix, stripTrailingSlash: this.stripTrailingSlash, decodePercentEncoding: this.decodePercentEncoding })\n                ];\n                return (this.matchers = matchers);\n            }\n            else {\n                return this.matchers;\n            }\n        };\n        /**\n         * Returns the {@link #tagBuilder} instance for this Autolinker instance,\n         * lazily instantiating it if it does not yet exist.\n         *\n         * @private\n         * @return {Autolinker.AnchorTagBuilder}\n         */\n        Autolinker.prototype.getTagBuilder = function () {\n            var tagBuilder = this.tagBuilder;\n            if (!tagBuilder) {\n                tagBuilder = this.tagBuilder = new AnchorTagBuilder({\n                    newWindow: this.newWindow,\n                    truncate: this.truncate,\n                    className: this.className\n                });\n            }\n            return tagBuilder;\n        };\n        /**\n         * @static\n         * @property {String} version\n         *\n         * The Autolinker version number in the form major.minor.patch\n         *\n         * Ex: 0.25.1\n         */\n        Autolinker.version = '3.11.0';\n        /**\n         * For backwards compatibility with Autolinker 1.x, the AnchorTagBuilder\n         * class is provided as a static on the Autolinker class.\n         */\n        Autolinker.AnchorTagBuilder = AnchorTagBuilder;\n        /**\n         * For backwards compatibility with Autolinker 1.x, the HtmlTag class is\n         * provided as a static on the Autolinker class.\n         */\n        Autolinker.HtmlTag = HtmlTag;\n        /**\n         * For backwards compatibility with Autolinker 1.x, the Matcher classes are\n         * provided as statics on the Autolinker class.\n         */\n        Autolinker.matcher = {\n            Email: EmailMatcher,\n            Hashtag: HashtagMatcher,\n            Matcher: Matcher,\n            Mention: MentionMatcher,\n            Phone: PhoneMatcher,\n            Url: UrlMatcher\n        };\n        /**\n         * For backwards compatibility with Autolinker 1.x, the Match classes are\n         * provided as statics on the Autolinker class.\n         */\n        Autolinker.match = {\n            Email: EmailMatch,\n            Hashtag: HashtagMatch,\n            Match: Match,\n            Mention: MentionMatch,\n            Phone: PhoneMatch,\n            Url: UrlMatch\n        };\n        return Autolinker;\n    }());\n\n    return Autolinker;\n\n}));\n\n\n//# sourceMappingURL=Autolinker.js.map\n\nexport default tmp.Autolinker;\n","    /**\n     * Representation of <Camera> from KML\n     * @alias KmlCamera\n     * @constructor\n     *\n     * @param {Cartesian3} position camera position\n     * @param {HeadingPitchRoll} headingPitchRoll camera orientation\n     */\n    function KmlCamera(position, headingPitchRoll) {\n        this.position = position;\n        this.headingPitchRoll = headingPitchRoll;\n    }\nexport default KmlCamera;\n","    /**\n     * @alias KmlLookAt\n     * @constructor\n     *\n     * @param {Cartesian3} position camera position\n     * @param {HeadingPitchRange} headingPitchRange camera orientation\n     */\n    function KmlLookAt(position, headingPitchRange) {\n        this.position = position;\n        this.headingPitchRange = headingPitchRange;\n    }\nexport default KmlLookAt;\n","import defined from '../Core/defined.js';\nimport Event from '../Core/Event.js';\n    /**\n     * @alias KmlTour\n     * @constructor\n     *\n     * @param {String} name name parsed from KML\n     * @param {String} id id parsed from KML\n     * @param {Array} playlist array with KMLTourFlyTos, KMLTourWaits and KMLTourSoundCues\n     */\n    function KmlTour(name, id) {\n        /**\n         * Id of kml gx:Tour entry\n         * @type String\n         */\n        this.id = id;\n        /**\n         * Tour name\n         * @type String\n         */\n        this.name = name;\n        /**\n         * Index of current entry from playlist\n         * @type Number\n         */\n        this.playlistIndex = 0;\n        /**\n         * Array of playlist entries\n         * @type Array\n         */\n        this.playlist = [];\n        /**\n         * Event will be called when tour starts to play,\n         * before any playlist entry starts to play.\n         * @type Event\n         */\n        this.tourStart = new Event();\n        /**\n         * Event will be called when all playlist entries are\n         * played, or tour playback being canceled.\n         *\n         * If tour playback was terminated, event callback will\n         * be called with terminated=true parameter.\n         * @type Event\n         */\n        this.tourEnd = new Event();\n        /**\n         * Event will be called when entry from playlist starts to play.\n         *\n         * Event callback will be called with curent entry as first parameter.\n         * @type Event\n         */\n        this.entryStart = new Event();\n        /**\n         * Event will be called when entry from playlist ends to play.\n         *\n         * Event callback will be called with following parameters:\n         * 1. entry - entry\n         * 2. terminated - true if playback was terminated by calling {@link KmlTour#stop}\n         * @type Event\n         */\n        this.entryEnd = new Event();\n\n        this._activeEntries = [];\n    }\n\n    /**\n     * Add entry to this tour playlist.\n     *\n     * @param {KmlTourFlyTo|KmlTourWait} entry an entry to add to the playlist.\n     */\n    KmlTour.prototype.addPlaylistEntry = function(entry) {\n        this.playlist.push(entry);\n    };\n\n    /**\n     * Play this tour.\n     *\n     * @param {Viewer} viewer viewer widget.\n     * @param {Object} [cameraOptions] these options will be merged with {@link Camera#flyTo}\n     * options for FlyTo playlist entries.\n     */\n    KmlTour.prototype.play = function(viewer, cameraOptions) {\n        this.tourStart.raiseEvent();\n\n        var tour = this;\n        playEntry.call(this, viewer, cameraOptions, function(terminated) {\n            tour.playlistIndex = 0;\n            // Stop nonblocking entries\n            if (!terminated) {\n                cancelAllEntries(tour._activeEntries);\n            }\n            tour.tourEnd.raiseEvent(terminated);\n        });\n    };\n\n    /**\n     * Stop curently playing tour.\n     */\n    KmlTour.prototype.stop = function() {\n        cancelAllEntries(this._activeEntries);\n    };\n\n    // Stop all activeEntries.\n    function cancelAllEntries(activeEntries) {\n        for(var entry = activeEntries.pop(); entry !== undefined; entry = activeEntries.pop()) {\n            entry.stop();\n        }\n    }\n\n    // Play playlist entry.\n    // This function is called recursevly with playNext and iterates over all entries from playlist.\n    function playEntry(viewer, cameraOptions, allDone) {\n        var entry = this.playlist[this.playlistIndex];\n        if (entry) {\n            var _playNext = playNext.bind(this, viewer, cameraOptions, allDone);\n            this._activeEntries.push(entry);\n            this.entryStart.raiseEvent(entry);\n            if (entry.blocking) {\n                entry.play(_playNext, viewer.scene.camera, cameraOptions);\n            }\n            else {\n                var tour = this;\n                entry.play(function() {\n                    tour.entryEnd.raiseEvent(entry);\n                    var indx = tour._activeEntries.indexOf(entry);\n                    if (indx >= 0) {\n                        tour._activeEntries.splice(indx, 1);\n                    }\n                });\n                _playNext(viewer, cameraOptions, allDone);\n            }\n        }\n        else if(defined(allDone)) {\n            allDone(false);\n        }\n    }\n\n    // Increment playlistIndex and call playEntry if terminated isn't true.\n    function playNext(viewer, cameraOptions, allDone, terminated) {\n        var entry = this.playlist[this.playlistIndex];\n        this.entryEnd.raiseEvent(entry, terminated);\n\n        if (terminated) {\n            allDone(terminated);\n        }\n        else {\n            var indx = this._activeEntries.indexOf(entry);\n            if (indx >= 0) {\n                this._activeEntries.splice(indx, 1);\n            }\n            this.playlistIndex++;\n            playEntry.call(this, viewer, cameraOptions, allDone);\n        }\n    }\nexport default KmlTour;\n","import BoundingSphere from '../Core/BoundingSphere.js';\nimport combine from '../Core/combine.js';\nimport defined from '../Core/defined.js';\nimport EasingFunction from '../Core/EasingFunction.js';\n    /**\n     * @alias KmlTourFlyTo\n     * @constructor\n     *\n     * @param {Number} duration entry duration\n     * @param {String} flyToMode KML fly to mode: bounce, smooth, etc\n     * @param {KmlCamera|KmlLookAt} view KmlCamera or KmlLookAt\n     */\n    function KmlTourFlyTo(duration, flyToMode, view) {\n        this.type = 'KmlTourFlyTo';\n        this.blocking = true;\n        this.activeCamera = null;\n        this.activeCallback = null;\n\n        this.duration = duration;\n        this.view = view;\n        this.flyToMode = flyToMode;\n    }\n\n    /**\n     * Play this playlist entry\n     *\n     * @param {KmlTourFlyTo~DoneCallback} done function which will be called when playback ends\n     * @param {Camera} camera Cesium camera\n     * @param {Object} [cameraOptions] which will be merged with camera flyTo options. See {@link Camera#flyTo}\n     */\n    KmlTourFlyTo.prototype.play = function(done, camera, cameraOptions) {\n        this.activeCamera = camera;\n        if (defined(done) && done !== null) {\n            var self = this;\n            this.activeCallback = function(terminated) {\n                delete self.activeCallback;\n                delete self.activeCamera;\n                done(defined(terminated) ? false : terminated);\n            };\n        }\n\n        var options = this.getCameraOptions(cameraOptions);\n        if (this.view.headingPitchRoll) {\n            camera.flyTo(options);\n        }\n        else if (this.view.headingPitchRange) {\n            var target = new BoundingSphere(this.view.position);\n            camera.flyToBoundingSphere(target, options);\n        }\n    };\n\n    /**\n     * Stop execution of curent entry. Cancel camera flyTo\n     */\n    KmlTourFlyTo.prototype.stop = function() {\n        if (defined(this.activeCamera)) {\n            this.activeCamera.cancelFlight();\n        }\n        if (defined(this.activeCallback)) {\n            this.activeCallback(true);\n        }\n    };\n\n    /**\n     * Returns options for {@link Camera#flyTo} or {@link Camera#flyToBoundingSphere}\n     * depends on this.view type.\n     *\n     * @param {Object} cameraOptions options to merge with generated. See {@link Camera#flyTo}\n     * @returns {Object} {@link Camera#flyTo} or {@link Camera#flyToBoundingSphere} options\n     */\n    KmlTourFlyTo.prototype.getCameraOptions = function(cameraOptions) {\n        var options = {\n            duration: this.duration\n        };\n\n        if (defined(this.activeCallback)) {\n            options.complete = this.activeCallback;\n        }\n\n        if (this.flyToMode === 'smooth' ) {\n            options.easingFunction = EasingFunction.LINEAR_NONE;\n        }\n\n        if (this.view.headingPitchRoll) {\n            options.destination = this.view.position;\n            options.orientation = this.view.headingPitchRoll;\n        }\n        else if (this.view.headingPitchRange) {\n            options.offset = this.view.headingPitchRange;\n        }\n\n        if (defined(cameraOptions)) {\n            options = combine(options, cameraOptions);\n        }\n        return options;\n    };\n\n    /**\n     * A function that will be executed when the flight completes.\n     * @callback KmlTourFlyTo~DoneCallback\n     *\n     * @param {Boolean} terminated true if {@link KmlTourFlyTo#stop} was\n     * called before entry done playback.\n     */\nexport default KmlTourFlyTo;\n","import defined from '../Core/defined.js';\n    /**\n     * @alias KmlTourWait\n     * @constructor\n     *\n     * @param {Number} duration entry duration\n     */\n    function KmlTourWait(duration) {\n        this.type = 'KmlTourWait';\n        this.blocking = true;\n        this.duration = duration;\n\n        this.timeout = null;\n    }\n\n    /**\n     * Play this playlist entry\n     *\n     * @param {KmlTourWait~DoneCallback} done function which will be called when playback ends\n     */\n    KmlTourWait.prototype.play = function(done) {\n        var self = this;\n        this.activeCallback = done;\n        this.timeout = setTimeout(function() {\n            delete self.activeCallback;\n            done(false);\n        }, this.duration * 1000);\n    };\n\n    /**\n     * Stop execution of curent entry, cancel curent timeout\n     */\n    KmlTourWait.prototype.stop = function() {\n        clearTimeout(this.timeout);\n        if (defined(this.activeCallback)) {\n            this.activeCallback(true);\n        }\n    };\n\n    /**\n     * A function which will be called when playback ends.\n     *\n     * @callback KmlTourWait~DoneCallback\n     * @param {Boolean} terminated true if {@link KmlTourWait#stop} was\n     * called before entry done playback.\n     */\nexport default KmlTourWait;\n","import ArcType from '../Core/ArcType.js';\nimport AssociativeArray from '../Core/AssociativeArray.js';\nimport BoundingRectangle from '../Core/BoundingRectangle.js';\nimport Cartesian2 from '../Core/Cartesian2.js';\nimport Cartesian3 from '../Core/Cartesian3.js';\nimport Cartographic from '../Core/Cartographic.js';\nimport ClockRange from '../Core/ClockRange.js';\nimport ClockStep from '../Core/ClockStep.js';\nimport clone from '../Core/clone.js';\nimport Color from '../Core/Color.js';\nimport createGuid from '../Core/createGuid.js';\nimport Credit from '../Core/Credit.js';\nimport defaultValue from '../Core/defaultValue.js';\nimport defined from '../Core/defined.js';\nimport defineProperties from '../Core/defineProperties.js';\nimport DeveloperError from '../Core/DeveloperError.js';\nimport Ellipsoid from '../Core/Ellipsoid.js';\nimport Event from '../Core/Event.js';\nimport getExtensionFromUri from '../Core/getExtensionFromUri.js';\nimport getFilenameFromUri from '../Core/getFilenameFromUri.js';\nimport getTimestamp from '../Core/getTimestamp.js';\nimport HeadingPitchRange from '../Core/HeadingPitchRange.js';\nimport HeadingPitchRoll from '../Core/HeadingPitchRoll.js';\nimport Iso8601 from '../Core/Iso8601.js';\nimport JulianDate from '../Core/JulianDate.js';\nimport CesiumMath from '../Core/Math.js';\nimport NearFarScalar from '../Core/NearFarScalar.js';\nimport objectToQuery from '../Core/objectToQuery.js';\nimport oneTimeWarning from '../Core/oneTimeWarning.js';\nimport PinBuilder from '../Core/PinBuilder.js';\nimport PolygonHierarchy from '../Core/PolygonHierarchy.js';\nimport queryToObject from '../Core/queryToObject.js';\nimport Rectangle from '../Core/Rectangle.js';\nimport Resource from '../Core/Resource.js';\nimport RuntimeError from '../Core/RuntimeError.js';\nimport TimeInterval from '../Core/TimeInterval.js';\nimport TimeIntervalCollection from '../Core/TimeIntervalCollection.js';\nimport HeightReference from '../Scene/HeightReference.js';\nimport HorizontalOrigin from '../Scene/HorizontalOrigin.js';\nimport LabelStyle from '../Scene/LabelStyle.js';\nimport SceneMode from '../Scene/SceneMode.js';\nimport Autolinker from '../ThirdParty/Autolinker.js';\nimport Uri from '../ThirdParty/Uri.js';\nimport when from '../ThirdParty/when.js';\nimport zip from '../ThirdParty/zip.js';\nimport BillboardGraphics from './BillboardGraphics.js';\nimport CompositePositionProperty from './CompositePositionProperty.js';\nimport DataSource from './DataSource.js';\nimport DataSourceClock from './DataSourceClock.js';\nimport Entity from './Entity.js';\nimport EntityCluster from './EntityCluster.js';\nimport EntityCollection from './EntityCollection.js';\nimport KmlCamera from './KmlCamera.js';\nimport KmlLookAt from './KmlLookAt.js';\nimport KmlTour from './KmlTour.js';\nimport KmlTourFlyTo from './KmlTourFlyTo.js';\nimport KmlTourWait from './KmlTourWait.js';\nimport LabelGraphics from './LabelGraphics.js';\nimport PathGraphics from './PathGraphics.js';\nimport PolygonGraphics from './PolygonGraphics.js';\nimport PolylineGraphics from './PolylineGraphics.js';\nimport PositionPropertyArray from './PositionPropertyArray.js';\nimport RectangleGraphics from './RectangleGraphics.js';\nimport ReferenceProperty from './ReferenceProperty.js';\nimport SampledPositionProperty from './SampledPositionProperty.js';\nimport ScaledPositionProperty from './ScaledPositionProperty.js';\nimport TimeIntervalCollectionProperty from './TimeIntervalCollectionProperty.js';\nimport WallGraphics from './WallGraphics.js';\n\n    //This is by no means an exhaustive list of MIME types.\n    //The purpose of this list is to be able to accurately identify content embedded\n    //in KMZ files. Eventually, we can make this configurable by the end user so they can add\n    //there own content types if they have KMZ files that require it.\n    var MimeTypes = {\n        avi : 'video/x-msvideo',\n        bmp : 'image/bmp',\n        bz2 : 'application/x-bzip2',\n        chm : 'application/vnd.ms-htmlhelp',\n        css : 'text/css',\n        csv : 'text/csv',\n        doc : 'application/msword',\n        dvi : 'application/x-dvi',\n        eps : 'application/postscript',\n        flv : 'video/x-flv',\n        gif : 'image/gif',\n        gz : 'application/x-gzip',\n        htm : 'text/html',\n        html : 'text/html',\n        ico : 'image/vnd.microsoft.icon',\n        jnlp : 'application/x-java-jnlp-file',\n        jpeg : 'image/jpeg',\n        jpg : 'image/jpeg',\n        m3u : 'audio/x-mpegurl',\n        m4v : 'video/mp4',\n        mathml : 'application/mathml+xml',\n        mid : 'audio/midi',\n        midi : 'audio/midi',\n        mov : 'video/quicktime',\n        mp3 : 'audio/mpeg',\n        mp4 : 'video/mp4',\n        mp4v : 'video/mp4',\n        mpeg : 'video/mpeg',\n        mpg : 'video/mpeg',\n        odp : 'application/vnd.oasis.opendocument.presentation',\n        ods : 'application/vnd.oasis.opendocument.spreadsheet',\n        odt : 'application/vnd.oasis.opendocument.text',\n        ogg : 'application/ogg',\n        pdf : 'application/pdf',\n        png : 'image/png',\n        pps : 'application/vnd.ms-powerpoint',\n        ppt : 'application/vnd.ms-powerpoint',\n        ps : 'application/postscript',\n        qt : 'video/quicktime',\n        rdf : 'application/rdf+xml',\n        rss : 'application/rss+xml',\n        rtf : 'application/rtf',\n        svg : 'image/svg+xml',\n        swf : 'application/x-shockwave-flash',\n        text : 'text/plain',\n        tif : 'image/tiff',\n        tiff : 'image/tiff',\n        txt : 'text/plain',\n        wav : 'audio/x-wav',\n        wma : 'audio/x-ms-wma',\n        wmv : 'video/x-ms-wmv',\n        xml : 'application/xml',\n        zip : 'application/zip',\n\n        detectFromFilename : function(filename) {\n            var ext = filename.toLowerCase();\n            ext = getExtensionFromUri(ext);\n            return MimeTypes[ext];\n        }\n    };\n\n    var parser;\n    if (typeof DOMParser !== 'undefined') {\n        parser = new DOMParser();\n    }\n\n    var autolinker = new Autolinker({\n        stripPrefix : false,\n        email : false,\n        replaceFn : function(match) {\n            if (!match.protocolUrlMatch) {\n                //Prevent matching of non-explicit urls.\n                //i.e. foo.id won't match but http://foo.id will\n                return false;\n            }\n        }\n    });\n\n    var BILLBOARD_SIZE = 32;\n\n    var BILLBOARD_NEAR_DISTANCE = 2414016;\n    var BILLBOARD_NEAR_RATIO = 1.0;\n    var BILLBOARD_FAR_DISTANCE = 1.6093e+7;\n    var BILLBOARD_FAR_RATIO = 0.1;\n\n    var kmlNamespaces = [null, undefined, 'http://www.opengis.net/kml/2.2', 'http://earth.google.com/kml/2.2', 'http://earth.google.com/kml/2.1', 'http://earth.google.com/kml/2.0'];\n    var gxNamespaces = ['http://www.google.com/kml/ext/2.2'];\n    var atomNamespaces = ['http://www.w3.org/2005/Atom'];\n    var namespaces = {\n        kml : kmlNamespaces,\n        gx : gxNamespaces,\n        atom : atomNamespaces,\n        kmlgx : kmlNamespaces.concat(gxNamespaces)\n    };\n\n    // Ensure Specs/Data/KML/unsupported.kml is kept up to date with these supported types\n    var featureTypes = {\n        Document : processDocument,\n        Folder : processFolder,\n        Placemark : processPlacemark,\n        NetworkLink : processNetworkLink,\n        GroundOverlay : processGroundOverlay,\n        PhotoOverlay : processUnsupportedFeature,\n        ScreenOverlay : processUnsupportedFeature,\n        Tour : processTour\n    };\n\n    function DeferredLoading(dataSource) {\n        this._dataSource = dataSource;\n        this._deferred = when.defer();\n        this._stack = [];\n        this._promises = [];\n        this._timeoutSet = false;\n        this._used = false;\n\n        this._started = 0;\n        this._timeThreshold = 1000; // Initial load is 1 second\n    }\n\n    defineProperties(DeferredLoading.prototype, {\n        dataSource : {\n            get : function() {\n                return this._dataSource;\n            }\n        }\n    });\n\n    DeferredLoading.prototype.addNodes = function(nodes, processingData) {\n        this._stack.push({\n            nodes: nodes,\n            index: 0,\n            processingData: processingData\n        });\n        this._used = true;\n    };\n\n    DeferredLoading.prototype.addPromise = function(promise) {\n        this._promises.push(promise);\n    };\n\n    DeferredLoading.prototype.wait = function() {\n        // Case where we had a non-document/folder as the root\n        var deferred = this._deferred;\n        if (!this._used) {\n            deferred.resolve();\n        }\n\n        return when.join(deferred.promise, when.all(this._promises));\n    };\n\n    DeferredLoading.prototype.process = function() {\n        var isFirstCall = (this._stack.length === 1);\n        if (isFirstCall) {\n            this._started = KmlDataSource._getTimestamp();\n        }\n\n        return this._process(isFirstCall);\n    };\n\n    DeferredLoading.prototype._giveUpTime = function() {\n        if (this._timeoutSet) {\n            // Timeout was already set so just return\n            return;\n        }\n\n        this._timeoutSet = true;\n        this._timeThreshold = 50; // After the first load lower threshold to 0.5 seconds\n        var that = this;\n        setTimeout(function() {\n            that._timeoutSet = false;\n            that._started = KmlDataSource._getTimestamp();\n            that._process(true);\n        }, 0);\n    };\n\n    DeferredLoading.prototype._nextNode = function() {\n        var stack = this._stack;\n        var top = stack[stack.length-1];\n        var index = top.index;\n        var nodes = top.nodes;\n        if (index === nodes.length) {\n            return;\n        }\n        ++top.index;\n\n        return nodes[index];\n    };\n\n    DeferredLoading.prototype._pop = function() {\n        var stack = this._stack;\n        stack.pop();\n\n        // Return false if we are done\n        if (stack.length === 0) {\n            this._deferred.resolve();\n            return false;\n        }\n\n        return true;\n    };\n\n    DeferredLoading.prototype._process = function(isFirstCall) {\n        var dataSource = this.dataSource;\n        var processingData = this._stack[this._stack.length-1].processingData;\n\n        var child = this._nextNode();\n        while(defined(child)) {\n            var featureProcessor = featureTypes[child.localName];\n            if(defined(featureProcessor) &&\n               ((namespaces.kml.indexOf(child.namespaceURI) !== -1) || (namespaces.gx.indexOf(child.namespaceURI) !== -1))) {\n                featureProcessor(dataSource, child, processingData, this);\n\n                // Give up time and continue loading later\n                if (this._timeoutSet || (KmlDataSource._getTimestamp() > (this._started + this._timeThreshold))) {\n                    this._giveUpTime();\n                    return;\n                }\n            }\n\n            child = this._nextNode();\n        }\n\n        // If we are a recursive call from a subfolder, just return so the parent folder can continue processing\n        // If we aren't then make another call to processNodes because there is stuff still left in the queue\n        if (this._pop() && isFirstCall) {\n            this._process(true);\n        }\n    };\n\n    function isZipFile(blob) {\n        var magicBlob = blob.slice(0, Math.min(4, blob.size));\n        var deferred = when.defer();\n        var reader = new FileReader();\n        reader.addEventListener('load', function() {\n            deferred.resolve(new DataView(reader.result).getUint32(0, false) === 0x504b0304);\n        });\n        reader.addEventListener('error', function() {\n            deferred.reject(reader.error);\n        });\n        reader.readAsArrayBuffer(magicBlob);\n        return deferred.promise;\n    }\n\n    function readBlobAsText(blob) {\n        var deferred = when.defer();\n        var reader = new FileReader();\n        reader.addEventListener('load', function() {\n            deferred.resolve(reader.result);\n        });\n        reader.addEventListener('error', function() {\n            deferred.reject(reader.error);\n        });\n        reader.readAsText(blob);\n        return deferred.promise;\n    }\n\n    function insertNamespaces(text) {\n        var namespaceMap = {\n            xsi : 'http://www.w3.org/2001/XMLSchema-instance'\n        };\n        var firstPart, lastPart, reg, declaration;\n\n        for (var key in namespaceMap) {\n            if (namespaceMap.hasOwnProperty(key)) {\n                reg = RegExp('[< ]' + key + ':');\n                declaration = 'xmlns:' + key + '=';\n                if (reg.test(text) && text.indexOf(declaration) === -1) {\n                    if (!defined(firstPart)) {\n                        firstPart = text.substr(0, text.indexOf('<kml') + 4);\n                        lastPart = text.substr(firstPart.length);\n                    }\n                    firstPart += ' ' + declaration + '\"' + namespaceMap[key] + '\"';\n                }\n            }\n        }\n\n        if (defined(firstPart)) {\n            text = firstPart + lastPart;\n        }\n\n        return text;\n    }\n\n    function removeDuplicateNamespaces(text) {\n        var index = text.indexOf('xmlns:');\n        var endDeclaration = text.indexOf('>', index);\n        var namespace, startIndex, endIndex;\n\n        while ((index !== -1) && (index < endDeclaration)) {\n            namespace = text.slice(index, text.indexOf('\\\"', index));\n            startIndex = index;\n            index = text.indexOf(namespace, index + 1);\n            if (index !== -1) {\n                endIndex = text.indexOf('\\\"', (text.indexOf('\\\"', index) + 1));\n                text = text.slice(0, index -1) + text.slice(endIndex + 1, text.length);\n                index = text.indexOf('xmlns:', startIndex - 1);\n            } else {\n                index = text.indexOf('xmlns:', startIndex + 1);\n            }\n        }\n\n        return text;\n    }\n\n    function loadXmlFromZip(entry, uriResolver, deferred) {\n        entry.getData(new zip.TextWriter(), function(text) {\n            text = insertNamespaces(text);\n            text = removeDuplicateNamespaces(text);\n            uriResolver.kml = parser.parseFromString(text, 'application/xml');\n            deferred.resolve();\n        });\n    }\n\n    function loadDataUriFromZip(entry, uriResolver, deferred) {\n        var mimeType = defaultValue(MimeTypes.detectFromFilename(entry.filename), 'application/octet-stream');\n        entry.getData(new zip.Data64URIWriter(mimeType), function(dataUri) {\n            uriResolver[entry.filename] = dataUri;\n            deferred.resolve();\n        });\n    }\n\n    function embedDataUris(div, elementType, attributeName, uriResolver) {\n        var keys = uriResolver.keys;\n        var baseUri = new Uri('.');\n        var elements = div.querySelectorAll(elementType);\n        for (var i = 0; i < elements.length; i++) {\n            var element = elements[i];\n            var value = element.getAttribute(attributeName);\n            var uri = new Uri(value).resolve(baseUri).toString();\n            var index = keys.indexOf(uri);\n            if (index !== -1) {\n                var key = keys[index];\n                element.setAttribute(attributeName, uriResolver[key]);\n                if (elementType === 'a' && element.getAttribute('download') === null) {\n                    element.setAttribute('download', key);\n                }\n            }\n        }\n    }\n\n    function applyBasePath(div, elementType, attributeName, sourceResource) {\n        var elements = div.querySelectorAll(elementType);\n        for (var i = 0; i < elements.length; i++) {\n            var element = elements[i];\n            var value = element.getAttribute(attributeName);\n            var resource = resolveHref(value, sourceResource);\n            element.setAttribute(attributeName, resource.url);\n        }\n    }\n\n    // an optional context is passed to allow for some malformed kmls (those with multiple geometries with same ids) to still parse\n    // correctly, as they do in Google Earth.\n    function createEntity(node, entityCollection, context) {\n        var id = queryStringAttribute(node, 'id');\n        id = defined(id) && id.length !== 0 ? id : createGuid();\n        if (defined(context)) {\n            id = context + id;\n        }\n\n        // If we have a duplicate ID just generate one.\n        // This isn't valid KML but Google Earth handles this case.\n        var entity = entityCollection.getById(id);\n        if (defined(entity)) {\n            id = createGuid();\n            if (defined(context)) {\n                id = context + id;\n            }\n        }\n\n        entity = entityCollection.add(new Entity({id : id}));\n        if (!defined(entity.kml)) {\n            entity.addProperty('kml');\n            entity.kml = new KmlFeatureData();\n        }\n        return entity;\n    }\n\n    function isExtrudable(altitudeMode, gxAltitudeMode) {\n        return altitudeMode === 'absolute' || altitudeMode === 'relativeToGround' || gxAltitudeMode === 'relativeToSeaFloor';\n    }\n\n    function readCoordinate(value, ellipsoid) {\n        //Google Earth treats empty or missing coordinates as 0.\n        if (!defined(value)) {\n            return Cartesian3.fromDegrees(0, 0, 0, ellipsoid);\n        }\n\n        var digits = value.match(/[^\\s,\\n]+/g);\n        if (!defined(digits)) {\n            return Cartesian3.fromDegrees(0, 0, 0, ellipsoid);\n        }\n\n        var longitude = parseFloat(digits[0]);\n        var latitude = parseFloat(digits[1]);\n        var height = parseFloat(digits[2]);\n\n        longitude = isNaN(longitude) ? 0.0 : longitude;\n        latitude = isNaN(latitude) ? 0.0 : latitude;\n        height = isNaN(height) ? 0.0 : height;\n\n        return Cartesian3.fromDegrees(longitude, latitude, height, ellipsoid);\n    }\n\n    function readCoordinates(element, ellipsoid) {\n        if (!defined(element)) {\n            return undefined;\n        }\n\n        var tuples = element.textContent.match(/[^\\s\\n]+/g);\n        if (!defined(tuples)) {\n            return undefined;\n        }\n\n        var length = tuples.length;\n        var result = new Array(length);\n        var resultIndex = 0;\n        for (var i = 0; i < length; i++) {\n            result[resultIndex++] = readCoordinate(tuples[i], ellipsoid);\n        }\n        return result;\n    }\n\n    function queryNumericAttribute(node, attributeName) {\n        if (!defined(node)) {\n            return undefined;\n        }\n\n        var value = node.getAttribute(attributeName);\n        if (value !== null) {\n            var result = parseFloat(value);\n            return !isNaN(result) ? result : undefined;\n        }\n        return undefined;\n    }\n\n    function queryStringAttribute(node, attributeName) {\n        if (!defined(node)) {\n            return undefined;\n        }\n        var value = node.getAttribute(attributeName);\n        return value !== null ? value : undefined;\n    }\n\n    function queryFirstNode(node, tagName, namespace) {\n        if (!defined(node)) {\n            return undefined;\n        }\n        var childNodes = node.childNodes;\n        var length = childNodes.length;\n        for (var q = 0; q < length; q++) {\n            var child = childNodes[q];\n            if (child.localName === tagName && namespace.indexOf(child.namespaceURI) !== -1) {\n                return child;\n            }\n        }\n        return undefined;\n    }\n\n    function queryNodes(node, tagName, namespace) {\n        if (!defined(node)) {\n            return undefined;\n        }\n        var result = [];\n        var childNodes = node.getElementsByTagNameNS('*', tagName);\n        var length = childNodes.length;\n        for (var q = 0; q < length; q++) {\n            var child = childNodes[q];\n            if (child.localName === tagName && namespace.indexOf(child.namespaceURI) !== -1) {\n                result.push(child);\n            }\n        }\n        return result;\n    }\n\n    function queryChildNodes(node, tagName, namespace) {\n        if (!defined(node)) {\n            return [];\n        }\n        var result = [];\n        var childNodes = node.childNodes;\n        var length = childNodes.length;\n        for (var q = 0; q < length; q++) {\n            var child = childNodes[q];\n            if (child.localName === tagName && namespace.indexOf(child.namespaceURI) !== -1) {\n                result.push(child);\n            }\n        }\n        return result;\n    }\n\n    function queryNumericValue(node, tagName, namespace) {\n        var resultNode = queryFirstNode(node, tagName, namespace);\n        if (defined(resultNode)) {\n            var result = parseFloat(resultNode.textContent);\n            return !isNaN(result) ? result : undefined;\n        }\n        return undefined;\n    }\n\n    function queryStringValue(node, tagName, namespace) {\n        var result = queryFirstNode(node, tagName, namespace);\n        if (defined(result)) {\n            return result.textContent.trim();\n        }\n        return undefined;\n    }\n\n    function queryBooleanValue(node, tagName, namespace) {\n        var result = queryFirstNode(node, tagName, namespace);\n        if (defined(result)) {\n            var value = result.textContent.trim();\n            return value === '1' || /^true$/i.test(value);\n        }\n        return undefined;\n    }\n\n    function resolveHref(href, sourceResource, uriResolver) {\n        if (!defined(href)) {\n            return undefined;\n        }\n\n        var resource;\n        if (defined(uriResolver)) {\n            var blob = uriResolver[href];\n            if (defined(blob)) {\n                resource = new Resource({\n                    url: blob\n                });\n            } else {\n                // Needed for multiple levels of KML files in a KMZ\n                var baseUri = new Uri(sourceResource.getUrlComponent());\n                var uri = new Uri(href);\n                blob = uriResolver[uri.resolve(baseUri)];\n                if (defined(blob)) {\n                    resource = new Resource({\n                        url: blob\n                    });\n                }\n            }\n        }\n\n        if (!defined(resource)) {\n            resource = sourceResource.getDerivedResource({\n                url: href\n            });\n        }\n\n        return resource;\n    }\n\n    var colorOptions = {\n        maximumRed : undefined,\n        red : undefined,\n        maximumGreen : undefined,\n        green : undefined,\n        maximumBlue : undefined,\n        blue : undefined\n    };\n\n    function parseColorString(value, isRandom) {\n        if (!defined(value) || /^\\s*$/gm.test(value)) {\n            return undefined;\n        }\n\n        if (value[0] === '#') {\n            value = value.substring(1);\n        }\n\n        var alpha = parseInt(value.substring(0, 2), 16) / 255.0;\n        var blue = parseInt(value.substring(2, 4), 16) / 255.0;\n        var green = parseInt(value.substring(4, 6), 16) / 255.0;\n        var red = parseInt(value.substring(6, 8), 16) / 255.0;\n\n        if (!isRandom) {\n            return new Color(red, green, blue, alpha);\n        }\n\n        if (red > 0) {\n            colorOptions.maximumRed = red;\n            colorOptions.red = undefined;\n        } else {\n            colorOptions.maximumRed = undefined;\n            colorOptions.red = 0;\n        }\n        if (green > 0) {\n            colorOptions.maximumGreen = green;\n            colorOptions.green = undefined;\n        } else {\n            colorOptions.maximumGreen = undefined;\n            colorOptions.green = 0;\n        }\n        if (blue > 0) {\n            colorOptions.maximumBlue = blue;\n            colorOptions.blue = undefined;\n        } else {\n            colorOptions.maximumBlue = undefined;\n            colorOptions.blue = 0;\n        }\n        colorOptions.alpha = alpha;\n        return Color.fromRandom(colorOptions);\n    }\n\n    function queryColorValue(node, tagName, namespace) {\n        var value = queryStringValue(node, tagName, namespace);\n        if (!defined(value)) {\n            return undefined;\n        }\n        return parseColorString(value, queryStringValue(node, 'colorMode', namespace) === 'random');\n    }\n\n    function processTimeStamp(featureNode) {\n        var node = queryFirstNode(featureNode, 'TimeStamp', namespaces.kmlgx);\n        var whenString = queryStringValue(node, 'when', namespaces.kmlgx);\n\n        if (!defined(node) || !defined(whenString) || whenString.length === 0) {\n            return undefined;\n        }\n\n        //According to the KML spec, a TimeStamp represents a \"single moment in time\"\n        //However, since Cesium animates much differently than Google Earth, that doesn't\n        //Make much sense here.  Instead, we use the TimeStamp as the moment the feature\n        //comes into existence.  This works much better and gives a similar feel to\n        //GE's experience.\n        var when = JulianDate.fromIso8601(whenString);\n        var result = new TimeIntervalCollection();\n        result.addInterval(new TimeInterval({\n            start : when,\n            stop : Iso8601.MAXIMUM_VALUE\n        }));\n        return result;\n    }\n\n    function processTimeSpan(featureNode) {\n        var node = queryFirstNode(featureNode, 'TimeSpan', namespaces.kmlgx);\n        if (!defined(node)) {\n            return undefined;\n        }\n        var result;\n\n        var beginNode = queryFirstNode(node, 'begin', namespaces.kmlgx);\n        var beginDate = defined(beginNode) ? JulianDate.fromIso8601(beginNode.textContent) : undefined;\n\n        var endNode = queryFirstNode(node, 'end', namespaces.kmlgx);\n        var endDate = defined(endNode) ? JulianDate.fromIso8601(endNode.textContent) : undefined;\n\n        if (defined(beginDate) && defined(endDate)) {\n            if (JulianDate.lessThan(endDate, beginDate)) {\n                var tmp = beginDate;\n                beginDate = endDate;\n                endDate = tmp;\n            }\n            result = new TimeIntervalCollection();\n            result.addInterval(new TimeInterval({\n                start : beginDate,\n                stop : endDate\n            }));\n        } else if (defined(beginDate)) {\n            result = new TimeIntervalCollection();\n            result.addInterval(new TimeInterval({\n                start : beginDate,\n                stop : Iso8601.MAXIMUM_VALUE\n            }));\n        } else if (defined(endDate)) {\n            result = new TimeIntervalCollection();\n            result.addInterval(new TimeInterval({\n                start : Iso8601.MINIMUM_VALUE,\n                stop : endDate\n            }));\n        }\n\n        return result;\n    }\n\n    function createDefaultBillboard() {\n        var billboard = new BillboardGraphics();\n        billboard.width = BILLBOARD_SIZE;\n        billboard.height = BILLBOARD_SIZE;\n        billboard.scaleByDistance = new NearFarScalar(BILLBOARD_NEAR_DISTANCE, BILLBOARD_NEAR_RATIO, BILLBOARD_FAR_DISTANCE, BILLBOARD_FAR_RATIO);\n        billboard.pixelOffsetScaleByDistance = new NearFarScalar(BILLBOARD_NEAR_DISTANCE, BILLBOARD_NEAR_RATIO, BILLBOARD_FAR_DISTANCE, BILLBOARD_FAR_RATIO);\n        return billboard;\n    }\n\n    function createDefaultPolygon() {\n        var polygon = new PolygonGraphics();\n        polygon.outline = true;\n        polygon.outlineColor = Color.WHITE;\n        return polygon;\n    }\n\n    function createDefaultLabel() {\n        var label = new LabelGraphics();\n        label.translucencyByDistance = new NearFarScalar(3000000, 1.0, 5000000, 0.0);\n        label.pixelOffset = new Cartesian2(17, 0);\n        label.horizontalOrigin = HorizontalOrigin.LEFT;\n        label.font = '16px sans-serif';\n        label.style = LabelStyle.FILL_AND_OUTLINE;\n        return label;\n    }\n\n    function getIconHref(iconNode, dataSource, sourceResource, uriResolver, canRefresh) {\n        var href = queryStringValue(iconNode, 'href', namespaces.kml);\n        if (!defined(href) || (href.length === 0)) {\n            return undefined;\n        }\n\n        if (href.indexOf('root://icons/palette-') === 0) {\n            var palette = href.charAt(21);\n\n            // Get the icon number\n            var x = defaultValue(queryNumericValue(iconNode, 'x', namespaces.gx), 0);\n            var y = defaultValue(queryNumericValue(iconNode, 'y', namespaces.gx), 0);\n            x = Math.min(x / 32, 7);\n            y = 7 - Math.min(y / 32, 7);\n            var iconNum = (8 * y) + x;\n\n            href = 'https://maps.google.com/mapfiles/kml/pal' + palette + '/icon' + iconNum + '.png';\n        }\n\n        var hrefResource = resolveHref(href, sourceResource, uriResolver);\n\n        if (canRefresh) {\n            var refreshMode = queryStringValue(iconNode, 'refreshMode', namespaces.kml);\n            var viewRefreshMode = queryStringValue(iconNode, 'viewRefreshMode', namespaces.kml);\n            if (refreshMode === 'onInterval' || refreshMode === 'onExpire') {\n                oneTimeWarning('kml-refreshMode-' + refreshMode, 'KML - Unsupported Icon refreshMode: ' + refreshMode);\n            } else if (viewRefreshMode === 'onStop' || viewRefreshMode === 'onRegion') {\n                oneTimeWarning('kml-refreshMode-' + viewRefreshMode, 'KML - Unsupported Icon viewRefreshMode: ' + viewRefreshMode);\n            }\n\n            var viewBoundScale = defaultValue(queryStringValue(iconNode, 'viewBoundScale', namespaces.kml), 1.0);\n            var defaultViewFormat = (viewRefreshMode === 'onStop') ? 'BBOX=[bboxWest],[bboxSouth],[bboxEast],[bboxNorth]' : '';\n            var viewFormat = defaultValue(queryStringValue(iconNode, 'viewFormat', namespaces.kml), defaultViewFormat);\n            var httpQuery = queryStringValue(iconNode, 'httpQuery', namespaces.kml);\n            if (defined(viewFormat)) {\n                hrefResource.setQueryParameters(queryToObject(cleanupString(viewFormat)));\n            }\n            if (defined(httpQuery)) {\n                hrefResource.setQueryParameters(queryToObject(cleanupString(httpQuery)));\n            }\n\n            var ellipsoid = dataSource._ellipsoid;\n            processNetworkLinkQueryString(hrefResource, dataSource._camera, dataSource._canvas, viewBoundScale, dataSource._lastCameraView.bbox, ellipsoid);\n\n            return hrefResource;\n        }\n\n        return hrefResource;\n    }\n\n    function processBillboardIcon(dataSource, node, targetEntity, sourceResource, uriResolver) {\n        var scale = queryNumericValue(node, 'scale', namespaces.kml);\n        var heading = queryNumericValue(node, 'heading', namespaces.kml);\n        var color = queryColorValue(node, 'color', namespaces.kml);\n\n        var iconNode = queryFirstNode(node, 'Icon', namespaces.kml);\n        var icon = getIconHref(iconNode, dataSource, sourceResource, uriResolver, false);\n\n        // If icon tags are present but blank, we do not want to show an icon\n        if (defined(iconNode) && !defined(icon)) {\n            icon = false;\n        }\n\n        var x = queryNumericValue(iconNode, 'x', namespaces.gx);\n        var y = queryNumericValue(iconNode, 'y', namespaces.gx);\n        var w = queryNumericValue(iconNode, 'w', namespaces.gx);\n        var h = queryNumericValue(iconNode, 'h', namespaces.gx);\n\n        var hotSpotNode = queryFirstNode(node, 'hotSpot', namespaces.kml);\n        var hotSpotX = queryNumericAttribute(hotSpotNode, 'x');\n        var hotSpotY = queryNumericAttribute(hotSpotNode, 'y');\n        var hotSpotXUnit = queryStringAttribute(hotSpotNode, 'xunits');\n        var hotSpotYUnit = queryStringAttribute(hotSpotNode, 'yunits');\n\n        var billboard = targetEntity.billboard;\n        if (!defined(billboard)) {\n            billboard = createDefaultBillboard();\n            targetEntity.billboard = billboard;\n        }\n\n        billboard.image = icon;\n        billboard.scale = scale;\n        billboard.color = color;\n\n        if (defined(x) || defined(y) || defined(w) || defined(h)) {\n            billboard.imageSubRegion = new BoundingRectangle(x, y, w, h);\n        }\n\n        //GE treats a heading of zero as no heading\n        //You can still point north using a 360 degree angle (or any multiple of 360)\n        if (defined(heading) && heading !== 0) {\n            billboard.rotation = CesiumMath.toRadians(-heading);\n            billboard.alignedAxis = Cartesian3.UNIT_Z;\n        }\n\n        //Hotpot is the KML equivalent of pixel offset\n        //The hotspot origin is the lower left, but we leave\n        //our billboard origin at the center and simply\n        //modify the pixel offset to take this into account\n        scale = defaultValue(scale, 1.0);\n\n        var xOffset;\n        var yOffset;\n        if (defined(hotSpotX)) {\n            if (hotSpotXUnit === 'pixels') {\n                xOffset = -hotSpotX * scale;\n            } else if (hotSpotXUnit === 'insetPixels') {\n                xOffset = (hotSpotX - BILLBOARD_SIZE) * scale;\n            } else if (hotSpotXUnit === 'fraction') {\n                xOffset = -hotSpotX * BILLBOARD_SIZE * scale;\n            }\n            xOffset += BILLBOARD_SIZE * 0.5 * scale;\n        }\n\n        if (defined(hotSpotY)) {\n            if (hotSpotYUnit === 'pixels') {\n                yOffset = hotSpotY * scale;\n            } else if (hotSpotYUnit === 'insetPixels') {\n                yOffset = (-hotSpotY + BILLBOARD_SIZE) * scale;\n            } else if (hotSpotYUnit === 'fraction') {\n                yOffset = hotSpotY * BILLBOARD_SIZE * scale;\n            }\n\n            yOffset -= BILLBOARD_SIZE * 0.5 * scale;\n        }\n\n        if (defined(xOffset) || defined(yOffset)) {\n            billboard.pixelOffset = new Cartesian2(xOffset, yOffset);\n        }\n    }\n\n    function applyStyle(dataSource, styleNode, targetEntity, sourceResource, uriResolver) {\n        for (var i = 0, len = styleNode.childNodes.length; i < len; i++) {\n            var node = styleNode.childNodes.item(i);\n            if (node.localName === 'IconStyle') {\n                processBillboardIcon(dataSource, node, targetEntity, sourceResource, uriResolver);\n            } else if (node.localName === 'LabelStyle') {\n                var label = targetEntity.label;\n                if (!defined(label)) {\n                    label = createDefaultLabel();\n                    targetEntity.label = label;\n                }\n                label.scale = defaultValue(queryNumericValue(node, 'scale', namespaces.kml), label.scale);\n                label.fillColor = defaultValue(queryColorValue(node, 'color', namespaces.kml), label.fillColor);\n                label.text = targetEntity.name;\n            } else if (node.localName === 'LineStyle') {\n                var polyline = targetEntity.polyline;\n                if (!defined(polyline)) {\n                    polyline = new PolylineGraphics();\n                    targetEntity.polyline = polyline;\n                }\n                polyline.width = queryNumericValue(node, 'width', namespaces.kml);\n                polyline.material = queryColorValue(node, 'color', namespaces.kml);\n                if (defined(queryColorValue(node, 'outerColor', namespaces.gx))) {\n                    oneTimeWarning('kml-gx:outerColor', 'KML - gx:outerColor is not supported in a LineStyle');\n                }\n                if (defined(queryNumericValue(node, 'outerWidth', namespaces.gx))) {\n                    oneTimeWarning('kml-gx:outerWidth', 'KML - gx:outerWidth is not supported in a LineStyle');\n                }\n                if (defined(queryNumericValue(node, 'physicalWidth', namespaces.gx))) {\n                    oneTimeWarning('kml-gx:physicalWidth', 'KML - gx:physicalWidth is not supported in a LineStyle');\n                }\n                if (defined(queryBooleanValue(node, 'labelVisibility', namespaces.gx))) {\n                    oneTimeWarning('kml-gx:labelVisibility', 'KML - gx:labelVisibility is not supported in a LineStyle');\n                }\n            } else if (node.localName === 'PolyStyle') {\n                var polygon = targetEntity.polygon;\n                if (!defined(polygon)) {\n                    polygon = createDefaultPolygon();\n                    targetEntity.polygon = polygon;\n                }\n                polygon.material = defaultValue(queryColorValue(node, 'color', namespaces.kml), polygon.material);\n                polygon.fill = defaultValue(queryBooleanValue(node, 'fill', namespaces.kml), polygon.fill);\n                polygon.outline = defaultValue(queryBooleanValue(node, 'outline', namespaces.kml), polygon.outline);\n            } else if (node.localName === 'BalloonStyle') {\n                var bgColor = defaultValue(parseColorString(queryStringValue(node, 'bgColor', namespaces.kml)), Color.WHITE);\n                var textColor = defaultValue(parseColorString(queryStringValue(node, 'textColor', namespaces.kml)), Color.BLACK);\n                var text = queryStringValue(node, 'text', namespaces.kml);\n\n                //This is purely an internal property used in style processing,\n                //it never ends up on the final entity.\n                targetEntity.addProperty('balloonStyle');\n                targetEntity.balloonStyle = {\n                    bgColor : bgColor,\n                    textColor : textColor,\n                    text : text\n                };\n            } else if (node.localName === 'ListStyle') {\n                var listItemType = queryStringValue(node, 'listItemType', namespaces.kml);\n                if (listItemType === 'radioFolder' || listItemType === 'checkOffOnly') {\n                    oneTimeWarning('kml-listStyle-' + listItemType, 'KML - Unsupported ListStyle with listItemType: ' + listItemType);\n                }\n            }\n        }\n    }\n\n    //Processes and merges any inline styles for the provided node into the provided entity.\n    function computeFinalStyle(dataSource, placeMark, styleCollection, sourceResource, uriResolver) {\n        var result = new Entity();\n        var styleEntity;\n\n        //Google earth seems to always use the last inline Style/StyleMap only\n        var styleIndex = -1;\n        var childNodes = placeMark.childNodes;\n        var length = childNodes.length;\n        for (var q = 0; q < length; q++) {\n            var child = childNodes[q];\n            if (child.localName === 'Style' || child.localName === 'StyleMap') {\n                styleIndex = q;\n            }\n        }\n\n        if (styleIndex !== -1) {\n            var inlineStyleNode = childNodes[styleIndex];\n            if (inlineStyleNode.localName === 'Style') {\n                applyStyle(dataSource, inlineStyleNode, result, sourceResource, uriResolver);\n            } else { // StyleMap\n                var pairs = queryChildNodes(inlineStyleNode, 'Pair', namespaces.kml);\n                for (var p = 0; p < pairs.length; p++) {\n                    var pair = pairs[p];\n                    var key = queryStringValue(pair, 'key', namespaces.kml);\n                    if (key === 'normal') {\n                        var styleUrl = queryStringValue(pair, 'styleUrl', namespaces.kml);\n                        if (defined(styleUrl)) {\n                            styleEntity = styleCollection.getById(styleUrl);\n                            if (!defined(styleEntity)) {\n                                styleEntity = styleCollection.getById('#' + styleUrl);\n                            }\n                            if (defined(styleEntity)) {\n                                result.merge(styleEntity);\n                            }\n                        } else {\n                            var node = queryFirstNode(pair, 'Style', namespaces.kml);\n                            applyStyle(dataSource, node, result, sourceResource, uriResolver);\n                        }\n                    } else {\n                        oneTimeWarning('kml-styleMap-' + key, 'KML - Unsupported StyleMap key: ' + key);\n                    }\n                }\n            }\n        }\n\n        //Google earth seems to always use the first external style only.\n        var externalStyle = queryStringValue(placeMark, 'styleUrl', namespaces.kml);\n        if (defined(externalStyle)) {\n            var id = externalStyle;\n            if (externalStyle[0] !== '#' && externalStyle.indexOf('#') !== -1) {\n                var tokens = externalStyle.split('#');\n                var uri = tokens[0];\n                var resource = sourceResource.getDerivedResource({\n                    url: uri\n                });\n\n                id = resource.getUrlComponent() + '#' + tokens[1];\n            }\n\n            styleEntity = styleCollection.getById(id);\n            if (!defined(styleEntity)) {\n                styleEntity = styleCollection.getById('#' + id);\n            }\n            if (defined(styleEntity)) {\n                result.merge(styleEntity);\n            }\n        }\n\n        return result;\n    }\n\n    //Asynchronously processes an external style file.\n    function processExternalStyles(dataSource, resource, styleCollection) {\n        return resource.fetchXML().then(function(styleKml) {\n            return processStyles(dataSource, styleKml, styleCollection, resource, true);\n        });\n    }\n\n    //Processes all shared and external styles and stores\n    //their id into the provided styleCollection.\n    //Returns an array of promises that will resolve when\n    //each style is loaded.\n    function processStyles(dataSource, kml, styleCollection, sourceResource, isExternal, uriResolver) {\n        var i;\n        var id;\n        var styleEntity;\n\n        var node;\n        var styleNodes = queryNodes(kml, 'Style', namespaces.kml);\n        if (defined(styleNodes)) {\n            var styleNodesLength = styleNodes.length;\n            for (i = 0; i < styleNodesLength; i++) {\n                node = styleNodes[i];\n                id = queryStringAttribute(node, 'id');\n                if (defined(id)) {\n                    id = '#' + id;\n                    if (isExternal && defined(sourceResource)) {\n                        id = sourceResource.getUrlComponent() + id;\n                    }\n                    if (!defined(styleCollection.getById(id))) {\n                        styleEntity = new Entity({\n                            id : id\n                        });\n                        styleCollection.add(styleEntity);\n                        applyStyle(dataSource, node, styleEntity, sourceResource, uriResolver);\n                    }\n                }\n            }\n        }\n\n        var styleMaps = queryNodes(kml, 'StyleMap', namespaces.kml);\n        if (defined(styleMaps)) {\n            var styleMapsLength = styleMaps.length;\n            for (i = 0; i < styleMapsLength; i++) {\n                var styleMap = styleMaps[i];\n                id = queryStringAttribute(styleMap, 'id');\n                if (defined(id)) {\n                    var pairs = queryChildNodes(styleMap, 'Pair', namespaces.kml);\n                    for (var p = 0; p < pairs.length; p++) {\n                        var pair = pairs[p];\n                        var key = queryStringValue(pair, 'key', namespaces.kml);\n                        if (key === 'normal') {\n                            id = '#' + id;\n                            if (isExternal && defined(sourceResource)) {\n                                id = sourceResource.getUrlComponent() + id;\n                            }\n                            if (!defined(styleCollection.getById(id))) {\n                                styleEntity = styleCollection.getOrCreateEntity(id);\n\n                                var styleUrl = queryStringValue(pair, 'styleUrl', namespaces.kml);\n                                if (defined(styleUrl)) {\n                                    if (styleUrl[0] !== '#') {\n                                        styleUrl = '#' + styleUrl;\n                                    }\n\n                                    if (isExternal && defined(sourceResource)) {\n                                        styleUrl = sourceResource.getUrlComponent() + styleUrl;\n                                    }\n                                    var base = styleCollection.getById(styleUrl);\n\n                                    if (defined(base)) {\n                                        styleEntity.merge(base);\n                                    }\n                                } else {\n                                    node = queryFirstNode(pair, 'Style', namespaces.kml);\n                                    applyStyle(dataSource, node, styleEntity, sourceResource, uriResolver);\n                                }\n                            }\n                        } else {\n                            oneTimeWarning('kml-styleMap-' + key, 'KML - Unsupported StyleMap key: ' + key);\n                        }\n                    }\n                }\n            }\n        }\n\n        var promises = [];\n        var styleUrlNodes = kml.getElementsByTagName('styleUrl');\n        var styleUrlNodesLength = styleUrlNodes.length;\n        for (i = 0; i < styleUrlNodesLength; i++) {\n            var styleReference = styleUrlNodes[i].textContent;\n            if (styleReference[0] !== '#') {\n                //According to the spec, all local styles should start with a #\n                //and everything else is an external style that has a # seperating\n                //the URL of the document and the style.  However, Google Earth\n                //also accepts styleUrls without a # as meaning a local style.\n                var tokens = styleReference.split('#');\n                if (tokens.length === 2) {\n                    var uri = tokens[0];\n                    var resource = sourceResource.getDerivedResource({\n                        url: uri\n                    });\n\n                    promises.push(processExternalStyles(dataSource, resource, styleCollection));\n                }\n            }\n        }\n\n        return promises;\n    }\n\n    function createDropLine(entityCollection, entity, styleEntity) {\n        var entityPosition = new ReferenceProperty(entityCollection, entity.id, ['position']);\n        var surfacePosition = new ScaledPositionProperty(entity.position);\n        entity.polyline = defined(styleEntity.polyline) ? styleEntity.polyline.clone() : new PolylineGraphics();\n        entity.polyline.positions = new PositionPropertyArray([entityPosition, surfacePosition]);\n    }\n\n    function heightReferenceFromAltitudeMode(altitudeMode, gxAltitudeMode) {\n        if (!defined(altitudeMode) && !defined(gxAltitudeMode) || altitudeMode === 'clampToGround') {\n            return HeightReference.CLAMP_TO_GROUND;\n        }\n\n        if (altitudeMode === 'relativeToGround') {\n            return HeightReference.RELATIVE_TO_GROUND;\n        }\n\n        if (altitudeMode === 'absolute') {\n            return HeightReference.NONE;\n        }\n\n        if (gxAltitudeMode === 'clampToSeaFloor') {\n            oneTimeWarning('kml-gx:altitudeMode-clampToSeaFloor', 'KML - <gx:altitudeMode>:clampToSeaFloor is currently not supported, using <kml:altitudeMode>:clampToGround.');\n            return HeightReference.CLAMP_TO_GROUND;\n        }\n\n        if (gxAltitudeMode === 'relativeToSeaFloor') {\n            oneTimeWarning('kml-gx:altitudeMode-relativeToSeaFloor', 'KML - <gx:altitudeMode>:relativeToSeaFloor is currently not supported, using <kml:altitudeMode>:relativeToGround.');\n            return HeightReference.RELATIVE_TO_GROUND;\n        }\n\n        if (defined(altitudeMode)) {\n            oneTimeWarning('kml-altitudeMode-unknown', 'KML - Unknown <kml:altitudeMode>:' + altitudeMode + ', using <kml:altitudeMode>:CLAMP_TO_GROUND.');\n        } else {\n            oneTimeWarning('kml-gx:altitudeMode-unknown', 'KML - Unknown <gx:altitudeMode>:' + gxAltitudeMode + ', using <kml:altitudeMode>:CLAMP_TO_GROUND.');\n        }\n\n        // Clamp to ground is the default\n        return HeightReference.CLAMP_TO_GROUND;\n    }\n\n    function createPositionPropertyFromAltitudeMode(property, altitudeMode, gxAltitudeMode) {\n        if (gxAltitudeMode === 'relativeToSeaFloor' || altitudeMode === 'absolute' || altitudeMode === 'relativeToGround') {\n            //Just return the ellipsoid referenced property until we support MSL\n            return property;\n        }\n\n        if ((defined(altitudeMode) && altitudeMode !== 'clampToGround') || //\n            (defined(gxAltitudeMode) && gxAltitudeMode !== 'clampToSeaFloor')) {\n            oneTimeWarning('kml-altitudeMode-unknown', 'KML - Unknown altitudeMode: ' + defaultValue(altitudeMode, gxAltitudeMode));\n        }\n\n        // Clamp to ground is the default\n        return new ScaledPositionProperty(property);\n    }\n\n    function createPositionPropertyArrayFromAltitudeMode(properties, altitudeMode, gxAltitudeMode, ellipsoid) {\n        if (!defined(properties)) {\n            return undefined;\n        }\n\n        if (gxAltitudeMode === 'relativeToSeaFloor' || altitudeMode === 'absolute' || altitudeMode === 'relativeToGround') {\n            //Just return the ellipsoid referenced property until we support MSL\n            return properties;\n        }\n\n        if ((defined(altitudeMode) && altitudeMode !== 'clampToGround') || //\n            (defined(gxAltitudeMode) && gxAltitudeMode !== 'clampToSeaFloor')) {\n            oneTimeWarning('kml-altitudeMode-unknown', 'KML - Unknown altitudeMode: ' + defaultValue(altitudeMode, gxAltitudeMode));\n        }\n\n        // Clamp to ground is the default\n        var propertiesLength = properties.length;\n        for (var i = 0; i < propertiesLength; i++) {\n            var property = properties[i];\n            ellipsoid.scaleToGeodeticSurface(property, property);\n        }\n        return properties;\n    }\n\n    function processPositionGraphics(dataSource, entity, styleEntity, heightReference) {\n        var label = entity.label;\n        if (!defined(label)) {\n            label = defined(styleEntity.label) ? styleEntity.label.clone() : createDefaultLabel();\n            entity.label = label;\n        }\n        label.text = entity.name;\n\n        var billboard = entity.billboard;\n        if (!defined(billboard)) {\n            billboard = defined(styleEntity.billboard) ? styleEntity.billboard.clone() : createDefaultBillboard();\n            entity.billboard = billboard;\n        }\n\n        if (!defined(billboard.image)) {\n            billboard.image = dataSource._pinBuilder.fromColor(Color.YELLOW, 64);\n\n        // If there were empty <Icon> tags in the KML, then billboard.image was set to false above\n        // However, in this case, the false value would have been converted to a property afterwards\n        // Thus, we check if billboard.image is defined with value of false\n        } else if (!billboard.image.getValue()) {\n            billboard.image = undefined;\n        }\n\n        var scale = 1.0;\n        if (defined(billboard.scale)) {\n            scale = billboard.scale.getValue();\n            if (scale !== 0) {\n                label.pixelOffset = new Cartesian2((scale * 16) + 1, 0);\n            } else {\n                //Minor tweaks to better match Google Earth.\n                label.pixelOffset = undefined;\n                label.horizontalOrigin = undefined;\n            }\n        }\n\n        if (defined(heightReference) && dataSource._clampToGround) {\n            billboard.heightReference = heightReference;\n            label.heightReference = heightReference;\n        }\n    }\n\n    function processPathGraphics(entity, styleEntity) {\n        var path = entity.path;\n        if (!defined(path)) {\n            path = new PathGraphics();\n            path.leadTime = 0;\n            entity.path = path;\n        }\n\n        var polyline = styleEntity.polyline;\n        if (defined(polyline)) {\n            path.material = polyline.material;\n            path.width = polyline.width;\n        }\n    }\n\n    function processPoint(dataSource, entityCollection, geometryNode, entity, styleEntity) {\n        var coordinatesString = queryStringValue(geometryNode, 'coordinates', namespaces.kml);\n        var altitudeMode = queryStringValue(geometryNode, 'altitudeMode', namespaces.kml);\n        var gxAltitudeMode = queryStringValue(geometryNode, 'altitudeMode', namespaces.gx);\n        var extrude = queryBooleanValue(geometryNode, 'extrude', namespaces.kml);\n        var ellipsoid = dataSource._ellipsoid;\n        var position = readCoordinate(coordinatesString, ellipsoid);\n\n        entity.position = position;\n        processPositionGraphics(dataSource, entity, styleEntity, heightReferenceFromAltitudeMode(altitudeMode, gxAltitudeMode));\n\n        if (extrude && isExtrudable(altitudeMode, gxAltitudeMode)) {\n            createDropLine(entityCollection, entity, styleEntity);\n        }\n\n        return true;\n    }\n\n    function processLineStringOrLinearRing(dataSource, entityCollection, geometryNode, entity, styleEntity) {\n        var coordinatesNode = queryFirstNode(geometryNode, 'coordinates', namespaces.kml);\n        var altitudeMode = queryStringValue(geometryNode, 'altitudeMode', namespaces.kml);\n        var gxAltitudeMode = queryStringValue(geometryNode, 'altitudeMode', namespaces.gx);\n        var extrude = queryBooleanValue(geometryNode, 'extrude', namespaces.kml);\n        var tessellate = queryBooleanValue(geometryNode, 'tessellate', namespaces.kml);\n        var canExtrude = isExtrudable(altitudeMode, gxAltitudeMode);\n        var zIndex = queryNumericValue(geometryNode, 'drawOrder', namespaces.gx);\n\n        var ellipsoid = dataSource._ellipsoid;\n        var coordinates = readCoordinates(coordinatesNode, ellipsoid);\n        var polyline = styleEntity.polyline;\n        if (canExtrude && extrude) {\n            var wall = new WallGraphics();\n            entity.wall = wall;\n            wall.positions = coordinates;\n            var polygon = styleEntity.polygon;\n\n            if (defined(polygon)) {\n                wall.fill = polygon.fill;\n                wall.material = polygon.material;\n            }\n\n            //Always outline walls so they show up in 2D.\n            wall.outline = true;\n            if (defined(polyline)) {\n                wall.outlineColor = defined(polyline.material) ? polyline.material.color : Color.WHITE;\n                wall.outlineWidth = polyline.width;\n            } else if (defined(polygon)) {\n                wall.outlineColor = defined(polygon.material) ? polygon.material.color : Color.WHITE;\n            }\n        } else if (dataSource._clampToGround && !canExtrude && tessellate) {\n            var polylineGraphics = new PolylineGraphics();\n            polylineGraphics.clampToGround = true;\n            entity.polyline = polylineGraphics;\n            polylineGraphics.positions = coordinates;\n            if (defined(polyline)) {\n                polylineGraphics.material = defined(polyline.material) ? polyline.material.color.getValue(Iso8601.MINIMUM_VALUE) : Color.WHITE;\n                polylineGraphics.width = defaultValue(polyline.width, 1.0);\n            } else {\n                polylineGraphics.material = Color.WHITE;\n                polylineGraphics.width = 1.0;\n            }\n            polylineGraphics.zIndex = zIndex;\n        } else {\n            if (defined(zIndex)) {\n                oneTimeWarning('kml-gx:drawOrder', 'KML - gx:drawOrder is not supported in LineStrings when clampToGround is false');\n            }\n\n            polyline = defined(polyline) ? polyline.clone() : new PolylineGraphics();\n            entity.polyline = polyline;\n            polyline.positions = createPositionPropertyArrayFromAltitudeMode(coordinates, altitudeMode, gxAltitudeMode, ellipsoid);\n            if (!tessellate || canExtrude) {\n                polyline.arcType = ArcType.NONE;\n            }\n        }\n\n        return true;\n    }\n\n    function processPolygon(dataSource, entityCollection, geometryNode, entity, styleEntity) {\n        var outerBoundaryIsNode = queryFirstNode(geometryNode, 'outerBoundaryIs', namespaces.kml);\n        var linearRingNode = queryFirstNode(outerBoundaryIsNode, 'LinearRing', namespaces.kml);\n        var coordinatesNode = queryFirstNode(linearRingNode, 'coordinates', namespaces.kml);\n        var ellipsoid = dataSource._ellipsoid;\n        var coordinates = readCoordinates(coordinatesNode, ellipsoid);\n        var extrude = queryBooleanValue(geometryNode, 'extrude', namespaces.kml);\n        var altitudeMode = queryStringValue(geometryNode, 'altitudeMode', namespaces.kml);\n        var gxAltitudeMode = queryStringValue(geometryNode, 'altitudeMode', namespaces.gx);\n        var canExtrude = isExtrudable(altitudeMode, gxAltitudeMode);\n\n        var polygon = defined(styleEntity.polygon) ? styleEntity.polygon.clone() : createDefaultPolygon();\n\n        var polyline = styleEntity.polyline;\n        if (defined(polyline)) {\n            polygon.outlineColor = defined(polyline.material) ? polyline.material.color : Color.WHITE;\n            polygon.outlineWidth = polyline.width;\n        }\n        entity.polygon = polygon;\n\n        if (canExtrude) {\n            polygon.perPositionHeight = true;\n            polygon.extrudedHeight = extrude ? 0 : undefined;\n        } else if (!dataSource._clampToGround) {\n            polygon.height = 0;\n        }\n\n        if (defined(coordinates)) {\n            var hierarchy = new PolygonHierarchy(coordinates);\n            var innerBoundaryIsNodes = queryChildNodes(geometryNode, 'innerBoundaryIs', namespaces.kml);\n            for (var j = 0; j < innerBoundaryIsNodes.length; j++) {\n                linearRingNode = queryChildNodes(innerBoundaryIsNodes[j], 'LinearRing', namespaces.kml);\n                for (var k = 0; k < linearRingNode.length; k++) {\n                    coordinatesNode = queryFirstNode(linearRingNode[k], 'coordinates', namespaces.kml);\n                    coordinates = readCoordinates(coordinatesNode, ellipsoid);\n                    if (defined(coordinates)) {\n                        hierarchy.holes.push(new PolygonHierarchy(coordinates));\n                    }\n                }\n            }\n            polygon.hierarchy = hierarchy;\n        }\n\n        return true;\n    }\n\n    function processTrack(dataSource, entityCollection, geometryNode, entity, styleEntity) {\n        var altitudeMode = queryStringValue(geometryNode, 'altitudeMode', namespaces.kml);\n        var gxAltitudeMode = queryStringValue(geometryNode, 'altitudeMode', namespaces.gx);\n        var coordNodes = queryChildNodes(geometryNode, 'coord', namespaces.gx);\n        var angleNodes = queryChildNodes(geometryNode, 'angles', namespaces.gx);\n        var timeNodes = queryChildNodes(geometryNode, 'when', namespaces.kml);\n        var extrude = queryBooleanValue(geometryNode, 'extrude', namespaces.kml);\n        var canExtrude = isExtrudable(altitudeMode, gxAltitudeMode);\n        var ellipsoid = dataSource._ellipsoid;\n\n        if (angleNodes.length > 0) {\n            oneTimeWarning('kml-gx:angles', 'KML - gx:angles are not supported in gx:Tracks');\n        }\n\n        var length = Math.min(coordNodes.length, timeNodes.length);\n        var coordinates = [];\n        var times = [];\n        for (var i = 0; i < length; i++) {\n            var position = readCoordinate(coordNodes[i].textContent, ellipsoid);\n            coordinates.push(position);\n            times.push(JulianDate.fromIso8601(timeNodes[i].textContent));\n        }\n        var property = new SampledPositionProperty();\n        property.addSamples(times, coordinates);\n        entity.position = property;\n        processPositionGraphics(dataSource, entity, styleEntity, heightReferenceFromAltitudeMode(altitudeMode, gxAltitudeMode));\n        processPathGraphics(entity, styleEntity);\n\n        entity.availability = new TimeIntervalCollection();\n\n        if (timeNodes.length > 0) {\n            entity.availability.addInterval(new TimeInterval({\n                start : times[0],\n                stop : times[times.length - 1]\n            }));\n        }\n\n        if (canExtrude && extrude) {\n            createDropLine(entityCollection, entity, styleEntity);\n        }\n\n        return true;\n    }\n\n    function addToMultiTrack(times, positions, composite, availability, dropShowProperty, extrude, altitudeMode, gxAltitudeMode, includeEndPoints) {\n        var start = times[0];\n        var stop = times[times.length - 1];\n\n        var data = new SampledPositionProperty();\n        data.addSamples(times, positions);\n\n        composite.intervals.addInterval(new TimeInterval({\n            start : start,\n            stop : stop,\n            isStartIncluded : includeEndPoints,\n            isStopIncluded : includeEndPoints,\n            data : createPositionPropertyFromAltitudeMode(data, altitudeMode, gxAltitudeMode)\n        }));\n        availability.addInterval(new TimeInterval({\n            start : start,\n            stop : stop,\n            isStartIncluded : includeEndPoints,\n            isStopIncluded : includeEndPoints\n        }));\n        dropShowProperty.intervals.addInterval(new TimeInterval({\n            start : start,\n            stop : stop,\n            isStartIncluded : includeEndPoints,\n            isStopIncluded : includeEndPoints,\n            data : extrude\n        }));\n    }\n\n    function processMultiTrack(dataSource, entityCollection, geometryNode, entity, styleEntity) {\n        // Multitrack options do not work in GE as detailed in the spec,\n        // rather than altitudeMode being at the MultiTrack level,\n        // GE just defers all settings to the underlying track.\n\n        var interpolate = queryBooleanValue(geometryNode, 'interpolate', namespaces.gx);\n        var trackNodes = queryChildNodes(geometryNode, 'Track', namespaces.gx);\n\n        var times;\n        var lastStop;\n        var lastStopPosition;\n        var needDropLine = false;\n        var dropShowProperty = new TimeIntervalCollectionProperty();\n        var availability = new TimeIntervalCollection();\n        var composite = new CompositePositionProperty();\n        var ellipsoid = dataSource._ellipsoid;\n        for (var i = 0, len = trackNodes.length; i < len; i++) {\n            var trackNode = trackNodes[i];\n            var timeNodes = queryChildNodes(trackNode, 'when', namespaces.kml);\n            var coordNodes = queryChildNodes(trackNode, 'coord', namespaces.gx);\n            var altitudeMode = queryStringValue(trackNode, 'altitudeMode', namespaces.kml);\n            var gxAltitudeMode = queryStringValue(trackNode, 'altitudeMode', namespaces.gx);\n            var canExtrude = isExtrudable(altitudeMode, gxAltitudeMode);\n            var extrude = queryBooleanValue(trackNode, 'extrude', namespaces.kml);\n\n            var length = Math.min(coordNodes.length, timeNodes.length);\n\n            var positions = [];\n            times = [];\n            for (var x = 0; x < length; x++) {\n                var position = readCoordinate(coordNodes[x].textContent, ellipsoid);\n                positions.push(position);\n                times.push(JulianDate.fromIso8601(timeNodes[x].textContent));\n            }\n\n            if (interpolate) {\n                //If we are interpolating, then we need to fill in the end of\n                //the last track and the beginning of this one with a sampled\n                //property.  From testing in Google Earth, this property\n                //is never extruded and always absolute.\n                if (defined(lastStop)) {\n                    addToMultiTrack([lastStop, times[0]], [lastStopPosition, positions[0]], composite, availability, dropShowProperty, false, 'absolute', undefined, false);\n                }\n                lastStop = times[length - 1];\n                lastStopPosition = positions[positions.length - 1];\n            }\n\n            addToMultiTrack(times, positions, composite, availability, dropShowProperty, canExtrude && extrude, altitudeMode, gxAltitudeMode, true);\n            needDropLine = needDropLine || (canExtrude && extrude);\n        }\n\n        entity.availability = availability;\n        entity.position = composite;\n        processPositionGraphics(dataSource, entity, styleEntity);\n        processPathGraphics(entity, styleEntity);\n        if (needDropLine) {\n            createDropLine(entityCollection, entity, styleEntity);\n            entity.polyline.show = dropShowProperty;\n        }\n\n        return true;\n    }\n\n    var geometryTypes = {\n        Point : processPoint,\n        LineString : processLineStringOrLinearRing,\n        LinearRing : processLineStringOrLinearRing,\n        Polygon : processPolygon,\n        Track : processTrack,\n        MultiTrack : processMultiTrack,\n        MultiGeometry : processMultiGeometry,\n        Model : processUnsupportedGeometry\n    };\n\n    function processMultiGeometry(dataSource, entityCollection, geometryNode, entity, styleEntity, context) {\n        var childNodes = geometryNode.childNodes;\n        var hasGeometry = false;\n        for (var i = 0, len = childNodes.length; i < len; i++) {\n            var childNode = childNodes.item(i);\n            var geometryProcessor = geometryTypes[childNode.localName];\n            if (defined(geometryProcessor)) {\n                var childEntity = createEntity(childNode, entityCollection, context);\n                childEntity.parent = entity;\n                childEntity.name = entity.name;\n                childEntity.availability = entity.availability;\n                childEntity.description = entity.description;\n                childEntity.kml = entity.kml;\n                if (geometryProcessor(dataSource, entityCollection, childNode, childEntity, styleEntity)) {\n                    hasGeometry = true;\n                }\n            }\n        }\n\n        return hasGeometry;\n    }\n\n    function processUnsupportedGeometry(dataSource, entityCollection, geometryNode, entity, styleEntity) {\n        oneTimeWarning('kml-unsupportedGeometry', 'KML - Unsupported geometry: ' + geometryNode.localName);\n        return false;\n    }\n\n    function processExtendedData(node, entity) {\n        var extendedDataNode = queryFirstNode(node, 'ExtendedData', namespaces.kml);\n\n        if (!defined(extendedDataNode)) {\n            return undefined;\n        }\n\n        if (defined(queryFirstNode(extendedDataNode, 'SchemaData', namespaces.kml))) {\n            oneTimeWarning('kml-schemaData', 'KML - SchemaData is unsupported');\n        }\n        if (defined(queryStringAttribute(extendedDataNode, 'xmlns:prefix'))) {\n            oneTimeWarning('kml-extendedData', 'KML - ExtendedData with xmlns:prefix is unsupported');\n        }\n\n        var result = {};\n        var dataNodes = queryChildNodes(extendedDataNode, 'Data', namespaces.kml);\n        if (defined(dataNodes)) {\n            var length = dataNodes.length;\n            for (var i = 0; i < length; i++) {\n                var dataNode = dataNodes[i];\n                var name = queryStringAttribute(dataNode, 'name');\n                if (defined(name)) {\n                    result[name] = {\n                        displayName : queryStringValue(dataNode, 'displayName', namespaces.kml),\n                        value : queryStringValue(dataNode, 'value', namespaces.kml)\n                    };\n                }\n            }\n        }\n        entity.kml.extendedData = result;\n    }\n\n    var scratchDiv;\n    if (typeof document !== 'undefined') {\n        scratchDiv = document.createElement('div');\n    }\n\n    function processDescription(node, entity, styleEntity, uriResolver, sourceResource) {\n        var i;\n        var key;\n        var keys;\n\n        var kmlData = entity.kml;\n        var extendedData = kmlData.extendedData;\n        var description = queryStringValue(node, 'description', namespaces.kml);\n\n        var balloonStyle = defaultValue(entity.balloonStyle, styleEntity.balloonStyle);\n\n        var background = Color.WHITE;\n        var foreground = Color.BLACK;\n        var text = description;\n\n        if (defined(balloonStyle)) {\n            background = defaultValue(balloonStyle.bgColor, Color.WHITE);\n            foreground = defaultValue(balloonStyle.textColor, Color.BLACK);\n            text = defaultValue(balloonStyle.text, description);\n        }\n\n        var value;\n        if (defined(text)) {\n            text = text.replace('$[name]', defaultValue(entity.name, ''));\n            text = text.replace('$[description]', defaultValue(description, ''));\n            text = text.replace('$[address]', defaultValue(kmlData.address, ''));\n            text = text.replace('$[Snippet]', defaultValue(kmlData.snippet, ''));\n            text = text.replace('$[id]', entity.id);\n\n            //While not explicitly defined by the OGC spec, in Google Earth\n            //The appearance of geDirections adds the directions to/from links\n            //We simply replace this string with nothing.\n            text = text.replace('$[geDirections]', '');\n\n            if (defined(extendedData)) {\n                var matches = text.match(/\\$\\[.+?\\]/g);\n                if (matches !== null) {\n                    for (i = 0; i < matches.length; i++) {\n                        var token = matches[i];\n                        var propertyName = token.substr(2, token.length - 3);\n                        var isDisplayName = /\\/displayName$/.test(propertyName);\n                        propertyName = propertyName.replace(/\\/displayName$/, '');\n\n                        value = extendedData[propertyName];\n                        if (defined(value)) {\n                            value = isDisplayName ? value.displayName : value.value;\n                        }\n                        if (defined(value)) {\n                            text = text.replace(token, defaultValue(value, ''));\n                        }\n                    }\n                }\n            }\n        } else if (defined(extendedData)) {\n            //If no description exists, build a table out of the extended data\n            keys = Object.keys(extendedData);\n            if (keys.length > 0) {\n                text = '<table class=\"cesium-infoBox-defaultTable cesium-infoBox-defaultTable-lighter\"><tbody>';\n                for (i = 0; i < keys.length; i++) {\n                    key = keys[i];\n                    value = extendedData[key];\n                    text += '<tr><th>' + defaultValue(value.displayName, key) + '</th><td>' + defaultValue(value.value, '') + '</td></tr>';\n                }\n                text += '</tbody></table>';\n            }\n        }\n\n        if (!defined(text)) {\n            //No description\n            return;\n        }\n\n        //Turns non-explicit links into clickable links.\n        text = autolinker.link(text);\n\n        //Use a temporary div to manipulate the links\n        //so that they open in a new window.\n        scratchDiv.innerHTML = text;\n        var links = scratchDiv.querySelectorAll('a');\n        for (i = 0; i < links.length; i++) {\n            links[i].setAttribute('target', '_blank');\n        }\n\n        //Rewrite any KMZ embedded urls\n        if (defined(uriResolver) && uriResolver.keys.length > 1) {\n            embedDataUris(scratchDiv, 'a', 'href', uriResolver);\n            embedDataUris(scratchDiv, 'img', 'src', uriResolver);\n        }\n\n        //Make relative urls absolute using the sourceResource\n        applyBasePath(scratchDiv, 'a', 'href', sourceResource);\n        applyBasePath(scratchDiv, 'img', 'src', sourceResource);\n\n        var tmp = '<div class=\"cesium-infoBox-description-lighter\" style=\"';\n        tmp += 'overflow:auto;';\n        tmp += 'word-wrap:break-word;';\n        tmp += 'background-color:' + background.toCssColorString() + ';';\n        tmp += 'color:' + foreground.toCssColorString() + ';';\n        tmp += '\">';\n        tmp += scratchDiv.innerHTML + '</div>';\n        scratchDiv.innerHTML = '';\n\n        //Set the final HTML as the description.\n        entity.description = tmp;\n    }\n\n    function processFeature(dataSource, featureNode, processingData) {\n        var entityCollection = processingData.entityCollection;\n        var parent = processingData.parentEntity;\n        var sourceResource = processingData.sourceResource;\n        var uriResolver = processingData.uriResolver;\n\n        var entity = createEntity(featureNode, entityCollection, processingData.context);\n        var kmlData = entity.kml;\n        var styleEntity = computeFinalStyle(dataSource, featureNode, processingData.styleCollection, sourceResource, uriResolver);\n\n        var name = queryStringValue(featureNode, 'name', namespaces.kml);\n        entity.name = name;\n        entity.parent = parent;\n\n        var availability = processTimeSpan(featureNode);\n        if (!defined(availability)) {\n            availability = processTimeStamp(featureNode);\n        }\n        entity.availability = availability;\n\n        mergeAvailabilityWithParent(entity);\n\n        // Per KML spec \"A Feature is visible only if it and all its ancestors are visible.\"\n        function ancestryIsVisible(parentEntity) {\n            if (!parentEntity) {\n                return true;\n            }\n            return parentEntity.show && ancestryIsVisible(parentEntity.parent);\n        }\n\n        var visibility = queryBooleanValue(featureNode, 'visibility', namespaces.kml);\n        entity.show = ancestryIsVisible(parent) && defaultValue(visibility, true);\n        //var open = queryBooleanValue(featureNode, 'open', namespaces.kml);\n\n        var authorNode = queryFirstNode(featureNode, 'author', namespaces.atom);\n        var author = kmlData.author;\n        author.name = queryStringValue(authorNode, 'name', namespaces.atom);\n        author.uri = queryStringValue(authorNode, 'uri', namespaces.atom);\n        author.email = queryStringValue(authorNode, 'email', namespaces.atom);\n\n        var linkNode = queryFirstNode(featureNode, 'link', namespaces.atom);\n        var link = kmlData.link;\n        link.href = queryStringAttribute(linkNode, 'href');\n        link.hreflang = queryStringAttribute(linkNode, 'hreflang');\n        link.rel = queryStringAttribute(linkNode, 'rel');\n        link.type = queryStringAttribute(linkNode, 'type');\n        link.title = queryStringAttribute(linkNode, 'title');\n        link.length = queryStringAttribute(linkNode, 'length');\n\n        kmlData.address = queryStringValue(featureNode, 'address', namespaces.kml);\n        kmlData.phoneNumber = queryStringValue(featureNode, 'phoneNumber', namespaces.kml);\n        kmlData.snippet = queryStringValue(featureNode, 'Snippet', namespaces.kml);\n\n        processExtendedData(featureNode, entity);\n        processDescription(featureNode, entity, styleEntity, uriResolver, sourceResource);\n\n        var ellipsoid = dataSource._ellipsoid;\n        processLookAt(featureNode, entity, ellipsoid);\n        processCamera(featureNode, entity, ellipsoid);\n\n        if (defined(queryFirstNode(featureNode, 'Region', namespaces.kml))) {\n            oneTimeWarning('kml-region', 'KML - Placemark Regions are unsupported');\n        }\n\n        return {\n            entity : entity,\n            styleEntity : styleEntity\n        };\n    }\n\n    function processDocument(dataSource, node, processingData, deferredLoading) {\n        deferredLoading.addNodes(node.childNodes, processingData);\n        deferredLoading.process();\n    }\n\n    function processFolder(dataSource, node, processingData, deferredLoading) {\n        var r = processFeature(dataSource, node, processingData);\n        var newProcessingData = clone(processingData);\n        newProcessingData.parentEntity = r.entity;\n        processDocument(dataSource, node, newProcessingData, deferredLoading);\n    }\n\n    function processPlacemark(dataSource, placemark, processingData, deferredLoading) {\n        var r = processFeature(dataSource, placemark, processingData);\n        var entity = r.entity;\n        var styleEntity = r.styleEntity;\n\n        var hasGeometry = false;\n        var childNodes = placemark.childNodes;\n        for (var i = 0, len = childNodes.length; i < len && !hasGeometry; i++) {\n            var childNode = childNodes.item(i);\n            var geometryProcessor = geometryTypes[childNode.localName];\n            if (defined(geometryProcessor)) {\n                // pass the placemark entity id as a context for case of defining multiple child entities together to handle case\n                // where some malformed kmls reuse the same id across placemarks, which works in GE, but is not technically to spec.\n                geometryProcessor(dataSource, processingData.entityCollection, childNode, entity, styleEntity, entity.id);\n                hasGeometry = true;\n            }\n        }\n\n        if (!hasGeometry) {\n            entity.merge(styleEntity);\n            processPositionGraphics(dataSource, entity, styleEntity);\n        }\n    }\n\n    var playlistNodeProcessors = {\n        FlyTo: processTourFlyTo,\n        Wait: processTourWait,\n        SoundCue: processTourUnsupportedNode,\n        AnimatedUpdate: processTourUnsupportedNode,\n        TourControl: processTourUnsupportedNode\n    };\n\n    function processTour(dataSource, node, processingData, deferredLoading) {\n        var name = queryStringValue(node, 'name', namespaces.kml);\n        var id = queryStringAttribute(node, 'id');\n        var tour = new KmlTour(name, id);\n\n        var playlistNode = queryFirstNode(node, 'Playlist', namespaces.gx);\n        if(playlistNode) {\n            var ellipsoid = dataSource._ellipsoid;\n            var childNodes = playlistNode.childNodes;\n            for(var i = 0; i < childNodes.length; i++) {\n                var entryNode = childNodes[i];\n                if (entryNode.localName) {\n                    var playlistNodeProcessor = playlistNodeProcessors[entryNode.localName];\n                    if (playlistNodeProcessor) {\n                        playlistNodeProcessor(tour, entryNode, ellipsoid);\n                    }\n                    else {\n                        console.log('Unknown KML Tour playlist entry type ' + entryNode.localName);\n                    }\n                }\n            }\n        }\n\n        if (!defined(dataSource.kmlTours)) {\n            dataSource.kmlTours = [];\n        }\n\n        dataSource.kmlTours.push(tour);\n    }\n\n    function processTourUnsupportedNode(tour, entryNode) {\n        oneTimeWarning('KML Tour unsupported node ' + entryNode.localName);\n    }\n\n    function processTourWait(tour, entryNode) {\n        var duration = queryNumericValue(entryNode, 'duration', namespaces.gx);\n        tour.addPlaylistEntry(new KmlTourWait(duration));\n    }\n\n    function processTourFlyTo(tour, entryNode, ellipsoid) {\n        var duration = queryNumericValue(entryNode, 'duration', namespaces.gx);\n        var flyToMode = queryStringValue(entryNode, 'flyToMode', namespaces.gx);\n\n        var t = {kml: {}};\n\n        processLookAt(entryNode, t, ellipsoid);\n        processCamera(entryNode, t, ellipsoid);\n\n        var view = t.kml.lookAt || t.kml.camera;\n\n        var flyto = new KmlTourFlyTo(duration, flyToMode, view);\n        tour.addPlaylistEntry(flyto);\n    }\n\n    function processCamera(featureNode, entity, ellipsoid) {\n        var camera = queryFirstNode(featureNode, 'Camera', namespaces.kml);\n        if(defined(camera)) {\n            var lon = defaultValue(queryNumericValue(camera, 'longitude', namespaces.kml), 0.0);\n            var lat = defaultValue(queryNumericValue(camera, 'latitude', namespaces.kml), 0.0);\n            var altitude = defaultValue(queryNumericValue(camera, 'altitude', namespaces.kml), 0.0);\n\n            var heading = defaultValue(queryNumericValue(camera, 'heading', namespaces.kml), 0.0);\n            var tilt = defaultValue(queryNumericValue(camera, 'tilt', namespaces.kml), 0.0);\n            var roll = defaultValue(queryNumericValue(camera, 'roll', namespaces.kml), 0.0);\n\n            var position = Cartesian3.fromDegrees(lon, lat, altitude, ellipsoid);\n            var hpr = HeadingPitchRoll.fromDegrees(heading, tilt - 90.0, roll);\n\n            entity.kml.camera = new KmlCamera(position, hpr);\n        }\n    }\n\n    function processLookAt(featureNode, entity, ellipsoid) {\n        var lookAt = queryFirstNode(featureNode, 'LookAt', namespaces.kml);\n        if(defined(lookAt)) {\n            var lon = defaultValue(queryNumericValue(lookAt, 'longitude', namespaces.kml), 0.0);\n            var lat = defaultValue(queryNumericValue(lookAt, 'latitude', namespaces.kml), 0.0);\n            var altitude = defaultValue(queryNumericValue(lookAt, 'altitude', namespaces.kml), 0.0);\n            var heading = queryNumericValue(lookAt, 'heading', namespaces.kml);\n            var tilt = queryNumericValue(lookAt, 'tilt', namespaces.kml);\n            var range = defaultValue(queryNumericValue(lookAt, 'range', namespaces.kml), 0.0);\n\n            tilt = CesiumMath.toRadians(defaultValue(tilt, 0.0));\n            heading = CesiumMath.toRadians(defaultValue(heading, 0.0));\n\n            var hpr = new HeadingPitchRange(heading, tilt - CesiumMath.PI_OVER_TWO, range);\n            var viewPoint = Cartesian3.fromDegrees(lon, lat, altitude, ellipsoid);\n\n            entity.kml.lookAt = new KmlLookAt(viewPoint, hpr);\n        }\n    }\n\n    function processGroundOverlay(dataSource, groundOverlay, processingData, deferredLoading) {\n        var r = processFeature(dataSource, groundOverlay, processingData);\n        var entity = r.entity;\n\n        var geometry;\n        var isLatLonQuad = false;\n\n        var ellipsoid = dataSource._ellipsoid;\n        var positions = readCoordinates(queryFirstNode(groundOverlay, 'LatLonQuad', namespaces.gx), ellipsoid);\n        var zIndex = queryNumericValue(groundOverlay, 'drawOrder', namespaces.kml);\n        if (defined(positions)) {\n            geometry = createDefaultPolygon();\n            geometry.hierarchy = new PolygonHierarchy(positions);\n            geometry.zIndex = zIndex;\n            entity.polygon = geometry;\n            isLatLonQuad = true;\n        } else {\n            geometry = new RectangleGraphics();\n            geometry.zIndex = zIndex;\n            entity.rectangle = geometry;\n\n            var latLonBox = queryFirstNode(groundOverlay, 'LatLonBox', namespaces.kml);\n            if (defined(latLonBox)) {\n                var west = queryNumericValue(latLonBox, 'west', namespaces.kml);\n                var south = queryNumericValue(latLonBox, 'south', namespaces.kml);\n                var east = queryNumericValue(latLonBox, 'east', namespaces.kml);\n                var north = queryNumericValue(latLonBox, 'north', namespaces.kml);\n\n                if (defined(west)) {\n                    west = CesiumMath.negativePiToPi(CesiumMath.toRadians(west));\n                }\n                if (defined(south)) {\n                    south = CesiumMath.clampToLatitudeRange(CesiumMath.toRadians(south));\n                }\n                if (defined(east)) {\n                    east = CesiumMath.negativePiToPi(CesiumMath.toRadians(east));\n                }\n                if (defined(north)) {\n                    north = CesiumMath.clampToLatitudeRange(CesiumMath.toRadians(north));\n                }\n                geometry.coordinates = new Rectangle(west, south, east, north);\n\n                var rotation = queryNumericValue(latLonBox, 'rotation', namespaces.kml);\n                if (defined(rotation)) {\n                    var rotationRadians = CesiumMath.toRadians(rotation);\n                    geometry.rotation = rotationRadians;\n                    geometry.stRotation = rotationRadians;\n                }\n            }\n        }\n\n        var iconNode = queryFirstNode(groundOverlay, 'Icon', namespaces.kml);\n        var href = getIconHref(iconNode, dataSource, processingData.sourceResource, processingData.uriResolver, true);\n        if (defined(href)) {\n            if (isLatLonQuad) {\n                oneTimeWarning('kml-gx:LatLonQuad', 'KML - gx:LatLonQuad Icon does not support texture projection.');\n            }\n            var x = queryNumericValue(iconNode, 'x', namespaces.gx);\n            var y = queryNumericValue(iconNode, 'y', namespaces.gx);\n            var w = queryNumericValue(iconNode, 'w', namespaces.gx);\n            var h = queryNumericValue(iconNode, 'h', namespaces.gx);\n\n            if (defined(x) || defined(y) || defined(w) || defined(h)) {\n                oneTimeWarning('kml-groundOverlay-xywh', 'KML - gx:x, gx:y, gx:w, gx:h aren\\'t supported for GroundOverlays');\n            }\n\n            geometry.material = href;\n            geometry.material.color = queryColorValue(groundOverlay, 'color', namespaces.kml);\n            geometry.material.transparent = true;\n        } else {\n            geometry.material = queryColorValue(groundOverlay, 'color', namespaces.kml);\n        }\n\n        var altitudeMode = queryStringValue(groundOverlay, 'altitudeMode', namespaces.kml);\n\n        if (defined(altitudeMode)) {\n            if (altitudeMode === 'absolute') {\n                //Use height above ellipsoid until we support MSL.\n                geometry.height = queryNumericValue(groundOverlay, 'altitude', namespaces.kml);\n                geometry.zIndex = undefined;\n            } else if (altitudeMode !== 'clampToGround') {\n                oneTimeWarning('kml-altitudeMode-unknown', 'KML - Unknown altitudeMode: ' + altitudeMode);\n            }\n            // else just use the default of 0 until we support 'clampToGround'\n        } else {\n            altitudeMode = queryStringValue(groundOverlay, 'altitudeMode', namespaces.gx);\n            if (altitudeMode === 'relativeToSeaFloor') {\n                oneTimeWarning('kml-altitudeMode-relativeToSeaFloor', 'KML - altitudeMode relativeToSeaFloor is currently not supported, treating as absolute.');\n                geometry.height = queryNumericValue(groundOverlay, 'altitude', namespaces.kml);\n                geometry.zIndex = undefined;\n            } else if (altitudeMode === 'clampToSeaFloor') {\n                oneTimeWarning('kml-altitudeMode-clampToSeaFloor', 'KML - altitudeMode clampToSeaFloor is currently not supported, treating as clampToGround.');\n            } else if (defined(altitudeMode)) {\n                oneTimeWarning('kml-altitudeMode-unknown', 'KML - Unknown altitudeMode: ' + altitudeMode);\n            }\n        }\n    }\n\n    function processUnsupportedFeature(dataSource, node, processingData, deferredLoading) {\n        dataSource._unsupportedNode.raiseEvent(dataSource, processingData.parentEntity, node, processingData.entityCollection,\n            processingData.styleCollection, processingData.sourceResource, processingData.uriResolver);\n        oneTimeWarning('kml-unsupportedFeature-' + node.nodeName, 'KML - Unsupported feature: ' + node.nodeName);\n    }\n\n    var RefreshMode = {\n        INTERVAL : 0,\n        EXPIRE : 1,\n        STOP : 2\n    };\n\n    function cleanupString(s) {\n        if (!defined(s) || s.length === 0) {\n            return '';\n        }\n\n        var sFirst = s[0];\n        if (sFirst === '&' || sFirst === '?') {\n            s = s.substring(1);\n        }\n\n        return s;\n    }\n\n    var zeroRectangle = new Rectangle();\n    var scratchCartographic = new Cartographic();\n    var scratchCartesian2 = new Cartesian2();\n    var scratchCartesian3 = new Cartesian3();\n\n    function processNetworkLinkQueryString(resource, camera, canvas, viewBoundScale, bbox, ellipsoid) {\n        function fixLatitude(value) {\n            if (value < -CesiumMath.PI_OVER_TWO) {\n                return -CesiumMath.PI_OVER_TWO;\n            } else if (value > CesiumMath.PI_OVER_TWO) {\n                return CesiumMath.PI_OVER_TWO;\n            }\n            return value;\n        }\n\n        function fixLongitude(value) {\n            if (value > CesiumMath.PI) {\n                return value - CesiumMath.TWO_PI;\n            } else if (value < -CesiumMath.PI) {\n                return value + CesiumMath.TWO_PI;\n            }\n\n            return value;\n        }\n\n        var queryString = objectToQuery(resource.queryParameters);\n\n        // objectToQuery escapes [ and ], so fix that\n        queryString = queryString.replace(/%5B/g, '[').replace(/%5D/g, ']');\n\n        if (defined(camera) && camera._mode !== SceneMode.MORPHING) {\n            var centerCartesian;\n            var centerCartographic;\n\n            bbox = defaultValue(bbox, zeroRectangle);\n            if (defined(canvas)) {\n                scratchCartesian2.x = canvas.clientWidth * 0.5;\n                scratchCartesian2.y = canvas.clientHeight * 0.5;\n                centerCartesian = camera.pickEllipsoid(scratchCartesian2, ellipsoid, scratchCartesian3);\n            }\n\n            if (defined(centerCartesian)) {\n                centerCartographic = ellipsoid.cartesianToCartographic(centerCartesian, scratchCartographic);\n            } else {\n                centerCartographic = Rectangle.center(bbox, scratchCartographic);\n                centerCartesian = ellipsoid.cartographicToCartesian(centerCartographic);\n            }\n\n            if (defined(viewBoundScale) && !CesiumMath.equalsEpsilon(viewBoundScale, 1.0, CesiumMath.EPSILON9)) {\n                var newHalfWidth = bbox.width * viewBoundScale * 0.5;\n                var newHalfHeight = bbox.height * viewBoundScale * 0.5;\n                bbox = new Rectangle(fixLongitude(centerCartographic.longitude - newHalfWidth),\n                    fixLatitude(centerCartographic.latitude - newHalfHeight),\n                    fixLongitude(centerCartographic.longitude + newHalfWidth),\n                    fixLatitude(centerCartographic.latitude + newHalfHeight)\n                );\n            }\n\n            queryString = queryString.replace('[bboxWest]', CesiumMath.toDegrees(bbox.west).toString());\n            queryString = queryString.replace('[bboxSouth]', CesiumMath.toDegrees(bbox.south).toString());\n            queryString = queryString.replace('[bboxEast]', CesiumMath.toDegrees(bbox.east).toString());\n            queryString = queryString.replace('[bboxNorth]', CesiumMath.toDegrees(bbox.north).toString());\n\n            var lon = CesiumMath.toDegrees(centerCartographic.longitude).toString();\n            var lat = CesiumMath.toDegrees(centerCartographic.latitude).toString();\n            queryString = queryString.replace('[lookatLon]', lon);\n            queryString = queryString.replace('[lookatLat]', lat);\n            queryString = queryString.replace('[lookatTilt]', CesiumMath.toDegrees(camera.pitch).toString());\n            queryString = queryString.replace('[lookatHeading]', CesiumMath.toDegrees(camera.heading).toString());\n            queryString = queryString.replace('[lookatRange]', Cartesian3.distance(camera.positionWC, centerCartesian));\n            queryString = queryString.replace('[lookatTerrainLon]', lon);\n            queryString = queryString.replace('[lookatTerrainLat]', lat);\n            queryString = queryString.replace('[lookatTerrainAlt]', centerCartographic.height.toString());\n\n            ellipsoid.cartesianToCartographic(camera.positionWC, scratchCartographic);\n            queryString = queryString.replace('[cameraLon]', CesiumMath.toDegrees(scratchCartographic.longitude).toString());\n            queryString = queryString.replace('[cameraLat]', CesiumMath.toDegrees(scratchCartographic.latitude).toString());\n            queryString = queryString.replace('[cameraAlt]', CesiumMath.toDegrees(scratchCartographic.height).toString());\n\n            var frustum = camera.frustum;\n            var aspectRatio = frustum.aspectRatio;\n            var horizFov = '';\n            var vertFov = '';\n            if (defined(aspectRatio)) {\n                var fov = CesiumMath.toDegrees(frustum.fov);\n                if (aspectRatio > 1.0) {\n                    horizFov = fov;\n                    vertFov = fov / aspectRatio;\n                } else {\n                    vertFov = fov;\n                    horizFov = fov * aspectRatio;\n                }\n            }\n            queryString = queryString.replace('[horizFov]', horizFov.toString());\n            queryString = queryString.replace('[vertFov]', vertFov.toString());\n        } else {\n            queryString = queryString.replace('[bboxWest]', '-180');\n            queryString = queryString.replace('[bboxSouth]', '-90');\n            queryString = queryString.replace('[bboxEast]', '180');\n            queryString = queryString.replace('[bboxNorth]', '90');\n\n            queryString = queryString.replace('[lookatLon]', '');\n            queryString = queryString.replace('[lookatLat]', '');\n            queryString = queryString.replace('[lookatRange]', '');\n            queryString = queryString.replace('[lookatTilt]', '');\n            queryString = queryString.replace('[lookatHeading]', '');\n            queryString = queryString.replace('[lookatTerrainLon]', '');\n            queryString = queryString.replace('[lookatTerrainLat]', '');\n            queryString = queryString.replace('[lookatTerrainAlt]', '');\n\n            queryString = queryString.replace('[cameraLon]', '');\n            queryString = queryString.replace('[cameraLat]', '');\n            queryString = queryString.replace('[cameraAlt]', '');\n            queryString = queryString.replace('[horizFov]', '');\n            queryString = queryString.replace('[vertFov]', '');\n        }\n\n        if (defined(canvas)) {\n            queryString = queryString.replace('[horizPixels]', canvas.clientWidth);\n            queryString = queryString.replace('[vertPixels]', canvas.clientHeight);\n        } else {\n            queryString = queryString.replace('[horizPixels]', '');\n            queryString = queryString.replace('[vertPixels]', '');\n        }\n\n        queryString = queryString.replace('[terrainEnabled]', '1');\n        queryString = queryString.replace('[clientVersion]', '1');\n        queryString = queryString.replace('[kmlVersion]', '2.2');\n        queryString = queryString.replace('[clientName]', 'Cesium');\n        queryString = queryString.replace('[language]', 'English');\n\n        resource.setQueryParameters(queryToObject(queryString));\n    }\n\n    function processNetworkLink(dataSource, node, processingData, deferredLoading) {\n        var r = processFeature(dataSource, node, processingData);\n        var networkEntity = r.entity;\n\n        var sourceResource = processingData.sourceResource;\n        var uriResolver = processingData.uriResolver;\n\n        var link = queryFirstNode(node, 'Link', namespaces.kml);\n\n        if (!defined(link)) {\n            link = queryFirstNode(node, 'Url', namespaces.kml);\n        }\n        if (defined(link)) {\n            var href = queryStringValue(link, 'href', namespaces.kml);\n            var viewRefreshMode;\n            var viewBoundScale;\n            if (defined(href)) {\n                var newSourceUri = href;\n                href = resolveHref(href, sourceResource, processingData.uriResolver);\n\n                // We need to pass in the original path if resolveHref returns a data uri because the network link\n                //  references a document in a KMZ archive\n                if (/^data:/.test(href.getUrlComponent())) {\n                    // So if sourceUri isn't the kmz file, then its another kml in the archive, so resolve it\n                    if (!/\\.kmz/i.test(sourceResource.getUrlComponent())) {\n                        newSourceUri = sourceResource.getDerivedResource({\n                            url: newSourceUri\n                        });\n                    }\n                } else {\n                    newSourceUri = href.clone(); // Not a data uri so use the fully qualified uri\n                    viewRefreshMode = queryStringValue(link, 'viewRefreshMode', namespaces.kml);\n                    viewBoundScale = defaultValue(queryStringValue(link, 'viewBoundScale', namespaces.kml), 1.0);\n                    var defaultViewFormat = (viewRefreshMode === 'onStop') ? 'BBOX=[bboxWest],[bboxSouth],[bboxEast],[bboxNorth]' : '';\n                    var viewFormat = defaultValue(queryStringValue(link, 'viewFormat', namespaces.kml), defaultViewFormat);\n                    var httpQuery = queryStringValue(link, 'httpQuery', namespaces.kml);\n                    if (defined(viewFormat)) {\n                        href.setQueryParameters(queryToObject(cleanupString(viewFormat)));\n                    }\n                    if (defined(httpQuery)) {\n                        href.setQueryParameters(queryToObject(cleanupString(httpQuery)));\n                    }\n\n                    var ellipsoid = dataSource._ellipsoid;\n                    processNetworkLinkQueryString(href, dataSource._camera, dataSource._canvas, viewBoundScale, dataSource._lastCameraView.bbox, ellipsoid);\n                }\n\n                var options = {\n                    sourceUri : newSourceUri,\n                    uriResolver : uriResolver,\n                    context : networkEntity.id\n                };\n                var networkLinkCollection = new EntityCollection();\n                var promise = load(dataSource, networkLinkCollection, href, options).then(function(rootElement) {\n                    var entities = dataSource._entityCollection;\n                    var newEntities = networkLinkCollection.values;\n                    entities.suspendEvents();\n                    for (var i = 0; i < newEntities.length; i++) {\n                        var newEntity = newEntities[i];\n                        if (!defined(newEntity.parent)) {\n                            newEntity.parent = networkEntity;\n                            mergeAvailabilityWithParent(newEntity);\n                        }\n\n                        entities.add(newEntity);\n                    }\n                    entities.resumeEvents();\n\n                    // Add network links to a list if we need they will need to be updated\n                    var refreshMode = queryStringValue(link, 'refreshMode', namespaces.kml);\n                    var refreshInterval = defaultValue(queryNumericValue(link, 'refreshInterval', namespaces.kml), 0);\n                    if ((refreshMode === 'onInterval' && refreshInterval > 0 ) || (refreshMode === 'onExpire') || (viewRefreshMode === 'onStop')) {\n                        var networkLinkControl = queryFirstNode(rootElement, 'NetworkLinkControl', namespaces.kml);\n                        var hasNetworkLinkControl = defined(networkLinkControl);\n\n                        var now = JulianDate.now();\n                        var networkLinkInfo = {\n                            id : createGuid(),\n                            href : href,\n                            cookie : {},\n                            lastUpdated : now,\n                            updating : false,\n                            entity : networkEntity,\n                            viewBoundScale : viewBoundScale,\n                            needsUpdate : false,\n                            cameraUpdateTime : now\n                        };\n\n                        var minRefreshPeriod = 0;\n                        if (hasNetworkLinkControl) {\n                            networkLinkInfo.cookie = queryToObject(defaultValue(queryStringValue(networkLinkControl, 'cookie', namespaces.kml), ''));\n                            minRefreshPeriod = defaultValue(queryNumericValue(networkLinkControl, 'minRefreshPeriod', namespaces.kml), 0);\n                        }\n\n                        if (refreshMode === 'onInterval') {\n                            if (hasNetworkLinkControl) {\n                                refreshInterval = Math.max(minRefreshPeriod, refreshInterval);\n                            }\n                            networkLinkInfo.refreshMode = RefreshMode.INTERVAL;\n                            networkLinkInfo.time = refreshInterval;\n                        } else if (refreshMode === 'onExpire') {\n                            var expires;\n                            if (hasNetworkLinkControl) {\n                                expires = queryStringValue(networkLinkControl, 'expires', namespaces.kml);\n                            }\n                            if (defined(expires)) {\n                                try {\n                                    var date = JulianDate.fromIso8601(expires);\n                                    var diff = JulianDate.secondsDifference(date, now);\n                                    if (diff > 0 && diff < minRefreshPeriod) {\n                                        JulianDate.addSeconds(now, minRefreshPeriod, date);\n                                    }\n                                    networkLinkInfo.refreshMode = RefreshMode.EXPIRE;\n                                    networkLinkInfo.time = date;\n                                } catch (e) {\n                                    oneTimeWarning('kml-refreshMode-onInterval-onExpire', 'KML - NetworkLinkControl expires is not a valid date');\n                                }\n                            } else {\n                                oneTimeWarning('kml-refreshMode-onExpire', 'KML - refreshMode of onExpire requires the NetworkLinkControl to have an expires element');\n                            }\n                        } else if (dataSource._camera) { // Only allow onStop refreshes if we have a camera\n                            networkLinkInfo.refreshMode = RefreshMode.STOP;\n                            networkLinkInfo.time = defaultValue(queryNumericValue(link, 'viewRefreshTime', namespaces.kml), 0);\n                        } else {\n                            oneTimeWarning('kml-refrehMode-onStop-noCamera', 'A NetworkLink with viewRefreshMode=onStop requires a camera be passed in when creating the KmlDataSource');\n                        }\n\n                        if (defined(networkLinkInfo.refreshMode)) {\n                            dataSource._networkLinks.set(networkLinkInfo.id, networkLinkInfo);\n                        }\n                    } else if (viewRefreshMode === 'onRegion') {\n                        oneTimeWarning('kml-refrehMode-onRegion', 'KML - Unsupported viewRefreshMode: onRegion');\n                    }\n                }).otherwise(function(error) {\n                    oneTimeWarning('An error occured during loading ' + href.url);\n                    dataSource._error.raiseEvent(dataSource, error);\n                });\n\n                deferredLoading.addPromise(promise);\n            }\n        }\n    }\n\n    function processFeatureNode(dataSource, node, processingData, deferredLoading) {\n        var featureProcessor = featureTypes[node.localName];\n        if (defined(featureProcessor)) {\n            return featureProcessor(dataSource, node, processingData, deferredLoading);\n        }\n\n        return processUnsupportedFeature(dataSource, node, processingData, deferredLoading);\n    }\n\n    function loadKml(dataSource, entityCollection, kml, sourceResource, uriResolver, context) {\n        entityCollection.removeAll();\n\n        var documentElement = kml.documentElement;\n        var document = documentElement.localName === 'Document' ? documentElement : queryFirstNode(documentElement, 'Document', namespaces.kml);\n        var name = queryStringValue(document, 'name', namespaces.kml);\n        if (!defined(name)) {\n            name = getFilenameFromUri(sourceResource.getUrlComponent());\n        }\n\n        // Only set the name from the root document\n        if (!defined(dataSource._name)) {\n            dataSource._name = name;\n        }\n\n        var deferredLoading = new KmlDataSource._DeferredLoading(dataSource);\n        var styleCollection = new EntityCollection(dataSource);\n        return when.all(processStyles(dataSource, kml, styleCollection, sourceResource, false, uriResolver)).then(function() {\n            var element = kml.documentElement;\n            if (element.localName === 'kml') {\n                var childNodes = element.childNodes;\n                for (var i = 0; i < childNodes.length; i++) {\n                    var tmp = childNodes[i];\n                    if (defined(featureTypes[tmp.localName])) {\n                        element = tmp;\n                        break;\n                    }\n                }\n            }\n\n            var processingData = {\n                parentEntity: undefined,\n                entityCollection: entityCollection,\n                styleCollection: styleCollection,\n                sourceResource: sourceResource,\n                uriResolver: uriResolver,\n                context: context\n            };\n\n            entityCollection.suspendEvents();\n            processFeatureNode(dataSource, element, processingData, deferredLoading);\n            entityCollection.resumeEvents();\n\n            return deferredLoading.wait()\n                .then(function() {\n                    return kml.documentElement;\n                });\n        });\n    }\n\n    function loadKmz(dataSource, entityCollection, blob, sourceResource) {\n        var deferred = when.defer();\n        zip.createReader(new zip.BlobReader(blob), function(reader) {\n            reader.getEntries(function(entries) {\n                var promises = [];\n                var uriResolver = {};\n                var docEntry;\n                var docDefer;\n                for (var i = 0; i < entries.length; i++) {\n                    var entry = entries[i];\n                    if (!entry.directory) {\n                        var innerDefer = when.defer();\n                        promises.push(innerDefer.promise);\n                        if (/\\.kml$/i.test(entry.filename)) {\n                            // We use the first KML document we come across\n                            //  https://developers.google.com/kml/documentation/kmzarchives\n                            // Unless we come across a .kml file at the root of the archive because GE does this\n                            if (!defined(docEntry) || !/\\//i.test(entry.filename)) {\n                                if (defined(docEntry)) {\n                                    // We found one at the root so load the initial kml as a data uri\n                                    loadDataUriFromZip(docEntry, uriResolver, docDefer);\n                                }\n                                docEntry = entry;\n                                docDefer = innerDefer;\n                            } else {\n                                // Wasn't the first kml and wasn't at the root\n                                loadDataUriFromZip(entry, uriResolver, innerDefer);\n                            }\n                        } else {\n                            loadDataUriFromZip(entry, uriResolver, innerDefer);\n                        }\n                    }\n                }\n\n                // Now load the root KML document\n                if (defined(docEntry)) {\n                    loadXmlFromZip(docEntry, uriResolver, docDefer);\n                }\n                when.all(promises).then(function() {\n                    reader.close();\n                    if (!defined(uriResolver.kml)) {\n                        deferred.reject(new RuntimeError('KMZ file does not contain a KML document.'));\n                        return;\n                    }\n                    uriResolver.keys = Object.keys(uriResolver);\n                    return loadKml(dataSource, entityCollection, uriResolver.kml, sourceResource, uriResolver);\n                }).then(deferred.resolve).otherwise(deferred.reject);\n            });\n        }, function(e) {\n            deferred.reject(e);\n        });\n\n        return deferred.promise;\n    }\n\n    function load(dataSource, entityCollection, data, options) {\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n        var sourceUri = options.sourceUri;\n        var uriResolver = options.uriResolver;\n        var context = options.context;\n\n        var promise = data;\n        if (typeof data === 'string' || (data instanceof Resource)) {\n            data = Resource.createIfNeeded(data);\n            promise = data.fetchBlob();\n            sourceUri = defaultValue(sourceUri, data.clone());\n\n            // Add resource credits to our list of credits to display\n            var resourceCredits = dataSource._resourceCredits;\n            var credits = data.credits;\n            if (defined(credits)) {\n                var length = credits.length;\n                for (var i = 0; i < length; i++) {\n                    resourceCredits.push(credits[i]);\n                }\n            }\n        } else {\n            sourceUri = defaultValue(sourceUri, Resource.DEFAULT.clone());\n        }\n\n        sourceUri = Resource.createIfNeeded(sourceUri);\n\n        return when(promise)\n            .then(function(dataToLoad) {\n                if (dataToLoad instanceof Blob) {\n                    return isZipFile(dataToLoad).then(function(isZip) {\n                        if (isZip) {\n                            return loadKmz(dataSource, entityCollection, dataToLoad, sourceUri);\n                        }\n                        return readBlobAsText(dataToLoad).then(function(text) {\n                            //There's no official way to validate if a parse was successful.\n                            //The following check detects the error on various browsers.\n\n                            //Insert missing namespaces\n                            text = insertNamespaces(text);\n\n                            //Remove Duplicate Namespaces\n                            text = removeDuplicateNamespaces(text);\n\n                            //IE raises an exception\n                            var kml;\n                            var error;\n                            try {\n                                kml = parser.parseFromString(text, 'application/xml');\n                            } catch (e) {\n                                error = e.toString();\n                            }\n\n                            //The parse succeeds on Chrome and Firefox, but the error\n                            //handling is different in each.\n                            if (defined(error) || kml.body || kml.documentElement.tagName === 'parsererror') {\n                                //Firefox has error information as the firstChild nodeValue.\n                                var msg = defined(error) ? error : kml.documentElement.firstChild.nodeValue;\n\n                                //Chrome has it in the body text.\n                                if (!msg) {\n                                    msg = kml.body.innerText;\n                                }\n\n                                //Return the error\n                                throw new RuntimeError(msg);\n                            }\n                            return loadKml(dataSource, entityCollection, kml, sourceUri, uriResolver, context);\n                        });\n                    });\n                }\n                return loadKml(dataSource, entityCollection, dataToLoad, sourceUri, uriResolver, context);\n            })\n            .otherwise(function(error) {\n                dataSource._error.raiseEvent(dataSource, error);\n                console.log(error);\n                return when.reject(error);\n            });\n    }\n\n    /**\n     * A {@link DataSource} which processes Keyhole Markup Language 2.2 (KML).\n     * <p>\n     * KML support in Cesium is incomplete, but a large amount of the standard,\n     * as well as Google's <code>gx</code> extension namespace, is supported. See Github issue\n     * {@link https://github.com/AnalyticalGraphicsInc/cesium/issues/873|#873} for a\n     * detailed list of what is and isn't support. Cesium will also write information to the\n     * console when it encounters most unsupported features.\n     * </p>\n     * <p>\n     * Non visual feature data, such as <code>atom:author</code> and <code>ExtendedData</code>\n     * is exposed via an instance of {@link KmlFeatureData}, which is added to each {@link Entity}\n     * under the <code>kml</code> property.\n     * </p>\n     *\n     * @alias KmlDataSource\n     * @constructor\n     *\n     * @param {Object} options An object with the following properties:\n     * @param {Camera} options.camera The camera that is used for viewRefreshModes and sending camera properties to network links.\n     * @param {Canvas} options.canvas The canvas that is used for sending viewer properties to network links.\n     * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The global ellipsoid used for geographical calculations.\n     * @param {Credit|String} [options.credit] A credit for the data source, which is displayed on the canvas.\n     *\n     * @see {@link http://www.opengeospatial.org/standards/kml/|Open Geospatial Consortium KML Standard}\n     * @see {@link https://developers.google.com/kml/|Google KML Documentation}\n     *\n     * @demo {@link https://sandcastle.cesium.com/index.html?src=KML.html|Cesium Sandcastle KML Demo}\n     *\n     * @example\n     * var viewer = new Cesium.Viewer('cesiumContainer');\n     * viewer.dataSources.add(Cesium.KmlDataSource.load('../../SampleData/facilities.kmz',\n     *      {\n     *           camera: viewer.scene.camera,\n     *           canvas: viewer.scene.canvas\n     *      })\n     * );\n     */\n    function KmlDataSource(options) {\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n        var camera = options.camera;\n        var canvas = options.canvas;\n\n        \n\n        this._changed = new Event();\n        this._error = new Event();\n        this._loading = new Event();\n        this._refresh = new Event();\n        this._unsupportedNode = new Event();\n\n        this._clock = undefined;\n        this._entityCollection = new EntityCollection(this);\n        this._name = undefined;\n        this._isLoading = false;\n        this._pinBuilder = new PinBuilder();\n        this._networkLinks = new AssociativeArray();\n        this._entityCluster = new EntityCluster();\n\n        this._canvas = canvas;\n        this._camera = camera;\n        this._lastCameraView = {\n            position : defined(camera) ? Cartesian3.clone(camera.positionWC) : undefined,\n            direction : defined(camera) ? Cartesian3.clone(camera.directionWC) : undefined,\n            up : defined(camera) ? Cartesian3.clone(camera.upWC) : undefined,\n            bbox : defined(camera) ? camera.computeViewRectangle() : Rectangle.clone(Rectangle.MAX_VALUE)\n        };\n\n        this._ellipsoid = defaultValue(options.ellipsoid, Ellipsoid.WGS84);\n\n        // User specified credit\n        var credit = options.credit;\n        if (typeof credit === 'string') {\n            credit = new Credit(credit);\n        }\n        this._credit = credit;\n\n        // Create a list of Credit's from the resource that the user can't remove\n        this._resourceCredits = [];\n    }\n\n    /**\n     * Creates a Promise to a new instance loaded with the provided KML data.\n     *\n     * @param {Resource|String|Document|Blob} data A url, parsed KML document, or Blob containing binary KMZ data or a parsed KML document.\n     * @param {Object} options An object with the following properties:\n     * @param {Camera} options.camera The camera that is used for viewRefreshModes and sending camera properties to network links.\n     * @param {Canvas} options.canvas The canvas that is used for sending viewer properties to network links.\n     * @param {String} [options.sourceUri] Overrides the url to use for resolving relative links and other KML network features.\n     * @param {Boolean} [options.clampToGround=false] true if we want the geometry features (Polygons, LineStrings and LinearRings) clamped to the ground.\n     * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The global ellipsoid used for geographical calculations.\n     * @param {Credit|String} [options.credit] A credit for the data source, which is displayed on the canvas.\n     *\n     * @returns {Promise.<KmlDataSource>} A promise that will resolve to a new KmlDataSource instance once the KML is loaded.\n     */\n    KmlDataSource.load = function(data, options) {\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n        var dataSource = new KmlDataSource(options);\n        return dataSource.load(data, options);\n    };\n\n    defineProperties(KmlDataSource.prototype, {\n        /**\n         * Gets or sets a human-readable name for this instance.\n         * This will be automatically be set to the KML document name on load.\n         * @memberof KmlDataSource.prototype\n         * @type {String}\n         */\n        name : {\n            get : function() {\n                return this._name;\n            },\n            set : function(value) {\n                if (this._name !== value) {\n                    this._name = value;\n                    this._changed.raiseEvent(this);\n                }\n            }\n        },\n        /**\n         * Gets the clock settings defined by the loaded KML. This represents the total\n         * availability interval for all time-dynamic data. If the KML does not contain\n         * time-dynamic data, this value is undefined.\n         * @memberof KmlDataSource.prototype\n         * @type {DataSourceClock}\n         */\n        clock : {\n            get : function() {\n                return this._clock;\n            }\n        },\n        /**\n         * Gets the collection of {@link Entity} instances.\n         * @memberof KmlDataSource.prototype\n         * @type {EntityCollection}\n         */\n        entities : {\n            get : function() {\n                return this._entityCollection;\n            }\n        },\n        /**\n         * Gets a value indicating if the data source is currently loading data.\n         * @memberof KmlDataSource.prototype\n         * @type {Boolean}\n         */\n        isLoading : {\n            get : function() {\n                return this._isLoading;\n            }\n        },\n        /**\n         * Gets an event that will be raised when the underlying data changes.\n         * @memberof KmlDataSource.prototype\n         * @type {Event}\n         */\n        changedEvent : {\n            get : function() {\n                return this._changed;\n            }\n        },\n        /**\n         * Gets an event that will be raised if an error is encountered during processing.\n         * @memberof KmlDataSource.prototype\n         * @type {Event}\n         */\n        errorEvent : {\n            get : function() {\n                return this._error;\n            }\n        },\n        /**\n         * Gets an event that will be raised when the data source either starts or stops loading.\n         * @memberof KmlDataSource.prototype\n         * @type {Event}\n         */\n        loadingEvent : {\n            get : function() {\n                return this._loading;\n            }\n        },\n        /**\n         * Gets an event that will be raised when the data source refreshes a network link.\n         * @memberof KmlDataSource.prototype\n         * @type {Event}\n         */\n        refreshEvent : {\n            get : function() {\n                return this._refresh;\n            }\n        },\n        /**\n         * Gets an event that will be raised when the data source finds an unsupported node type.\n         * @memberof KmlDataSource.prototype\n         * @type {Event}\n         */\n        unsupportedNodeEvent : {\n            get : function() {\n                return this._unsupportedNode;\n            }\n        },\n        /**\n         * Gets whether or not this data source should be displayed.\n         * @memberof KmlDataSource.prototype\n         * @type {Boolean}\n         */\n        show : {\n            get : function() {\n                return this._entityCollection.show;\n            },\n            set : function(value) {\n                this._entityCollection.show = value;\n            }\n        },\n\n        /**\n         * Gets or sets the clustering options for this data source. This object can be shared between multiple data sources.\n         *\n         * @memberof KmlDataSource.prototype\n         * @type {EntityCluster}\n         */\n        clustering : {\n            get : function() {\n                return this._entityCluster;\n            },\n            set : function(value) {\n                \n                this._entityCluster = value;\n            }\n        },\n        /**\n         * Gets the credit that will be displayed for the data source\n         * @memberof KmlDataSource.prototype\n         * @type {Credit}\n         */\n        credit : {\n            get : function() {\n                return this._credit;\n            }\n        }\n    });\n\n    /**\n     * Asynchronously loads the provided KML data, replacing any existing data.\n     *\n     * @param {Resource|String|Document|Blob} data A url, parsed KML document, or Blob containing binary KMZ data or a parsed KML document.\n     * @param {Object} [options] An object with the following properties:\n     * @param {Resource|String} [options.sourceUri] Overrides the url to use for resolving relative links and other KML network features.\n     * @param {Boolean} [options.clampToGround=false] true if we want the geometry features (Polygons, LineStrings and LinearRings) clamped to the ground. If true, lines will use corridors so use Entity.corridor instead of Entity.polyline.\n     * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The global ellipsoid used for geographical calculations.\n     *\n     * @returns {Promise.<KmlDataSource>} A promise that will resolve to this instances once the KML is loaded.\n     */\n    KmlDataSource.prototype.load = function(data, options) {\n        \n\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n        DataSource.setLoading(this, true);\n\n        var oldName = this._name;\n        this._name = undefined;\n        this._clampToGround = defaultValue(options.clampToGround, false);\n\n        var that = this;\n        return load(this, this._entityCollection, data, options).then(function() {\n            var clock;\n\n            var availability = that._entityCollection.computeAvailability();\n\n            var start = availability.start;\n            var stop = availability.stop;\n            var isMinStart = JulianDate.equals(start, Iso8601.MINIMUM_VALUE);\n            var isMaxStop = JulianDate.equals(stop, Iso8601.MAXIMUM_VALUE);\n            if (!isMinStart || !isMaxStop) {\n                var date;\n\n                //If start is min time just start at midnight this morning, local time\n                if (isMinStart) {\n                    date = new Date();\n                    date.setHours(0, 0, 0, 0);\n                    start = JulianDate.fromDate(date);\n                }\n\n                //If stop is max value just stop at midnight tonight, local time\n                if (isMaxStop) {\n                    date = new Date();\n                    date.setHours(24, 0, 0, 0);\n                    stop = JulianDate.fromDate(date);\n                }\n\n                clock = new DataSourceClock();\n                clock.startTime = start;\n                clock.stopTime = stop;\n                clock.currentTime = JulianDate.clone(start);\n                clock.clockRange = ClockRange.LOOP_STOP;\n                clock.clockStep = ClockStep.SYSTEM_CLOCK_MULTIPLIER;\n                clock.multiplier = Math.round(Math.min(Math.max(JulianDate.secondsDifference(stop, start) / 60, 1), 3.15569e7));\n            }\n\n            var changed = false;\n            if (clock !== that._clock) {\n                that._clock = clock;\n                changed = true;\n            }\n\n            if (oldName !== that._name) {\n                changed = true;\n            }\n\n            if (changed) {\n                that._changed.raiseEvent(that);\n            }\n\n            DataSource.setLoading(that, false);\n\n            return that;\n        }).otherwise(function(error) {\n            DataSource.setLoading(that, false);\n            that._error.raiseEvent(that, error);\n            console.log(error);\n            return when.reject(error);\n        });\n    };\n\n    function mergeAvailabilityWithParent(child) {\n        var parent = child.parent;\n        if (defined(parent)) {\n            var parentAvailability = parent.availability;\n            if (defined(parentAvailability)) {\n                var childAvailability = child.availability;\n                if (defined(childAvailability)) {\n                    childAvailability.intersect(parentAvailability);\n                } else {\n                    child.availability = parentAvailability;\n                }\n            }\n        }\n    }\n\n    function getNetworkLinkUpdateCallback(dataSource, networkLink, newEntityCollection, networkLinks, processedHref) {\n        return function(rootElement) {\n            if (!networkLinks.contains(networkLink.id)) {\n                // Got into the odd case where a parent network link was updated while a child\n                //  network link update was in flight, so just throw it away.\n                return;\n            }\n            var remove = false;\n            var networkLinkControl = queryFirstNode(rootElement, 'NetworkLinkControl', namespaces.kml);\n            var hasNetworkLinkControl = defined(networkLinkControl);\n\n            var minRefreshPeriod = 0;\n            if (hasNetworkLinkControl) {\n                if (defined(queryFirstNode(networkLinkControl, 'Update', namespaces.kml))) {\n                    oneTimeWarning('kml-networkLinkControl-update', 'KML - NetworkLinkControl updates aren\\'t supported.');\n                    networkLink.updating = false;\n                    networkLinks.remove(networkLink.id);\n                    return;\n                }\n                networkLink.cookie = queryToObject(defaultValue(queryStringValue(networkLinkControl, 'cookie', namespaces.kml), ''));\n                minRefreshPeriod = defaultValue(queryNumericValue(networkLinkControl, 'minRefreshPeriod', namespaces.kml), 0);\n            }\n\n            var now = JulianDate.now();\n            var refreshMode = networkLink.refreshMode;\n            if (refreshMode === RefreshMode.INTERVAL) {\n                if (defined(networkLinkControl)) {\n                    networkLink.time = Math.max(minRefreshPeriod, networkLink.time);\n                }\n            } else if (refreshMode === RefreshMode.EXPIRE) {\n                var expires;\n                if (defined(networkLinkControl)) {\n                    expires = queryStringValue(networkLinkControl, 'expires', namespaces.kml);\n                }\n                if (defined(expires)) {\n                    try {\n                        var date = JulianDate.fromIso8601(expires);\n                        var diff = JulianDate.secondsDifference(date, now);\n                        if (diff > 0 && diff < minRefreshPeriod) {\n                            JulianDate.addSeconds(now, minRefreshPeriod, date);\n                        }\n                        networkLink.time = date;\n                    } catch (e) {\n                        oneTimeWarning('kml-networkLinkControl-expires', 'KML - NetworkLinkControl expires is not a valid date');\n                        remove = true;\n                    }\n                } else {\n                    oneTimeWarning('kml-refreshMode-onExpire', 'KML - refreshMode of onExpire requires the NetworkLinkControl to have an expires element');\n                    remove = true;\n                }\n            }\n\n            var networkLinkEntity = networkLink.entity;\n            var entityCollection = dataSource._entityCollection;\n            var newEntities = newEntityCollection.values;\n\n            function removeChildren(entity) {\n                entityCollection.remove(entity);\n                var children = entity._children;\n                var count = children.length;\n                for (var i = 0; i < count; ++i) {\n                    removeChildren(children[i]);\n                }\n            }\n\n            // Remove old entities\n            entityCollection.suspendEvents();\n            var entitiesCopy = entityCollection.values.slice();\n            var i;\n            for (i = 0; i < entitiesCopy.length; ++i) {\n                var entityToRemove = entitiesCopy[i];\n                if (entityToRemove.parent === networkLinkEntity) {\n                    entityToRemove.parent = undefined;\n                    removeChildren(entityToRemove);\n                }\n            }\n            entityCollection.resumeEvents();\n\n            // Add new entities\n            entityCollection.suspendEvents();\n            for (i = 0; i < newEntities.length; i++) {\n                var newEntity = newEntities[i];\n                if (!defined(newEntity.parent)) {\n                    newEntity.parent = networkLinkEntity;\n                    mergeAvailabilityWithParent(newEntity);\n                }\n                entityCollection.add(newEntity);\n            }\n            entityCollection.resumeEvents();\n\n            // No refresh information remove it, otherwise update lastUpdate time\n            if (remove) {\n                networkLinks.remove(networkLink.id);\n            } else {\n                networkLink.lastUpdated = now;\n            }\n\n            var availability = entityCollection.computeAvailability();\n\n            var start = availability.start;\n            var stop = availability.stop;\n            var isMinStart = JulianDate.equals(start, Iso8601.MINIMUM_VALUE);\n            var isMaxStop = JulianDate.equals(stop, Iso8601.MAXIMUM_VALUE);\n            if (!isMinStart || !isMaxStop) {\n                var clock = dataSource._clock;\n\n                if (clock.startTime !== start || clock.stopTime !== stop) {\n                    clock.startTime = start;\n                    clock.stopTime = stop;\n                    dataSource._changed.raiseEvent(dataSource);\n                }\n            }\n\n            networkLink.updating = false;\n            networkLink.needsUpdate = false;\n            dataSource._refresh.raiseEvent(dataSource, processedHref.getUrlComponent(true));\n        };\n    }\n\n    var entitiesToIgnore = new AssociativeArray();\n\n    /**\n     * Updates any NetworkLink that require updating\n     * @function\n     *\n     * @param {JulianDate} time The simulation time.\n     * @returns {Boolean} True if this data source is ready to be displayed at the provided time, false otherwise.\n     */\n    KmlDataSource.prototype.update = function(time) {\n        var networkLinks = this._networkLinks;\n        if (networkLinks.length === 0) {\n            return true;\n        }\n\n        var now = JulianDate.now();\n        var that = this;\n\n        entitiesToIgnore.removeAll();\n\n        function recurseIgnoreEntities(entity) {\n            var children = entity._children;\n            var count = children.length;\n            for (var i = 0; i < count; ++i) {\n                var child = children[i];\n                entitiesToIgnore.set(child.id, child);\n                recurseIgnoreEntities(child);\n            }\n        }\n\n        var cameraViewUpdate = false;\n        var lastCameraView = this._lastCameraView;\n        var camera = this._camera;\n        if (defined(camera) &&\n            !(camera.positionWC.equalsEpsilon(lastCameraView.position, CesiumMath.EPSILON7) &&\n            camera.directionWC.equalsEpsilon(lastCameraView.direction, CesiumMath.EPSILON7) &&\n            camera.upWC.equalsEpsilon(lastCameraView.up, CesiumMath.EPSILON7))) {\n\n            // Camera has changed so update the last view\n            lastCameraView.position = Cartesian3.clone(camera.positionWC);\n            lastCameraView.direction = Cartesian3.clone(camera.directionWC);\n            lastCameraView.up = Cartesian3.clone(camera.upWC);\n            lastCameraView.bbox = camera.computeViewRectangle();\n            cameraViewUpdate = true;\n        }\n\n        var newNetworkLinks = new AssociativeArray();\n        var changed = false;\n        networkLinks.values.forEach(function(networkLink) {\n            var entity = networkLink.entity;\n            if (entitiesToIgnore.contains(entity.id)) {\n                return;\n            }\n\n            if (!networkLink.updating) {\n                var doUpdate = false;\n                if (networkLink.refreshMode === RefreshMode.INTERVAL) {\n                    if (JulianDate.secondsDifference(now, networkLink.lastUpdated) > networkLink.time) {\n                        doUpdate = true;\n                    }\n                }\n                else if (networkLink.refreshMode === RefreshMode.EXPIRE) {\n                    if (JulianDate.greaterThan(now, networkLink.time)) {\n                        doUpdate = true;\n                    }\n\n                } else if (networkLink.refreshMode === RefreshMode.STOP) {\n                    if (cameraViewUpdate) {\n                        networkLink.needsUpdate = true;\n                        networkLink.cameraUpdateTime = now;\n                    }\n\n                    if (networkLink.needsUpdate && JulianDate.secondsDifference(now, networkLink.cameraUpdateTime) >= networkLink.time) {\n                        doUpdate = true;\n                    }\n                }\n\n                if (doUpdate) {\n                    recurseIgnoreEntities(entity);\n                    networkLink.updating = true;\n                    var newEntityCollection = new EntityCollection();\n                    var href = networkLink.href.clone();\n\n                    href.setQueryParameters(networkLink.cookie);\n                    var ellipsoid = defaultValue(that._ellipsoid, Ellipsoid.WGS84);\n                    processNetworkLinkQueryString(href, that._camera, that._canvas, networkLink.viewBoundScale, lastCameraView.bbox, ellipsoid);\n\n                    load(that, newEntityCollection, href, {context : entity.id})\n                        .then(getNetworkLinkUpdateCallback(that, networkLink, newEntityCollection, newNetworkLinks, href))\n                        .otherwise(function(error) {\n                            var msg = 'NetworkLink ' + networkLink.href + ' refresh failed: ' + error;\n                            console.log(msg);\n                            that._error.raiseEvent(that, msg);\n                        });\n                    changed = true;\n                }\n            }\n            newNetworkLinks.set(networkLink.id, networkLink);\n        });\n\n        if (changed) {\n            this._networkLinks = newNetworkLinks;\n            this._changed.raiseEvent(this);\n        }\n\n        return true;\n    };\n\n    /**\n     * Contains KML Feature data loaded into the <code>Entity.kml</code> property by {@link KmlDataSource}.\n     * @alias KmlFeatureData\n     * @constructor\n     */\n    function KmlFeatureData() {\n        /**\n         * Gets the atom syndication format author field.\n         * @type Object\n         */\n        this.author = {\n            /**\n             * Gets the name.\n             * @type String\n             * @alias author.name\n             * @memberof! KmlFeatureData#\n             * @property author.name\n             */\n            name : undefined,\n            /**\n             * Gets the URI.\n             * @type String\n             * @alias author.uri\n             * @memberof! KmlFeatureData#\n             * @property author.uri\n             */\n            uri : undefined,\n            /**\n             * Gets the email.\n             * @type String\n             * @alias author.email\n             * @memberof! KmlFeatureData#\n             * @property author.email\n             */\n            email : undefined\n        };\n\n        /**\n         * Gets the link.\n         * @type Object\n         */\n        this.link = {\n            /**\n             * Gets the href.\n             * @type String\n             * @alias link.href\n             * @memberof! KmlFeatureData#\n             * @property link.href\n             */\n            href : undefined,\n            /**\n             * Gets the language of the linked resource.\n             * @type String\n             * @alias link.hreflang\n             * @memberof! KmlFeatureData#\n             * @property link.hreflang\n             */\n            hreflang : undefined,\n            /**\n             * Gets the link relation.\n             * @type String\n             * @alias link.rel\n             * @memberof! KmlFeatureData#\n             * @property link.rel\n             */\n            rel : undefined,\n            /**\n             * Gets the link type.\n             * @type String\n             * @alias link.type\n             * @memberof! KmlFeatureData#\n             * @property link.type\n             */\n            type : undefined,\n            /**\n             * Gets the link title.\n             * @type String\n             * @alias link.title\n             * @memberof! KmlFeatureData#\n             * @property link.title\n             */\n            title : undefined,\n            /**\n             * Gets the link length.\n             * @type String\n             * @alias link.length\n             * @memberof! KmlFeatureData#\n             * @property link.length\n             */\n            length : undefined\n        };\n\n        /**\n         * Gets the unstructured address field.\n         * @type String\n         */\n        this.address = undefined;\n        /**\n         * Gets the phone number.\n         * @type String\n         */\n        this.phoneNumber = undefined;\n        /**\n         * Gets the snippet.\n         * @type String\n         */\n        this.snippet = undefined;\n        /**\n         * Gets the extended data, parsed into a JSON object.\n         * Currently only the <code>Data</code> property is supported.\n         * <code>SchemaData</code> and custom data are ignored.\n         * @type String\n         */\n        this.extendedData = undefined;\n    }\n\n    // For testing\n    KmlDataSource._DeferredLoading = DeferredLoading;\n    KmlDataSource._getTimestamp = getTimestamp;\n\nexport default KmlDataSource;\n"],"sourceRoot":""}